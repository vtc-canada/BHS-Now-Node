

<div class="row-fluid" style="margin-top:20px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;"><%=__('Airlines') %></span>
                <div style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="save_default_destinations"><%=__('Save') %></div>
        </div>
        <div class="row-fluid" id="iframediv" >
            <div class="row-fluid">
                <div class="row-fluid sort-destination-plan-titles airline-config-titles">
                    <div class="row-fluid">
                        <div class="span3 offset1">
                            <%=__('Airline') %>
                        </div>
                        <div class="span4 ">
                            <%=__('Carrier Destination') %>
                        </div>
                        <div class="span4">
                            <%=__('Sort Mode') %>
                        </div>
                    </div>
                </div>
                <div class="row-fluid" id="defaultdestinations">

                </div>
            </div>
        </div>
    </div>
</div>


<!-- Default Destination Row Template -->
<script type="text/template" id="default-destination-template">
    <div class="row-fluid section-config-wrapper">
        <div class="span3 offset1">
            <label class="mobile-label"><%=__('Carrier') %>:</label><label class="mobile-element" style="cursor:default;">{{= carrier }}</label>
        </div>
        <div class="span4">
            <label class="mobile-label"><%=__('Carrier Destination') %>:</label>
            <select class="carrier_select mobile-element" id="select_{{= id }}" carrier_id="{{= id }}" >
            {{ for(var i=0; i< ref_sort_destinations.length; i++){ }}
                <option {{ if(default_destination == ref_sort_destinations[i].id){ }}selected="selected"{{ } }}    value="{{= ref_sort_destinations[i].id }}">{{= ref_sort_destinations[i].destination }}</option>
            {{ } }}
            </select>
        </div>
        <div class="span4">
            <label class="mobile-label"><%=__('Sort Mode') %>:</label>
            <select class="carrier_sort_mode mobile-element" id="sort_{{= id }}" mode_id="{{= id }}" >
                {{ if(carrier_sort_active==1){ }}
                   <option value="carrier_sort_active" selected="selected"><%=__('Sort By Carrier') %></option>
                   <option value="flight_sort_active"><%=__('Sort By Flight') %></option>
                {{ }else{ }}
                    <option value="carrier_sort_active" ><%=__('Sort By Carrier') %></option>
                    <option value="flight_sort_active" selected="selected"><%=__('Sort By Flight') %></option>
                {{ } }}
            </select>
        </div>

    </div>
</script>



<script>

    var defaultdestinations;          // Collection for airline configuration rows
    var ref_sort_destinations = new Array();      // sort_destinations, lookup, populated on page startup
    $(document).ready(function(){
    	socket.on('connect',initialize);
    });
    function initialize(){

           ///once it sets up the sort_destinations, it fetches the collection
        socket.get("/airlineconfiguration/getRef_sort_destinations",{},function(ref_defs){
            if(ref_defs.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
                location.reload(); // Will boot back to login screen
            }
            for(var i=0; i<ref_defs.length;i++){

                ref_sort_destinations.push({'id':ref_defs[i].id, 'destination':ref_defs[i].destination});
            }
            defaultdestinations.fetch();
        });

        //////////////////////////////////////////////////
        //////// defaultcarrierdestination ///////////////
        //////////////////////////////////////////////////

        var DefaultDestinationModel = Backbone.Model.extend({
            urlRoot: ''
        });

        var SailsDefaultDestinationCollection = Backbone.Collection.extend({
            sailsCollection: "",
            socket: null,
            sync: function(method, model, options){
                var where = {};
                if (options.where) {
                    where = {
                        where: options.where
                    }
                }
                if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
                    this.socket = socket;

                    this.socket.get("/" + this.sailsCollection, where, _.bind(function(ddestinations){
                        if(ddestinations.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
                            location.reload(); // Will boot back to login screen
                        }
                        this.set(ddestinations);
                        defaultDestinationView.render();
                    }, this));
                }
            }
        });

        var DefaultDestinationCollection = SailsDefaultDestinationCollection.extend({
            sailsCollection: 'airlineconfiguration/getCarriers',
            model: DefaultDestinationModel
        });

        defaultdestinations = new DefaultDestinationCollection();




        var DefaultDestinationView = Backbone.View.extend({
            el: '#defaultdestinations',
            initialize: function () {
            },events:{
                  'change select.carrier_select' : 'destination_changed',
                  'change select.carrier_sort_mode':'carrier_sort_mode_changed'
            },
            carrier_sort_mode_changed:function(event){
                var carrier_ID = $(event.currentTarget).attr('mode_id');
                if($(event.currentTarget).val()=='carrier_sort_active'){
                    defaultdestinations.get(carrier_ID).set('carrier_sort_active',1);
                    defaultdestinations.get(carrier_ID).set('flight_sort_active',0);
                }else{
                    defaultdestinations.get(carrier_ID).set('carrier_sort_active',0);
                    defaultdestinations.get(carrier_ID).set('flight_sort_active',1);
                }
            },
            destination_changed:function(event){
                var carrier_ID = $(event.currentTarget).attr('carrier_id');
                defaultdestinations.get(carrier_ID).set('default_destination',$(event.currentTarget).val());
            },
            template: _.template($('#default-destination-template').html()),
            render: function () {
                this.$el.html("");
                var tcollection = this.collection.sortBy(function(message){
                    return message.get("carrier");
                });
                for(var i=0; i<tcollection.length; i++)
                {
                    this.$el.append(this.template(tcollection[i].toJSON()));
                }

                $('#defaultdestinations > div.section-config-wrapper:even').addClass('odd');
                $('#defaultdestinations > div.section-config-wrapper:odd').addClass('even');
            }

        });

        var defaultDestinationView = new DefaultDestinationView({collection: defaultdestinations});

        // Saves the airline configurations
        // passes in all the configurations
        // displays alert banners on success/failure
        $('#save_default_destinations').click(function(){

            $('.alert').remove();
            var params = {'cfg_carrier_vals':defaultdestinations.toJSON()};

            socket.get("/airlineconfiguration/saveCfg_Carrier_Defs", params,function(data){
                if(typeof(data.error)!='undefined'){
                    location.reload(); // Will boot back to login screen
                    return;
                }
                 if(typeof(data.success)!='undefined'){
                 	bannerAlert('success','<%=__('FormSuccess')%>',data.success);
                 }
            });
        });
    }

</script>