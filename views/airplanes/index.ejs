<div class="row-fluid create-report-controls-wrapper">
	<div class="span10 offset1 report-control-left-label"  style="min-height: 30px;padding-top: 5px; font-size:18px; font-weight:bold;margin-top: 33px;">
		<i class="icon-search icon-2x banner-icon-top" style="margin-top: -12px; margin-right: 10px;"></i><div class="banner-div-text"><%=  __('Search') %></div>
	</div>
</div>

<div class="row-fluid create-report-controls-wrapper">
    <div class="row">
        <div class="span10 offset2 create-report-controls" style="padding-top: 20px;">
           <div class="row-fluid">
               <div class="row">
                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_airplane"><%= __('Airplane Details') %>:</label></div>
                   <div class="span8 report-control-right-control">
                       <input type="text" id="search_airplane" value="">
                   </div>
               </div>
               <div class="row">
               <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_owner"><%= __('Owner') %>:</label></div>
               <div class="span8 report-control-right-control">
                   <input type="text" id="search_owner" value="">
               </div>
           </div>
           </div>
        </div>
    </div>
</div>

<div class="row-fluid" style="margin-top:19px; margin-bottom:25px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;"><%= __('Airplanes') %></span>
        	<% if(req.session.user.policy[req.route.path].update==1){ %><div style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="create_airplane"><%= __('Create New User') %></div><% } %>
         </div>
        <div class="row-fluid key-indicaters-frame" id="iframediv">
            <div class="row-fluid">
                <table id="airplanes" class="display" cellspacing="0" width="100%">
			        <thead>
		            <tr>
		            	<th>Id</th>
		                <th><%= __('SerialNumber') %></th>
		                <th><%= __('ResourceCategory') %></th>
		                <th><%= __('WingType') %></th>
		                <th><%= __('CallSign') %></th>
		                <th><%= __('Owner') %></th>
		                <th><%= __('Seats') %></th>
		            </tr>
		            </thead>		 
			    </table>
            </div>
        </div>
    </div>
</div>
<script type="text/template" id="airplane-template">
	<div class="row-fluid form-segment-wrapper" style="position:relative; cursor:default;" airplane_id="{{=airplane_id}}">
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label"><%= __('Resource Category') %>:</div>
			<div class="span7"><select id="resourceCategoryCombobox" class="resourceCategoryCombobox" value=""></select></div>	
		</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="span5 segment-label" style="min-height:40px;"><%= __('WingType') %>:</div>
		<div class="span7"><select id="wingTypeCombobox" class="wingTypeCombobox" value=""></select></div>	
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="span5 segment-label" style="min-height:40px;"><%= __('CallSign') %>:</div>
		<div class="span7" style="min-height:40px;"><input type="text" id="call_sign" class="contact_name" value="{{=call_sign}}"></div>
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="span5 segment-label"><%= __('SerialNumber') %>:</div>
		<div class="span5"><input type="text" id="serial_number" value="{{=serial_number}}"></div>
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="row-fluid">
				<div class="row-fluid building-segment-wrapper">
					<div class="span5 segment-label"><%= __('Owner') %>:</div>
					<div class="span5"><select id="companyCombobox" class="companyCombobox" value=""></select></div>				
				</div>
		</div>
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="span5 segment-label"><%= __('NumOfSeats') %>:</div>
		<div class="span5"><input type="number" id="seats" min="0"  value="{{=seats}}"></div>
	</div>
</div>
</script>

<div class="row-fluid edit-item-section" style="display:none; margin-top:19px; margin-bottom:35px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;" id="building-section-title">Edit Airplane Details</span>
         	<% if(req.session.user.policy[req.route.path].update==1){ %><button style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="save_airplane"><i class="only-mobile icon-save"></i><span class="only-desktop">Save</span></button><% } %>
         	<% if(req.session.user.policy[req.route.path].update==1){ %><button style="margin-right:10px;font-weight: 400;" class="btn btn-danger pull-right save_pull" id="delete_airplane"><i class="only-mobile icon-trash"></i><span class="only-desktop">Delete</span></button><% } %>
         	<button style="margin-right:10px;font-weight: 400;" class="btn pull-right save_pull" id="cancel_airplane"><i class="only-mobile icon-circle-arrow-left"></i><span class="only-desktop">Cancel</span></button>
         	<% if(req.session.user.policy[req.route.path].update==1){ %><div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="changes_pending">Changes Pending. &nbsp;</div><% } %>
  		 </div>
        <div class="row-fluid " id="iframediv">
        	<div class="content-wrapper building-details-frame">
    			<div class="row-fluid">
					<div class="span12">
						<div class="row-fluid">
							<div class="row-category">
								<span class="" id="sales_title">
									<i class="icon-plus-sign" style="margin-right:10px; display:none;"></i>
									<i class="icon-pencil"></i> &nbsp&nbsp<b>Airplane Information</b>
								</span>
								<div class="pull-right" style="height:40px; display:none;">
									<span  id="delete_mapping" class="row-category-button-wrapper">
										<span class="btn btn-danger">
						                    <i class="glyphicon glyphicon-plus"></i>
						                    <span>Delete Mapping</span>
						                </span>
									</span>
								</div>
								<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="new_contact_pending">Contact Created. &nbsp;</div>
								<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="mapped_contact_pending">Mapping Changed. &nbsp;</div>
								<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="modified_contact_pending">Contact Modified. &nbsp;</div>

							</div>
						</div>
					</div>
				</div>
			
				<div id="airplane_information_section" class="row-fluid">
				</div>
					
 		
				<div class="note-wrapper" style="display:none;">				
	        		<div class="row-fluid">
						<div class="span12">
							<div class="row-fluid">
								<div class="row-category">
									<i class="icon-pencil"></i> &nbsp&nbsp<b>Note History</b>
									<div class="pull-right" style="height:40px;">
										<span class="row-category-button-wrapper">
											<span id="create_note" class="btn btn-success">
												<span><i class="only-mobile icon-file-alt"></i><span class="only-desktop">Create Note</span></span>
							                </span>
										</span>
									</div>
									<% if(req.session.user.policy[req.route.path].delete==0){ %>
											<div class="pull-right" style="height:40px;">
												<span class="row-category-button-wrapper" id="save_note_parent">
													<span id="save_notes" class="btn btn-primary">
									                    <span><i class="only-mobile icon-save"></i><span class="only-desktop">Save Notes</span></span>
									                </span>
												</span>
											</div>
						         	<% }else{ %>
						         			<div class="pull-right" style="height:40px;">
												<span class="row-category-button-wrapper" id="save_note_parent">
													<button id="save_note_admin" class="btn btn-primary">
									                    <span><i class="only-mobile icon-save"></i><span class="only-desktop">Save</span></span>
									                </button>
												</span>
											</div>
						         	
						         	<% } %>											
						         	<% if(true||req.session.user.policy[req.route.path].update==0){ %>
						         	<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="changes_pending_notes">Changes Pending. &nbsp;</div>
						         	<% } %>
								</div>
							</div>
						</div>
					</div>					
					<div id="notes-table-header" class="tableheader row-fluid">
						<div class="span2">
							Timestamp
						</div>
						<div class="span2">
							User
						</div>
						<div class="span6">
							Details
						</div>
						<div class="span2">
							Modify
						</div>
					</div>
					<div id="notes-wrapper" class="row-fluid css-notes-wrapper">					
					</div>
	        	</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal - confirms you want to continue to delete airplane -->
<div id="deleteModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabeldelete"></h3>
    </div>
    <div class="modal-body">
        <p>One fine body…</p>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true"><%= __('Cancel')%></button>
        <button class="btn btn-danger" data-dismiss="modal" aria-hidden="true" id="confirmdelete"><%=  __('Delete') %></button>
    </div>
</div>


<script type="text/template" id="notes-template">
	<div class="row-fluid note" noteid="{{=id}}">
		<div class="span2">
			{{=note_datetime}}
		</div>
		<div class="span2">
			{{=user}}
		</div>
		<div class="span6"><div class="note-editable">{{=note}}</div></div>
		<div class="span2" style="padding-top:0px;">
			<div class="row-fluid" style="padding:6px;">
				{{ if(user=='<%=req.session.user.username%>'||<%=req.session.user.policy[req.route.path].update==1%>){ }}<a class="edit-note" style="color:#0F74BC;cursor:pointer;padding-right:6px;"><i class="icon-edit icon-2x"></i></a>{{ } }}
				{{ if(user=='<%=req.session.user.username%>'||<%=req.session.user.policy[req.route.path].update==1%>){ }}<a class="delete-note" style="color:red;cursor:pointer;"><i class="icon-remove-sign icon-2x"></i></a>{{ } }}
			</div>
		</div>
	</div>
</script>

<script>

    $(document).ready(function(){
	
        
    	var init_id = <%=typeof(init_id)!='undefined'?init_id:null%>;    	
    	var curAirplanesVal = '';
		var airplanesSearchTimer;
		var airplanesCombobox;
		var curOwnerVal = '';
		var curWingTypeVal = '';
		var curResourceCategory = '';
		var companySearchTimer;
		var companyCombobox;
		var wingTypeCombobox;
		var resourceCategoryCombobox;
    	var blockNoteSave = false;
    	
	    function LoadOwner(){
	    	socket.get('/airplanes/getcompaniesbyname',{},function(res){
	    		$('select.companyCombobox').append('<option value=""></option>');
	    		for(var i=0;i<res.length;i++){
	        		$('select.companyCombobox').append('<option value="'+res[i].company_id+'">'+res[i].company_name+'</option>');
	        		if(airplane.get('owner') == res[i].company_id){
	        			$('select.companyCombobox').val(res[i].company_id);
	        		}	
	        	}
	        	companyCombobox = $('select.companyCombobox').combobox();
	        	$('input.companyCombobox').on('keyup',function(e){
	        		if(curOwnerVal!=$('input.companyCombobox').val()&&e.keyCode!=9&&e.keyCode!=13&&e.keyCode!=27){
	    				curOwnerVal =  $('input.companyCombobox').val();
	        		}
	        		else if(e.keyCode==9||e.keyCode==13||e.keyCode==27){
	        			$('input.companyCombobox').change();
	    			}
	    		});
	    		
			});
	    };
	    
	    function LoadWingType(){
	    	socket.get('/airplanes/getwingtypebyresource',{search: airplane.get('resource_category')},function(res){
	    		$('select.wingTypeCombobox').append('<option value=""></option>');
	    		for(var i=0;i<res.length;i++){
		        		$('select.wingTypeCombobox').append('<option value="'+res[i].type+'">'+res[i].type+'</option>');
		        		if(airplane.get('wing_type') == res[i].type){
		        			$('select.wingTypeCombobox').val(res[i].type);
		        		}		        		
	        	}
	    		wingTypeCombobox = $('select.wingTypeCombobox').combobox();
	        	$('input.wingTypeCombobox').on('keyup',function(e){
	        		if(curWingTypeVal!=$('input.wingTypeCombobox').val()&&e.keyCode!=9&&e.keyCode!=13&&e.keyCode!=27){
	        			curWingTypeVal =  $('input.wingTypeCombobox').val();
	    			}
	        		else if(e.keyCode==9||e.keyCode==13||e.keyCode==27){
	        			$('input.wingTypeCombobox').change();
	    			}
	    		});
	    		
			});
	    };
	    
	    function LoadResourceCategory(){
	    	socket.get('/airplanes/getresourcecategories',{},function(res){
	    		$('select.resourceCategoryCombobox').append('<option value=""></option>');
	    		for(var i=0;i<res.length;i++){
		        		$('select.resourceCategoryCombobox').append('<option value="'+res[i].category+'">'+res[i].category+'</option>');
		        		if(airplane.get('resource_category') == res[i].category){
		        			$('select.resourceCategoryCombobox').val(res[i].category);
		        		}		        		
	        	}
	    		resourceCategoryCombobox = $('select.resourceCategoryCombobox').combobox();
	        	$('select.resourceCategoryCombobox').on('change',function(e){
	        		if(curResourceCategory!=$('select.resourceCategoryCombobox').val()&&e.keyCode!=9&&e.keyCode!=13&&e.keyCode!=27){
	        			curResourceCategory =  $('select.resourceCategoryCombobox').val();
	        			airplane.set('wing_type')
	        			airplane.set('wing_type',null);
	        			UpdateWingTypeCombobox();
	    			}
	        		else if(e.keyCode==9||e.keyCode==13||e.keyCode==27){
	        			$('input.resourceCategoryCombobox').change();
	    			}
	    		});
	    		
			});
	    };
		 
		function UpdateWingTypeCombobox(){
			clearTimeout(companySearchTimer);
    		companySearchTimer = setTimeout(function(){
    			socket.get('/airplanes/getwingtypebyresource',{search : curResourceCategory},function(res){
    				$('select.wingTypeCombobox').empty();
        			$('select.wingTypeCombobox').append('<option value=""></option>');
        			$('input.wingTypeCombobox').val("");
    	    		for(var i=0;i<res.length;i++){
    	    			$('select.wingTypeCombobox').append('<option value="'+res[i].type+'">'+res[i].type+'</option>');
		        		if(airplane.get('wing_type') == res[i].type){
		        			$('select.wingTypeCombobox').val(res[i].type);
		        		}		        		
    	    		}
		    		wingTypeCombobox.data('combobox').refresh(); 
    			});
    		},100);
		}
        	
        		
		var datatable = $('#airplanes').dataTable({
		        "processing": true,
		        "serverSide": true,
		        "dom":"tipr",
		        "ajax": {
		        	"url":"/airplanes/searchairplanes",
	        		"data":function(d){
	        			d.airplane_search = $("#search_airplane").val();
	        			d.owner_search = $("#search_owner").val();
	        		},
	        		error: function(xhr, error, thrown){
	        			if(error.toString()=='parsererror'){
	        				location.reload();
	        			}else{
		    				$('.page-banner').after('<div class="alert alert-error" style="border-radius:0px;">'+
			                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
			                        ''+error.toString()+'</div>');
			                
								if($('body').width()>979){
									$('.main-content').animate({
								        scrollTop: 0
								    }, 500);
								}else{
									$('html, body').animate({
								        scrollTop: 0
								    }, 500);
								}
		                }
	        			
	        		}
	        	},
		        "aoColumns":[
		 		        	{"mData":"airplane_id","visible":false}
		 			        ,{"mData":function(data,b){
		 			        	return '<b>'+data.serial_number+'</b>';
		 			        }
		 					}
		 			        ,{"mData":"resource_category"}
		 			        ,{"mData":"wing_type"}
		 			        ,{"mData":"call_sign"}
		 			        ,{"mData":"owner"}
		 			        ,{"mData":"seats"}
		 			        ],
		        "rowCallback": function( row, data, displayIndex ) {
					$(row).attr('airplane_id',data['airplane_id']);
					$(row).click(function(){
						$('.edit-item-section').css('display','');
						$('#delete_airplane').css('display','');
    					airplane.fetch({id:parseInt($(row).attr('airplane_id'))});    					
        				  
               		});
		        }
	    });
	    $('select[name=contacts_length]').css('margin-top','10px');
	    $('#contacts_length label').css('margin-bottom','0px');
	    
        $('#airplanes tbody').on('click', 'tr', function () {
        	$(this).siblings().removeClass('selected');
        	$(this).removeClass('selected').addClass('selected');
	    });
	    $('#airplanes').on('draw.dt',function(event,datatable){
	     	if(!isNaN(parseInt(airplane.get('airplane_id')))){
	     		$('#airplanes tbody tr[airplane_id='+airplane.get('airplane_id')+']').addClass('selected');
	     	}
    	});
    	
    	

		$('#search_airplane').keydown(function(){
			setTimeout(function(){
				datatable.api().ajax.reload();
			},10);
		});
		
		$('#search_owner').keydown(function(){
			setTimeout(function(){
				datatable.api().ajax.reload();
			},10);
		});
		
		$('#create_airplane').click(function(){
			$('#delete_airplane').css('display','none');
			$('.edit-item-section').css('display','');			
			notes.reset();
			airplane = new AirplaneModel({airplane_id:'new',resource_category:'',wing_type:'',call_sign:'',serial_number:'',owner:'', seats:''});
			airplaneView.render();
			if(notesView!=null){
				notesView.render();
			}
     		$('#airplanes tbody tr').removeClass('selected');
     		
            setTimeout(function(){
				if($('body').width()>979){
					$('.main-content').animate({
				        scrollTop: ($(".edit-item-section").offset().top+$('.main-content').scrollTop()-$('.navbar-fixed-top').height())
				    }, 500);
				}else{
					$('html, body').animate({
				        scrollTop: $(".edit-item-section").offset().top
				    }, 500);
				}
            },100);
		});
		
		$('#cancel_airplane').click(function(){
			$('#delete_airplane').css('display','none');
			$('.edit-item-section').css('display','none');	
     		$('#airplanes tbody tr').removeClass('selected');
			
		});
		
		$('#delete_airplane').click(function(){
			if(airplane.get('airplane_id')!='new'){
	            $('#myModalLabeldelete').html('Delete Airplane');
	            $('#deleteModal > div.modal-body').html('<p>Are you sure you want to delete <b>'+airplane.get('serial_number')+'</b>?</p>');
	            $('#deleteModal').modal('show');
			}
		});
		
			
	    $('#create_note').click(function(){
	    	if(typeof(notes)!='undefined'){
	    		var noteid = 'new_'+Math.floor((Math.random() * 1000000) + 1);
	    		var newnote = new NotesModel({id:noteid,note:'',timestamp:new Date(),user:'<%=req.session.user.username%>'});
	    		notes.add(newnote);
	    		notesView.render();
	    		$('.note[noteid='+noteid+'] .edit-note').click();
	    	}	
		});	
		
		$('#confirmdelete').click(function(){
			socket.get('/airplanes/deleteairplane',{airplane_id:airplane.get('airplane_id')},function(response){
				datatable.api().ajax.reload(function(){},false);
				$('#delete_airplane').css('display','none');
				$('.edit-item-section').css('display','');			
				airplane = new AirplaneModel({airplane_id:'new',resource_category:'',call_sign:'',serial_number:'',owner:'', seats:''});
				airplaneView.render();
				$('#delete_airplane').css('display','none');
				$('.edit-item-section').css('display','none');	
	           	
			});
		});
		
    	$('#save_airplane').click(function(){
    		$('.alert-success').remove();
    		$('.alert-error').remove();
    		var wasnew = airplane.get('airplane_id')=='new'?true:false;
    		socket.get('/airplanes/updateairplane/' + airplane.get('airplane_id'), {airplane:airplane.toJSON()},function(response){ //notes : notes.toJSON()},function(response){
      			if(typeof(response.success)!='undefined'){
    				if(airplane.get('airplane_id')=='new'){
    					airplane.set('airplane_id',response.airplane_id);
    				}
	                $('.page-banner').after('<div class="alert alert-success fade in" style="border-radius:0px;">'+
	                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
	                        '<strong>'+'Success'+':&nbsp</strong>'+'Changes have been saved'+'</div>');
	                if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: 0
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop:0
					    }, 500);
					}
	                
	                setTimeout(function(){// wait for database to be ready
	                	if(wasnew){
							$('.edit-item-section').css('display','none');
							$('#delete_airplane').css('display','none');
							airplane.set('airplane_id','new');
	                	}else{
		                	airplane.fetch({id:parseInt(airplane.get('airplane_id'))}); 
	                	}
						datatable.api().ajax.reload(function(){},false);  // reloads the datatable- value should still be shown
	                },100);
	                
					
	                setTimeout(function(){
	                    setTimeout(function(){
	                        $('.alert-success').remove();
	                    },500);
	                    $('.alert-success').removeClass('in');
	                },alert_fadeout_time);
    			}else{
    				$('.page-banner').after('<div class="alert alert-error" style="border-radius:0px;">'+
	                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
	                        ''+response.error+'</div>');
	                if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: 0
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop:0
					    }, 500);
					}
				}
    		});
    	});
    	
    	$('#save_notes').click(function(){
    	
    		$('.alert-success').remove();
    		$('.alert-error').remove();
    		if($(this).hasClass('disabled')){
    			return;
    		}
    		socket.get('/contacts/updatecontact/' + contact.get('contact_id'), {contact:contact.toJSON(), notes : notes.toJSON()},function(response){
    			if(typeof(response.success)!='undefined'){
    				if(contact.get('contact_id')=='new'){
    					contact.set('contact_id',response.contact_id);
    				}
	    			$('.alert-success').remove();
	                $('.page-banner').after('<div class="alert alert-success fade in" style="border-radius:0px;">'+
	                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
	                        '<strong>'+'Success'+':&nbsp</strong>'+'Changes have been saved'+'</div>');
	                if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: 0
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop:0
					    }, 500);
					}
	                setTimeout(function(){
	                	contact.fetch({id:parseInt(contact.get('contact_id'))}); 
	    			},100);
	                setTimeout(function(){
	                    setTimeout(function(){
	                        $('.alert-success').remove();
	                    },500);
	                    $('.alert-success').removeClass('in');
	                },alert_fadeout_time);
    			}else{
    				$('.page-banner').after('<div class="alert alert-error" style="border-radius:0px;">'+
	                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
	                        ''+response.error+'</div>');
	                if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: 0
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop:0
					    }, 500);
					}
				}
    		});
    	});
    	
    	
	    	 // just shows the changes are pending, by scanning through the collection to see if that's the case.
	    function SetChangesPending(){
	    	var change = false;
	    	if(typeof(airplane.get('modified'))!='undefined'){
	    		change = true;
	    	}

	        if(typeof($('#save_airplane')[0])!='undefined'){
	        	$('#save_airplane')[0].disabled = !change;
	        	$('#save_note_admin')[0].disabled = !change;
            }
            if(typeof($('#save_notes')[0])!='undefined'){
            	if(!change){
            		$('#save_notes').addClass('disabled');
        		}else{
            		$('#save_notes').removeClass('disabled');
        		}
            }
	        if(change){
	            $('#changes_pending').css('display','block');
	            $('#changes_pending_notes').css('display','block');
	        }
	        else{
	            $('#changes_pending').css('display','none');
	            $('#changes_pending_notes').css('display','none');
	        }
	    }

		///////////////////////////
	    /// Airplane        ////////
	    ///////////////////////////   
		var AirplaneModel = Backbone.Model.extend({
	        urlRoot: '/airplanes/getairplane',
	        socket:null,
	        sync:function(method,model,options){
	        	var where = options;
	            if(typeof this.urlRoot === "string" && this.urlRoot !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request(this.urlRoot+collectionid, where, _.bind(function(airplane){
	                    if(airplane.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.clear();
	                    this.set(airplane);
                    	airplaneView.render();
	                    
	                }, this));
	            }
	        
	        }
	    });
	    var airplane = new AirplaneModel();
		
	    	
	    ///////////////////////////
	    /// Airplane      View ////
	    ///////////////////////////	
	    var AirplaneBackboneView = Backbone.View.extend({
	        el: '#airplane_information_section',
	        events: {
	           "keyup input#call_sign":"call_sign",
	           "keyup input#serial_number":"serial_number",
	           "keyup input#seats":"seats",
	           "change select#companyCombobox":"owner",
		       "change select#wingTypeCombobox":"wing_type",
			   "change select#resourceCategoryCombobox":"resource_category"
			   
	        }, 
	        resource_category:function(event){
	        	airplane.set('resource_category',$('select#resourceCategoryCombobox').val());
	        	airplane.set('modified',true);
	        	SetChangesPending();
	        },
	        wing_type:function(event){
	        	airplane.set('wing_type',$('select#wingTypeCombobox').val());
	        	airplane.set('modified',true);
	        	SetChangesPending();
	        },
	        call_sign:function(event){
	        	airplane.set('call_sign',$('input#call_sign').val());
	        	airplane.set('modified',true);
	        	SetChangesPending();
	        },
	        serial_number:function(event){
	        	airplane.set('serial_number',$('input#serial_number').val());
	        	airplane.set('modified',true);
	        	SetChangesPending();
	        },
	        seats:function(event){
	        	airplane.set('seats',$('input#seats').val());
	        	airplane.set('modified',true);
	        	SetChangesPending();
	        },
	        owner:function(event){
	        	airplane.set('owner',$('select#companyCombobox').val());
	        	airplane.set('modified',true);
	        	SetChangesPending();
	        },
	        initialize: function () {
	            //this.render();
	        },
	        template: _.template($('#airplane-template').html()),
	        render: function () {
	    	    this.$el.empty();
	        	this.$el.append(this.template(airplane.toJSON()));
	        	
	        	<% if(req.session.user.policy[req.route.path].update==0){ %>
	        		$('#airplane_information_section input').attr('disabled','disabled');
	        	<% } %>
	        	
	        	LoadOwner();
	        	LoadResourceCategory();
	        	LoadWingType();
	        	LoadResourceCategory();
	        	SetChangesPending();
				
				//notes.fetch({id:airplane.get('airplane_id')});
	        }
	    });
	    var airplaneView = new AirplaneBackboneView();
	   
	

	   ///////////////////////////
	    ///  NOTES ////////
	    ///////////////////////////
	    	
		var NotesModel = Backbone.Model.extend({
	        urlRoot: '/airplanes/note'
	    });
	
	    var NotesCollection = Backbone.Collection.extend({
	        sailsCollection: "",
	        socket: null,
	        sync: function(method, model, options){
	            var where = {};
	            if (options.where) {
	                where = {
	                    where: options.where
	                }
	            }
	            if(options.id){
	            	where.id = options.id;
	        	}
	            if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request("/" + this.sailsCollection+collectionid, where, _.bind(function(tnotes){
	                    if(tnotes.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.set(tnotes);
	                    notesView = new NotesBackboneView({collection: notes});
	                }, this));
	            }
	        }
	    });
	
	    var NotesCollection = NotesCollection.extend({
	        sailsCollection: 'airplanes/notes',
	        model: NotesModel
	    });
	
	    var notes = new NotesCollection();
	    //buildingnotes.fetch({id:11});
	
	
	
	
	
	    ///////////////////////////
	    ///     Notes View     ////
	    ///////////////////////////
	
	    var NotesBackboneView = Backbone.View.extend({
	        el: '#notes-wrapper',
	        events: {
	            "click a.delete-note"   : "deleteNote",
	            "click a.edit-note" : "editNote"
	
	        },
	        editNote:function(event){
	        	var self = this;
	        	var blurTimeout;
	        	var trackdetailstyping = '';
	        	//event.target.parent('.note').find();
	        	var $notelement = $(event.target).parents('.note');
	        	var noteid= $notelement.attr('noteid');
	        	//var currentnote = $(event.target).parents('.note').find('.note-editable').html();
	        	//this.collection.get(noteid)
	        	$('.no-notes-remove').remove();
	        	$notelement.find('.note-editable').replaceWith('<div class="row-fluid"><div class="row-fluid"><textarea maxlength=512" class="note-textarea-editable">'+this.collection.get(noteid).get('note')+'</textarea></div><div class="row-fluid"><button class="save-note-textarea-editable btn btn-primary">Set</button><button class="cancel-note-textarea-editable btn ">Cancel</button></div></div>');
	        	$notelement.find('.cancel-note-textarea-editable').mousedown(function(){
	    			blockNoteSave = true;
	    			
	    		});
	    		$notelement.find('.note-textarea-editable').unbind();
	        	$notelement.find('.note-textarea-editable').blur(function(){
		        	blurTimeout = setTimeout(function(){
		        		if(!blockNoteSave&&trackdetailstyping!=''){
				        	self.collection.get(noteid).set('note', trackdetailstyping);//$notelement.find('.note-textarea-editable').val());
			        		self.collection.get(noteid).set('modified', true);
			        		contact.set('modified',true);
			        		SetChangesPending();
			        		
		        		}else{
		        			blockNoteSave = false;
		        			if($notelement.find('.note-textarea-editable').html()==''&&noteid.indexOf('new')!=-1){
		        				self.collection.remove(self.collection.get(noteid));
		        			}
		        		}
		        		self.render();
		        	},200);
		        	
	        	});
	        	$notelement.find('.note-textarea-editable').keyup(function(){
	        		trackdetailstyping = $notelement.find('.note-textarea-editable').val();
	        	});
	        	
	        	trackdetailstyping = $notelement.find('.note-textarea-editable').val();
	        	$notelement.find('.note-textarea-editable').focus();
	        	
	        },
	        deleteNote:function(event){
	        	var $notelement = $(event.target).parents('.note');
	        	var noteid= $notelement.attr('noteid');
	        	if($notelement.attr('noteid').indexOf("new")>-1){
	        		this.collection.remove(noteid);
	        		this.render();
	        	}else{
	        		this.collection.get(noteid).set('deleted',true);
	        		this.render();
	        	}
	        	contact.set('modified',true);
        		SetChangesPending();
	        },
	        initialize: function () {
	            this.render();
	        },
	        template: _.template($('#notes-template').html()),
	        render: function () {
	            this.$el.html("");
	            
	        	if(contact.get('contact_id')!='new'){
	        		//$('#building-sales').css('display','')
	        	}
	            var tcollection = this.collection.sortBy(function(notes){
	                return notes.get("timestamp").toString().toUpperCase();
	            });
	
	            for(var i=0; i<tcollection.length; i++)
	            {
	                //if(!tcollection[i].isNew()){
	                if(typeof(tcollection[i].get('deleted'))=='undefined'){
	                	tcollection[i].set('note_datetime',toDateTimeString(tcollection[i].get('timestamp')));
	                	this.$el.prepend(this.template(tcollection[i].toJSON()));
	            	}
	                //}else{
	                //    this.$el.append(this.newusertemplate(tcollection[i].toJSON()));
	                //}
	            }
	            if(tcollection.length==0){
	            	this.$el.append('<div class="no-notes-remove">No Notes Found.</div>');
	            }
	            
	            if(contact.get('contact_id')=='new'){
					$('.note-wrapper').css('display','none');
	            }else{
					$('.note-wrapper').css('display','');
	            }
	            
	            $('#save_note_admin').unbind();
	            $('#save_note_admin').click(function(){
		    		$('#save_airplane').click();
				});
	            //SetChangesPending();  // recalculates and displays if changes are pending
	        }
	    });
	    var notesView=null;
	   
	   
    });
</script>
