<!DOCTYPE html>
<html>
	<head>
		
		<title><%= translate[req.session.user.locale]['DefaultTitle'] %> - <%= translate[req.session.user.locale]['pages'][req.url] %> </title>
	    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
	    <meta name="description" content="">
	    <meta name="author" content="">
	    
	   	<link href="/css/ui-lightness/jquery-ui-1.10.3.custom.min.css" rel="stylesheet">
    	<link href="/css/jquery.dataTables.css" rel="stylesheet">
	    <link href="/css/jquery.ui.chatbox.css" rel="stylesheet">
	    <link href="/css/bootstrap.css" rel="stylesheet">
	    <link href="/css/bootstrap-responsive.css" rel="stylesheet">
		<link href="/css/minidash.css" rel="stylesheet">
		<link href="/css/main.css" rel="stylesheet">
	    <link href="/css/chatboxlayout.css" rel="stylesheet">
	    <link href="/css/font-awesome.css" rel="stylesheet">
	    <link href="/css/flighttable.css" rel="stylesheet">
	    <link href="/css/bootstrap-datetimepicker.min.css" rel="stylesheet">
	    <link href="/css/bootstrap-combobox.css" rel="stylesheet">
	
	
	
	    <link href="/css/messages.css" rel="stylesheet">
	    <link href="/css/create-reports.css" rel="stylesheet">
	    <link href="/css/dropdownpages.css" rel="stylesheet">
	    <link href="/css/dashboard.css" rel="stylesheet">


		<!--[if lt IE 9]>
		<link href="/css/oldie.css" rel="stylesheet">
		<![endif]-->
		<!--[if lt IE 10]>
		<link href="/css/ie9andbelow.css" rel="stylesheet">
		<![endif]-->

		<!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
		<!--[if lt IE 9]>
		<script src="/js/html5shiv.js"></script>
		<![endif]-->


		<!-- Pre-Minimized assets are loaded here -->
		<script type="text/javascript" src="/js/dependencies/sails.io.js"></script>
		<script type="text/javascript" src="/js/jquery.js"></script>
		<script type="text/javascript" src="/js/bootstrap-combobox.js"></script>
		<script type="text/javascript" src="/js/bootstrap.js"></script>
		<script type="text/javascript" src="/js/jquery-ui-1.10.3.custom.min.js"></script>
		<script type="text/javascript" src="/js/jquery.ui.chatbox.js"></script>
		<script type="text/javascript" src="/js/jquery.ui.chatboxManager.js"></script>
		
		
		<!-- Fav and touch icons -->
		<link rel="apple-touch-icon-precomposed" sizes="144x144" href="/img/favicon.ico">
		<link rel="apple-touch-icon-precomposed" sizes="114x114" href="/img/favicon.ico">
		<link rel="apple-touch-icon-precomposed" sizes="72x72" href="/img/favicon.ico">
		<link rel="apple-touch-icon-precomposed" href="/img/favicon.png">
		<link rel="shortcut icon" href="/img/favicon.ico">
		<link rel="icon" href="/img/favicon.ico" type="image/x-icon">
		<link rel="shortcut icon" href="/img/favicon.ico" type="image/x-icon">
		
		
  </head>

  <body>
  
      <!-- This Modal Dialog is displayed when the user goes to change his password from the myaccount dropdown -->
      <div id="changepasswordModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
          <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabelChange"><%= translate[req.session.user.locale]['Change Password']  %></h3>
          </div>
          <div class="modal-body">
              <div class="row-fluid"><p><%= translate[req.session.user.locale]['Enter a new password for']  %> <b><%=req.session.user.username%></b>.</p></div>
              <div class="row-fluid"><label class="change-label" for="mycurrentpassword"><%= translate[req.session.user.locale]['Current Password']  %>:</label><input class="change-input" id="mycurrentpassword" type="password"></div>
              <div class="row-fluid"><label class="change-label" for="mynewpassword"><%= translate[req.session.user.locale]['New Password']  %>:</label><input class="change-input" id="mynewpassword" type="password"></div>
              <div class="row-fluid"><label class="change-label" for="confirmmypassword"><%= translate[req.session.user.locale]['Confirm Password']  %>:</label><input class="change-input"  id="confirmmypassword" type="password"> </div>
          </div>
          <div class="modal-footer">
              <button class="btn" data-dismiss="modal" id="confirmmypasswordchangecancel" aria-hidden="true"><%= translate[req.session.user.locale]['FormCancel']  %></button>
              <button class="btn btn-primary" id="confirmmypasswordchange"><%= translate[req.session.user.locale]['FormSet']  %></button>
          </div>
      </div>
      
      
     <!-- This is the top bar containing both the mobile and desktop responsive layouts-->
    <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container">
          <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse-topbar">
            <span class="icon icon-gear"></span>
          </button>
          <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse-primary">
              <span class="icon-list"></span>
          </button>
          <% if(messaging){ %>
          <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target="#chat-section-wrapper">
              <span class="icon-envelope"></span>
          </button>
          <% } %>
            <a class="brand isys-a large" href="/auth" style="height:40px; width: 407px; padding-left: 12px !important;"><img src="<%=logo.desktop%>" /></a>
            </a>
            <a class="brand isys-a small" href="/auth" style="height: 40px; width: 110px;background-image: url(&quot;<%=logo.mobile%>&quot;);background-size: 140px;background-repeat: no-repeat;background-position-x: 11px;">
            </a>
          <div class="nav-collapse collapse nav-collapse-topbar">
            <ul class="nav pull-right" id="top_right_desktop">
<% if(i18nEnabled){ %> 
              <li id="liLocation">
                  <% if(req.session.user.locale=='en'){ %>
                    <a class="top-message-a language-a" style="position:relative;"><div class="language-flag english"></div><div class="top-flag-span top-messages-span">English</div></a>
                  <% } %>
                  <% if(req.session.user.locale=='es'){ %>
                    <a class="top-message-a language-a" style="position:relative;"><div class="language-flag chile"></div><div class="top-flag-span top-messages-span">Español</div></a>
                  <% } %>
              </li>
<% } %> 
<% if(messaging){ %> 
              <li <% if (req.url=='/messages'){ %>class="active"<% } %>><a class="top-message-a" href="/messages" style="position:relative;"><div style="display:none;" class="badge-div" ><span class="badge badge-important">6</span></div><i class="icon-envelope-alt icon-2x top-messages-icon"></i><div class="top-messages-span"><%= translate[req.session.user.locale]['Messages'] %></div></a></li>
<% } %> 
              <%if(search.enabled){%>
              <li><form id="search-form" action="<%=search.url%>" method="post" style="margin-bottom: 0px;" ><input name="search_field" type="text" placeholder="<%= translate[req.session.user.locale]['Search'] %>" id="main-search" class="main-search"><i class="icon-search top-search-icon"></i></form></li>
              <% } %>
              <li class="myaccount-topmenu"><a id="myaccount" data-placement="bottom" data-content="Loading.." title="" data-original-title="" ><i class="icon-user"></i>&nbsp<%= req.session.user.username %></a>
                  <!--[if lt IE 9]>
                  <![endif]-->
                  <ul id="myaccountmobile" class="collapse">
                      <li class="<% if (typeof(url)!=='undefined'&&url=='myaccount'){ %>active<% } %>">
                          <a id="changemypasswordmobile">
                              <i class="icon-gear"></i> <%= translate[req.session.user.locale]['Change Password'] %>
                          </a>
                      </li>
                      <li class="">
                          <a href="/auth/logout">
                              <i class="icon-signout"></i> <%= translate[req.session.user.locale]['Sign Out']  %>
                          </a>
                      </li>
                  </ul>
              </li>
            </ul>
          </div><!--/.nav-collapse -->
        </div>
      </div>
    </div>

    <div class="sidebar-background">
  		<div class="primary-sidebar-background"></div>
	</div>

      <!-- SideBar  -  the elements are styled and attached to the top bar buttons when in mobile layout -->
	<div class="primary-sidebar">
	  <div class="primary-sidebar-spacer"></div>
	  <!-- Main nav -->
	  <ul class="nav nav-collapse collapse nav-collapse-primary">
  			<% for(var navpage in navpages){  %>
  				<% if(!navpages[navpage].enabled){ %>
  					<% continue; %>
  				<% } %>
  				<li class="<% if(typeof(navpages[navpage].children)!='undefined'){ %>dark-nav<% } %> <% if((req.url==navpage)||templateHelper.hasChildPage(navpages[navpage],req.url)){ %>active<% } %>">
  				  <span class="glow"></span>   
	              <a <% if(typeof(navpages[navpage].children)!='undefined'){ %>class="accordion-toggle" data-toggle="collapse" href="#navmenu<%=templateHelper.replaceAll(navpage,'/','_')%>"<% }else{ %> href="<%=navpage%>" <% } %>>
	                  <i class="<%=navpages[navpage].icon%> icon-2x"></i>
	                  <span><%= translate[req.session.user.locale]['pages'][navpage] %>
	                  <% if(typeof(navpages[navpage].children)!='undefined'){ %>
                      <i class="icon-caret-down"></i>
	                  <% } %>
	                  </span>
	              </a>
	              <% if(typeof(navpages[navpage].children)!='undefined'){ %>
                    <ul id="navmenu<%=templateHelper.replaceAll(navpage,'/','_')%>" class="collapse <% if(templateHelper.hasChildPage(navpages[navpage],req.url)){ %>in<% } %>">
                		<% for(var childpage in navpages[navpage].children){  %>
			  				<% if(!navpages[navpage].children[childpage].enabled){ %>
			  					<% continue; %>
			  				<% } %>
			  				
			  				<li class="<% if(req.url==childpage){ %>active<% } %>">
				              <a href="<%=childpage%>">
				                  <i class="<%=navpages[navpage].children[childpage].icon%>"></i>
				                  <%= translate[req.session.user.locale]['pages'][childpage] %>
				              </a>
			  				</li>
			  				
		  				<% } %>
          			</ul>
                  <% } %>
  				</li>
  			<% } %>
      </ul>
<% if(messaging){ %> 
        <div id="chat-section-wrapper" class="showchatusers collapse nav-collapse">
            <div class="row-fluid" id="users-toggler"><i class="icon-envelope-alt"></i> &nbsp&nbsp<%= translate[req.session.user.locale]['Messaging'] %></div>
            <div id="user-search-box" class="user-search-box"><input type="text" id="users-search" placeholder="<%= translate[req.session.user.locale]['Search people'] %>..."></div>
            <ul id="chatwrapper" class="chatnav  nav-collapse-chat">

            </ul>
        </div>
<% } %> 
	  </div>
    </div>
 
 
    <script type="text/template" id="userlist-template">
            <li class="{{ if(typeof(online)!='undefined'&&online){ }}online{{ }else{ }}offline{{ } }}" userid="{{= id }}" >
                <span class="glow"></span>
                <a>
                    <span>{{= username }}</span>
                </a>
            </li>
    </script>
 
 
     <!-- Scripts are loaded here at the latest possible place to allow the layout html to be rendered ASAP -->
    <script src="/js/underscore-min.js"></script>
    <script src="/js/backbone-min.js"></script>
    <script src="/js/bootstrap-datetimepicker.min.js"></script>
    <script src="/js/autoNumeric.js"></script>
    <script type="text/javascript" src="/js/jquery.dataTables.js"></script>
    <script type="text/javascript" src="/js/jquery.sparkline.min.js"></script>
    <script type="text/javascript" src="/js/raphael.2.1.0.min.js"></script>
    <script type="text/javascript" src="/js/justgage.1.0.1.min.js"></script>
    <script type="text/javascript" src="/js/fastclick.js"></script>
  
  
<!-- MAIN LAYOUT Script-->
<!-- This Section contains the messaging scripts, socket calls, and many other utility functions for all the pages -->
	<script>
		
		if(typeof(io)=='undefined'||typeof(_)=='undefined'){ // failed to load scripts properly
			location.reload();
		}
		
		_.templateSettings = {
		    interpolate : /\{\{\=(.+?)\}\}/g,
		    evaluate: /\{\{(.+?)\}\}/g
		};
		
		var fulluserIDselected=0;
		var socket = io.connect();
		socket.on("connect",function(){
			socket.get('/auth/joinrooms');
			socket.on('<%=req.session.user.id%>',function(data){
				if(data.message){
				  var message = data.message;
				  if(message.fromUserId == <%=req.session.user.id%>){    // if the message is from YOUrself
                      // if OPEN or CLOSED AND screen != fulluserIDselected
                      if(showList.indexOf('chatbox_'+message.toUserId)!=-1||(showList.indexOf('chatbox_'+message.toUserId)==-1&&message.toUserId!=fulluserIDselected ))
                      {
                          chatboxManager.addBox('chatbox_'+message.toUserId,{first_name : users.get(message.toUserId).get('username'), last_name:""});
                          $("#chatbox_" + message.toUserId).chatbox("option", "boxManager").addMsg('You', message.message,message.id);
                      }
                  }
                  else     // if the message was from someone else
                  {
                      if(showList.indexOf('chatbox_'+message.fromUserId)!=-1||(showList.indexOf('chatbox_'+message.fromUserId)==-1&&message.fromUserId!=fulluserIDselected ))
                      {
                          chatboxManager.addBox('chatbox_'+message.fromUserId,{first_name : users.get(message.fromUserId).get('username'), last_name:""});
                          $("#chatbox_" + message.fromUserId).chatbox("option", "boxManager").addMsg(users.get(message.fromUserId).get('username'), message.message,message.id);
                          users.get(message.fromUserId).set('unreadmessages',true);    
                      }
                  }

                  savechatboxestosession();   //Saves open chatboxes to serverside session variable
                  updateBadge();              // updates the badge to alert new messages
                  setchatboxstatuses();       // Updates online/offline
				}
			
			});
		});
		var bannertimer = null;
		
		$(window).resize(function(){
	        fixheight();
	    });
	    function fixheight(){
	        $('.main-content').css('height',$(window).height()-$('.navbar').height()+'px');
	    }
	    // Clicking the Locale Flag, triggers a page refresh. Just rotates the locale according to serverside
        $('.language-a').click(function(event){
            socket.request('/auth/togglelocale',{},function(data){
                 location.reload();                           // This login will guarentee any session is still valid anyways
            });
        });
        //Change password Modal
        $('#changemypasswordmobile').click(function(){
            showChangeMyPasswordModal();
        });
        
	    function padLeft(nr, n, str){
	        return Array(n-String(nr).length+1).join(str||'0')+nr;
	    }
	    function toLocaleDateTimeString(date){
	    	if(typeof(date)=='string'){
	    		date = new Date(date);
	    	}
	        return date.getFullYear()+'-'+padLeft((date.getMonth()+1).toString(),2)+'-'+ padLeft(date.getDate(),2) + ' ' + padLeft(date.getHours(),2)+':'+padLeft(date.getMinutes(),2)+':'+padLeft(date.getSeconds(),2);
	    }
	    function dateFromlocalISO(s) {
	        s = s.split(/\D/);
	        var datet= new Date(Date.UTC(s[0], --s[1]||'', s[2]||'', s[3]||'', s[4]||'', s[5]||'', s[6]||''));
	        return new Date(datet.getTime() + datet.getTimezoneOffset()*60000);
	    }
	    function to_operational_day_start_time(date,timestring){
	        return date.getFullYear()+'-'+padLeft((date.getMonth()+1).toString(),2)+'-'+ padLeft(date.getDate(),2) + ' ' + timestring;
	    }
	    function secondsToStringRoundDaysHours(seconds) {
			var numdaysstring = '';
		  	var numdays = Math.floor(seconds / 86400);
		  	if(numdays>0)
		  	{
		  		numdaysstring = numdays+' days ';
		  	}
		  	var numhours = Math.floor((seconds % 86400) / 3600);
		 	 return numdaysstring + numhours+' hours';
		}
		function secondsToString(seconds) {
		
		  var numdays = Math.floor(seconds / 86400);
		  var numhours = Math.floor((seconds % 86400) / 3600);
		  var numminutes = Math.floor(((seconds % 86400) % 3600) / 60);
		  var numseconds = ((seconds % 86400) % 3600) % 60;
		
		  return padLeft(numdays, 2) + ":" + padLeft(numhours, 2) + ":"
		      + padLeft(numminutes, 2) + ":" + padLeft(numseconds, 2);
		}
	    
	    $(document).ready(function(){
	    	fixheight();
	    });
	    
		
	    function clearBanners(){
	    	$('.main-content > .page-banner').next('.alert').remove();
	    }
	    function bannerAlert(type,bold,message){
	    	$('.main-content > .page-banner').next('.alert').remove();
	    	clearTimeout(bannertimer);
			var banner = '<div class="alert alert-'+type+' fade in" style="border-radius:0px;">'
				    +'<button type="button" class="close" data-dismiss="alert">&times</button>'
				    +'<strong>'+bold+':&nbsp</strong>'
				    +message
				+'</div>';
	    	$('.main-content > .page-banner').after(banner);
	    	if($(window).width()>=980){
	    		$('.main-content').animate({
	    			scrollTop:0
    			},300);
	    	}else{
	    		$('body').animate({
	    			scrollTop:0
    			},300);
	    	}
	    	bannertimer = setTimeout(function(){
	            bannertimer = setTimeout(function(){
	                $('.main-content > .page-banner').next('.alert').remove();
	            },500);
	            $('.main-content > .page-banner').next('.alert').removeClass('in');
	    	},5000);
	    }
	    
	
		// Layout Javascript
		
		/// This makes the timezone tooltip hover above the location
        var now = new Date().toString();
		var TZ = now.indexOf('(') > -1 ?
		now.match(/\([^\)]+\)/)[0].match(/[A-Z]/g).join('') :
		now.match(/[A-Z]{3,4}/)[0];
		if (TZ == "GMT" && /(GMT\W*\d{4})/.test(now)) TZ = RegExp.$1;

        $('#liLocation').attr('title',TZ);
	
	
		//////////////////////////////////////////////
		///  MY Account Section //////////////////////
		//////////////////////////////////////////////
		
		$('#myaccount').popover({
			container:'#top_right_desktop'
			,placement:'bottom'
			,html:true
			,trigger:'manual'
			,content:'<a class="pull-right close myaccount-close-x popover-close" sort_plan_id="myaccount">&times;</a><div class="row-fluid myaccount-popover-username" style="width:100px;"><%= req.session.user.username %></div><div class="row-fluid" style="width:120px;"><a onclick="showChangeMyPasswordModal();" class="span12 btn"><%= translate[req.session.user.locale]['Change Password'] %></a></div><div class="row-fluid" style="width:120px;"><a href="/auth/logout" class="span12 btn btn-danger"><%= translate[req.session.user.locale]['Sign Out'] %></a></div>'
		});
		
		// TODO: Find a way to refactor these popover conflicts.
		$('#myaccount').click(function(e) {
	        e.preventDefault();
	        if($(window).width()<980){
	        	$('#myaccountmobile').collapse('toggle');
	        }else{
		        $('#myaccount').popover('toggle');
		        setTimeout(function(){
		            $('.popover[sort_plan_id=myaccount]').css('left',($('#top_right_desktop').width()-$('.popover[sort_plan_id=myaccount]').width())+'px');
		        },0);
		        $('#top_right_desktop').find('.popover').attr('sort_plan_id','myaccount');
		        $('.ganntbar[sort_plan_id!=myaccount]').popover('hide');
		        $('#add_flight').popover('hide');
		
		        $('.myaccount-close-x').click(function(){
		            $('#myaccount').popover('hide');
		        });
	        }
	    });
	    
	    function showChangeMyPasswordModal(){
	    	$('#myaccount').popover('hide');
	        $('#changepasswordModal').modal('show');
	        $('#changepasswordModal div.alert-error').remove();
	        $('#mycurrentpassword').val('');
	        $('#mynewpassword').val('');
	        $('#confirmmypassword').val('');
	        $('#confirmmypasswordchange').removeAttr('disabled');
	        $('#confirmmypasswordchangecancel').removeAttr('disabled');
	    }
	    $('#confirmmypasswordchange').click(function(){
            $('#changepasswordModal div.alert-error').remove();
            if($('#mynewpassword').val()!=$('#confirmmypassword').val()){
                $('#changepasswordModal div.modal-header').after(
                        '<div class="alert alert-error fade in" style="margin-bottom:0px;" style="border-radius:0px;"><button type="button" class="close" data-dismiss="alert">×</button><strong><%= translate[locale]['FormError'] %>:&nbsp;</strong><%= translate[locale]['Password fields do not match.'] %></div>');//' .error-message').html('Password fields do not match.');

            }else if($('#mynewpassword').val()==''){

                $('#changepasswordModal div.modal-header').after(
                        '<div class="alert alert-error fade in" style="margin-bottom:0px;" style="border-radius:0px;"><button type="button" class="close" data-dismiss="alert">×</button><strong><%= translate[locale]['FormError'] %>:&nbsp;</strong><%= translate[locale]['Password must be at least 1 character long.'] %></div>');

            }else{
                socket.get('/auth/checkandchangemypassword',{currentpassword:$('#mycurrentpassword').val(),newpassword:$('#mynewpassword').val()},function(data){
                    if(typeof(data.error)!='undefined'){
                        location.reload(); // Will boot back to login screen
                        return;
                    }
                    if(typeof(data.failure)!='undefined'){
                        $('#changepasswordModal div.modal-header').after(
                                '<div class="alert alert-error fade in" style="margin-bottom:0px;" style="border-radius:0px;"><button type="button" class="close" data-dismiss="alert">×</button><strong><%= translate[locale]['FormError'] %>:&nbsp;</strong><%= translate[locale]['Current password was incorrect.'] %></div>');
                        return;
                    }
                    if(typeof(data.success)!='undefined'){
	                    $('#changepasswordModal div.modal-header').after(
	                            '<div class="alert alert-success fade in" style="margin-bottom:0px;" style="border-radius:0px;"><button type="button" class="close" data-dismiss="alert">×</button><strong><%= translate[locale]['FormSuccess'] %>:&nbsp;</strong><%= translate[locale]['Password has been successfully changed.'] %></div>');
	                    setTimeout(function(){
	                        $('#changepasswordModal .alert-success').remove();
	                        $('.alert-success').removeClass('in');
	                        $('#changepasswordModal').modal('hide');
	                    },1000);
	                    $('#confirmmypasswordchange').attr('disabled','disabled');
	                    $('#confirmmypasswordchangecancel').attr('disabled','disabled');
                    }else{
						alert('no handler for repsonse'+JSON.stringify(data));
                    }
                });
            }
        });
        // End of My Account Section
        
	        // Does Popup Hiding for popovers
	      // This makes popups hide when you click somewhere off them
	    $('body').on('click', function (e) {
	        $('.ganntbar').each(function () {
	            if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0&&$('.bootstrap-datetimepicker-widget').has(e.target).length ===0) {
	                $(this).popover('hide');
	            }
	        });
	
	        $('#myaccount').each(function () {
	            if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0&&$('.bootstrap-datetimepicker-widget').has(e.target).length ===0) {
	                $(this).popover('hide');
	            }
	        });
	    });
	
	      // binds search enter key to submit
	    $('#main-search').keydown(function(event){
	        if(event.keyCode == 13 && !event.shiftKey){
	            $('#search-form').submit();
	        }
	    });
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    <% if(messaging){ %>    
        //////////***************************************//////////
        //////////    Messaging                          //////////
        //////////***************************************//////////
    
        //////////////////////////////////////////////////
        //////// CHAT STUFF //////////////////////////////
        //////////////////////////////////////////////////
        // This function triggers when a message is sent (outgoing) via a chatbox
        var broadcastMessageCallback = function(tousername, msg) {
            // pushes the message to serverside
            socket.get('/chat/sendmessage',{toUserId:users.findWhere({username:tousername}).get('id'),message:msg},function(data){
                if(data.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
                    location.reload(); // Will boot back to login screen
                }
            });
        }
        // this initially initialzes the chatbox manager.
        chatboxManager.init({messageSent : broadcastMessageCallback,loadearliertext:'<%= translate[locale]['Load Earlier Messages'] %>'});
        
        //////////////////////////////////////////////////
        //////// USERS ///////////////////////////////////
        //////////////////////////////////////////////////
        // This sets up the users collection.
        //
        
        var UsersModel = Backbone.Model.extend();

        var SailsUsersCollection = Backbone.Collection.extend({
        	sailsCollection: "",
            socket: null,
            sync: function(method, model, options){
            	this.socket = socket;
                this.socket.on("connect", _.bind(function(){
                          //Once Connected, request all the users from serverside
                	this.socket.get("/" + this.sailsCollection, options, _.bind(function(users){
                		if(users.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
                        	location.reload(); // Will boot back to login screen
                    	}
                        this.set(users);
	                	usersView = new UsersView({collection: this});
	                	
	                	
	                	this.socket.on('onlinestatus', _.bind(function(users){
	                		this.set(users);
	                		usersView.render();
						}, this));
	                	
					}, this));
              	}, this));
            }
        });
        
        var UsersCollection = SailsUsersCollection.extend({
			sailsCollection: 'users/getUsersAndStatus',
			model: UsersModel
		});
        users = new UsersCollection();
        users.fetch();
        // create the collection, which in turn once the users are received the first time, creates the usersView


		var UsersView = Backbone.View.extend({
        	el: '#chatwrapper',
			initialize: function () {
            	this.render();  // initializes the view the first time!
                  
                socket.get('/chat/getunreadmessages',{},function(msgs){  // gets the unread messages the first time it renders the 
                	for(var i=0;i<msgs.length;i++){
                	
						if(msgs[i].fromUserId == <%=req.session.user.id%>){
                        	chatboxManager.addBox('chatbox_'+msgs[i].toUserId,{first_name : users.get(msgs[i].toUserId).get('username'), last_name:""});
                        	$("#chatbox_" + msgs[i].toUserId).chatbox("option", "boxManager").addMsg('You', msgs[i].message,msgs[i].id);
                    	}
                    	else// to me
                        {
                        	chatboxManager.addBox('chatbox_'+msgs[i].fromUserId,{first_name : users.get(msgs[i].fromUserId).get('username'), last_name:""});
                        	$("#chatbox_" + msgs[i].fromUserId).chatbox("option", "boxManager").addMsg(users.get(msgs[i].fromUserId).get('username'), msgs[i].message,msgs[i].id);
                        	users.get(msgs[i].fromUserId).set('unreadmessages',true);
                    	}
                	}
                	var sessionboxes = <%=(typeof(req.session.user.boxes)=='undefined')?'[]':''%><%-JSON.stringify(req.session.user.boxes)%>;
                	for(var i=0;i<sessionboxes.length;i++){
                    	chatboxManager.addBox('chatbox_'+sessionboxes[i].id,{first_name : users.get(sessionboxes[i].id).get('username'), last_name:""});
                    	if(sessionboxes[i].maximized==0){
                    		$('#chatbox_'+sessionboxes[i].id).parent().css('display','none');
                    	}
                    	$('#chatbox_'+sessionboxes[i].id+' div.chatbox-load-previous a').trigger('click');
               		}
                    bindchatboxclicks();
	                savechatboxestosession();
					updateBadge();
					setchatboxstatuses();
				});
            },
          	template: _.template($('#userlist-template').html()),
          	render: function () {
            	this.$el.html("");
            	var tcollection = this.collection.sortBy(function(user){
                    var onlinetemp = '1';
                    if(user.get("online")){
                        onlinetemp = '0';
                    }
                    return onlinetemp+'_'+user.get("username");
                });
                var renderstring = '';
            	for(var i=0; i<tcollection.length; i++)
                {
                	var searchval = $('#users-search').val();
                	if(tcollection[i].get('username').toString().indexOf(searchval)!=-1)
                 	{
                    	if (tcollection[i].get('username')!='<%= req.session.user.username%>'){
                       		renderstring +=  this.template(tcollection[i].toJSON());
                    	}
                	}
            	}
            	this.$el.append(renderstring);
				// Binds some classes to make sure they look right.
				$('.primary-sidebar > div#chat-section-wrapper > ul.chatnav > li.online:first').addClass('first-child');
				$('.primary-sidebar > div#chat-section-wrapper > ul.chatnav > li.online:last').addClass('last-child');
				$('.primary-sidebar > div#chat-section-wrapper > ul.chatnav > li.offline:first').addClass('first-child');
				$('.primary-sidebar > div#chat-section-wrapper > ul.chatnav > li.offline:last').addClass('last-child');
				setchatboxstatuses();
            	/*
                  setchatboxstatuses();*/
          	}
      	});
      	
		  //Hides and shows the users list(messaging button)
	    $('#users-toggler').click(function(){
	        if($('#chat-section-wrapper').hasClass('hidechatusers')){
	            $('#chat-section-wrapper').removeClass('hidechatusers').addClass('showchatusers');
	        }
	        else
	        {
	            $('#chat-section-wrapper').removeClass('showchatusers').addClass('hidechatusers');
	        }
	    });
	    
      	// Search Users Constrainer
        $('#users-search').keyup(function(){
            usersView.render();
        });
      	
      	// Pops up a chatbox when you click on a users name
      	// This binds regardless of redraws.. very useful.
	    $('#chatwrapper').on('click','li',function(){
	        chatboxManager.addBox('chatbox_'+$(this).attr('userid'),{first_name : users.get($(this).attr('userid')).get('username'), last_name:""});
	        $('#chatbox_'+$(this).attr('userid') + ' + div.ui-chatbox-input > textarea').focus();
	        savechatboxestosession(); // saves chatboxes! // also binds chatbox clicks.. which binds savechatboxestosession() events to minimizing/max boxes.
	        setchatboxstatuses();
	    });
	    // Utility function for updating the online and offline status of the users in the users list.
		function setchatboxstatuses(){
			users.each(function(user) {
				if($('#chatbox_'+user.get('id')).size()>0){
					if(user.get('online')==1){
						$('#chatbox_'+user.get('id')).parent().parent().removeClass('offline').removeClass('online').addClass('online');
					}else{
						$('#chatbox_'+user.get('id')).parent().parent().removeClass('offline').removeClass('online').addClass('offline');
					}
				}
			}, this);
		}
		  //calls serverside and stores the list of open chatboxes to the session!
		function savechatboxestosession(){
	        if(this.updateboxes!==undefined){
	            clearTimeout(this.updateboxes);
	        }
	        bindchatboxclicks();
	        this.updateboxes = setTimeout(function(){
	            var boxes = new Array();
	            for(var i =0; i<showList.length; i++){
	                boxes.push({id: parseInt(showList[i].substring(8,showList[i].length)), maximized:$('#'+showList[i]).parent().css('display')=='none'?0:1})
	            }
	            socket.get('/chat/saveopenboxes',{list:boxes},function(data){
	                if(data.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                    location.reload(); // Will boot back to login screen
	                }
	            });
			},200);
	    }
	    // rebinds chatboxes for open-awareness
		function bindchatboxclicks(){
	        $('.ui-chatbox .ui-widget-header .ui-chatbox-icon span').unbind('click',savechatboxestosession);
	        $('.ui-chatbox .ui-widget-header .ui-chatbox-icon span').bind('click',savechatboxestosession);
	        $('.ui-chatbox .ui-widget-header').unbind('click',savechatboxestosession);
	        $('.ui-chatbox .ui-widget-header').bind('click',savechatboxestosession);
    	}
    	
    	  // Loads more of the old conversation into the chatbox
	      // attaches infinity-scroll
	    $(document).on('click','div.chatbox-load-previous a',function(event){
	        var boxId=$(this).parent().parent().attr('id').substring(8,$(this).parent().parent().attr('id').length);
	        var priorID = null;
	        if($(this).parent().parent().find('.ui-chatbox-msg[messageid]').length>0){
	            priorID =  parseInt($(this).parent().parent().find('.ui-chatbox-msg[messageid]').attr('messageid'));
	        }
	        $(this).remove();
	        socket.request("/chat/loadpreviousmessagesPriorId",{priorID: priorID,boxId:boxId},function(msgs){
	            if(msgs.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                location.reload(); // Will boot back to login screen
	            }
	            for(var i=0;i<msgs.length;i++){
	            	if(msgs[i].fromUserId == <%=req.session.user.id%>){
	                    $("#chatbox_" + msgs[i].toUserId).chatbox("option", "boxManager").prependMsg('You', msgs[i].message,msgs[i].id);
	                }
	                else // to me
	                {
	                    $("#chatbox_" + msgs[i].fromUserId).chatbox("option", "boxManager").prependMsg(users.get(msgs[i].fromUserId).get('username'), msgs[i].message,msgs[i].id);
	                }
	            }
	            if(priorID!=null){
	                $("#chatbox_" + boxId).scrollTop($("div.ui-chatbox-msg[messageid=" + priorID+']').position().top);
	            }else{
	                $("#chatbox_" + boxId).scrollTop($("#chatbox_" + boxId).get(0).scrollHeight);
	            }
	            $("#chatbox_" + boxId).scroll(function(){
	                if($("#chatbox_" + boxId).scrollTop()==0){
	                    var scrollID = parseInt($("#chatbox_" + boxId).find('div.ui-chatbox-msg[messageid]').attr('messageid'));
	
	                    socket.request("/chat/loadpreviousmessagesPriorId",{priorID: scrollID,boxId:boxId},function(msgs){
	                        if(msgs.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                            location.reload(); // Will boot back to login screen
	                        }
	                        if(msgs.length==0){
	                            $("#chatbox_" + boxId).unbind();
	                            $("#chatbox_" + boxId).chatbox("option", "boxManager").prependMsg('', '<%= translate[locale]['End of messages'] %>',0);
	                            $("#chatbox_" + boxId).scrollTop(100);
	                            return;
	                        }
	                        for(var i=0; i<msgs.length; i++){
	                            if(msgs[i].fromUserId == <%=req.session.user.id%>){
	                                $("#chatbox_" + boxId).chatbox("option", "boxManager").prependMsg('You', msgs[i].message,msgs[i].id);
	                            }
	                            else                     // to me
	                            {
	                                $("#chatbox_" + boxId).chatbox("option", "boxManager").prependMsg(users.get(msgs[i].fromUserId).get('username'), msgs[i].message,msgs[i].id);
	                            }
	                        }
	                        $("#chatbox_" + boxId).scrollTop($("#chatbox_" + boxId + ' div.ui-chatbox-msg[messageid='+scrollID+']').position().top);
	                    });
	                }
	            });
	        });
	    });
	    
	    // Chatboxes - Keeps track of which chatboxes have been READ
	    $(document).on('focus','[id^=chatbox_] + div.ui-chatbox-input > textarea',function(){
	        var numIdt = parseInt($(this).parent().prev().attr('id').substring(8,$(this).parent().prev().attr('id').length));
	        users.get(numIdt).unset('unreadmessages');
	        updateBadge();
	        socket.request("/chat/seenmessage",{fromUserId:$(this).parent().prev().attr('id').substring(8,$(this).parent().prev().attr('id').length)},function(msg){
	            if(msg.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                location.reload(); // Will boot back to login screen
	            }
	        });
	    });
	    //Makes the badge at the top right show the correct number of unread messages
	    function updateBadge(){
	        if(users.where({unreadmessages:true}).length<=0){
	            $('.badge-div').css('display','none');
	        }
	        else{
	            $('.badge-div').css('display','block');
	            $('.badge-div span').html(users.where({unreadmessages:true}).length);
	        }
	    }
    
    <% } %>//End of messaging
    
	</script>
  
  
  
      <!-- The MAIN DIV -- BODY SECTION -->
      <!-- This is where the actual pages themselves get loaded in -->
    <div class="main-content">
       <!-- <div class="main-content-padder"></div>-->
   		<%- body %>
    </div> <!-- /container -->


  </body>
</html>
