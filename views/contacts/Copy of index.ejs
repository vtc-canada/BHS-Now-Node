<%
    var translate = {
        'en' : {
            'You do not have sufficient privileges to access':'You do not have sufficient privileges to access',
            'Error':'Error',
            'Buildings':'Buildings',
            'Date':'Date',
            'Equipment':'Equipment',
            'Device':'Device',
            'Alarm Type':'Alarm Type',
            'System Health':'System Health',
            'System Throughput':'System Throughput',
            'Time In System':'Time In System',
            'BHS Overview':'BHS Overview',
            'Time':'Time',
            'Alarms':'Alarms',
            'Daily Reminders':'Daily Reminders',
            'Predictive Mainenance Tasks':'Predictive Mainenance Tasks',
            'DEVICE':'DEVICE',
            'REASON':'REASON',
            'Uptime':'Uptime',
            'Failsafe Rate':'Failsafe Rate',
            'Tracking Rate':'Tracking Rate',
            'Key Performance Indicators':'Key Performance Indicators',
            'Throughput (bph)':'Throughput (bph)',
            'State':'State',
            'Jam Rate':'Jam Rate',
            'ATR Read Rate':'ATR Read Rate',
            'Cancel':'Cancel',
            'Delete':'Delete',
            'To create a new owner':'To create a new owner, select the contact and/or company associated with this building',
            'To create a new sale':'To create a new sale, click create',
            'Create':'Create',
            'Contact':'Contact',
            'Contacts':'Contacts',
            'Company':'Company'
        },
        'es' : {
            'You do not have sufficient privileges to access':'Usted no tiene suficientes privilegios para acceder a',
            'Error':'Error',
            'Buildings':'Salpicadero',
            'Date':'Date',
            'Equipment':'Equipment',
            'Device':'Device',
            'REASON':'REASON',
            'Alarm Type':'Alarm Type',
            'System Health':'System Health',
            'System Throughput':'System Throughput',
            'Time In System':'Time In System',
            'BHS Overview':'BHS Overview',
            'Time':'Time',
            'Alarms':'Alarms',
            'Daily Reminders':'Daily Reminders',
            'Predictive Mainenance Tasks':'Predictive Mainenance Tasks',
            'DEVICE':'DEVICE',
            'Uptime':'Uptime',
            'Failsafe Rate':'Failsafe Rate',
            'Tracking Rate':'Tracking Rate',
            'Key Performance Indicators':'Key Performance Indicators',
            'Throughput (bph)':'Throughput (bph)',
            'State':'State',
            'Jam Rate':'Jam Rate',
            'ATR Read Rate':'ATR Read Rate',
            'Cancel':'Cancel',
            'Delete':'Delete',
            'To create a new owner':'To create a new owner, select the contact and/or company associated with this building',
            'To create a new sale':'To create a new sale, click create',
            'Create':'Create',
            'Contact':'Contact',
            'Contacts':'Contacts',
            'Company':'Company'
        }
    }
%>

<div class="row-fluid page-banner">
    <div class="banner-div"><i class="icon-group icon-1x banner-icon-top"></i><div class="banner-div-text"><%= translate[req.session.user.locale]['Contacts'] %></div></div>
</div>

        <!-- Throws in Error messages if they were passed in from the controller -->
<% if(typeof(errormessage)!='undefined'){ %>
<div class="alert alert-error" style="border-radius:0px;">
    <button type="button" class="close" data-dismiss="alert">Ã—</button>
    <strong><%= translate[req.session.user.locale]['Error'] %>:</strong>
    <%= translate[req.session.user.locale][errormessage] %><% if(typeof(errorurl)!='undefined'){ %> <%= errorurl %><% } %>
</div>
<% } %>



<div class="row-fluid create-report-controls-wrapper">
    <div class="row">
        <div class="span8 offset2 create-report-controls" style="padding-top: 60px;">
           <div class="row-fluid">
               <div class="row">
                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_address">Search Address:</label></div>
                   <div class="span8 report-control-right-control">
                       <input type="text" id="search_address" value="">
                   </div>
               </div>
               <div class="row">
                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_contact">Search Contact:</label></div>
                   <div class="span8 report-control-right-control">
                       <input type="text" id="search_contact" value="">
                   </div>
               </div>
           </div>
        </div>
    </div>
</div>

<div class="row-fluid" style="margin-top:19px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;">Contacts</span>
             <div style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="create_building">Create New</div>
        
        </div>
        <div class="row-fluid key-indicaters-frame" id="iframediv">
            <div class="row-fluid">
                <table id="contacts" class="display" cellspacing="0" width="100%">
			        <thead>
			            <tr>
			            	<th>Id<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Company<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Phone<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Email<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Contact<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Address<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			            </tr>
			        </thead>
			 
			    </table>
            </div>
        </div>
    </div>
</div>
<script type="text/template" id="contact-template">
	<div class="row-fluid " style="position:relative; cursor:default;" contact_id="{{=contact_id}}">

		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label" style="min-height:40px;">Contact Name:</div>
			<div class="span7" style="min-height:40px;"><select id="contact_name" class="contact_name" value="{{=contact_name}}"></select></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Contact Number:</div>
			<div class="span7"><input disabled="disabled" type="text" id="phone_number" value="{{=phone_number}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Contact Email:</div>
			<div class="span5"><input disabled="disabled" type="text" id="email" value="{{=email}}"></div>
			<div class="span2"><div title="Create new Contact!" style="{{ if(typeof(createmode)=='undefined'){ }}display:none;{{ } }}" class="editmode-create pull-right btn btn-success">Create</div>{{ if(typeof(editmode)!='undefined'){ }}<div class="editmode-save pull-right btn {{ if(contact_id=='new'){}}btn-primary{{ }else{ }}btn-danger{{ } }}">Set</div>{{ }else if(typeof(createmode)=='undefined'){ }}<div title="{{ if(contact_id=='new'){}}Edit your new record.{{ }else{ }}Beware, this can make changes to many records!{{ } }}" class="editmode-edit pull-right btn {{ if(contact_id=='new'){}}btn-primary{{ }else{ }}btn-danger{{ } }}">Edit</div>{{ } }}</div>
		</div>
	</div>
</script>
<script type="text/template" id="company-template">
	<div class="row-fluid " style="position:relative; cursor:default;"">

		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Company Name:</div>
			<div class="span7"><select id="company_name" class="company_name"  value="{{=company_name}}"></select></div>
		</div>
	</div>
</script>
<script type="text/template" id="address-template">
	<div class="row-fluid " style="position:relative; cursor:default;"">
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Number Begin:</div>
			<div class="span7"><input type="hidden" id="address_id" value="{{=address_id}}"><input type="text" id="street_number_begin" value="{{=street_number_begin}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Number End:</div>
			<div class="span7"><input type="text" id="street_number_end" value="{{=street_number_end}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Name:</div>
			<div class="span7"><input type="text" id="street_name" value="{{=street_name}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Postal Code:</div>
			<div class="span7"><input type="text" id="postal_code" value="{{=postal_code}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">City:</div>
			<div class="span7"><input type="text" id="city" value="{{=city}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Province:</div>
			<div class="span7"><input type="text" id="province" value="{{=province}}" ></div>
		</div>
	</div>
</script>

<div class="row-fluid edit-item-section" style="display:none; margin-top:19px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;" id="building-section-title">Edit Mapping Details</span>
         	<button style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="save_mapping">Save</button>
         	<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="changes_pending">Changes Pending. &nbsp;</div>
  		 </div>
        <div class="row-fluid " id="iframediv">
        	<div class="content-wrapper building-details-frame">
    			<div class="row-fluid">
					<div class="span12">
						<div class="row-fluid">
							<div class="row-category">
								<span class="" id="sales_title">
									<i class="icon-plus-sign" style="margin-right:10px; display:none;"></i>
									<i class="icon-pencil"></i> &nbsp&nbsp<b>Contact Information</b>
								</span>
								<div class="pull-right" style="height:40px; display:none;">
									<span  id="delete_mapping" class="row-category-button-wrapper">
										<span class="btn btn-danger">
						                    <i class="glyphicon glyphicon-plus"></i>
						                    <span>Delete Mapping</span>
						                </span>
									</span>
								</div>
								<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="new_contact_pending">Contact Created. &nbsp;</div>
								<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="mapped_contact_pending">Mapping Changed. &nbsp;</div>
								<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="modified_contact_pending">Contact Modified. &nbsp;</div>

							</div>
						</div>
					</div>
				</div>
			
				<div id="contact_information_section" class="row-fluid">
				</div>
					
				<div class="row-fluid">
					<div class="span12">
						<div class="row-fluid">
							<div class="row-category">
								<span class="" id="sales_title">
									<i class="icon-plus-sign" style="margin-right:10px; display:none;"></i>
									<i class="icon-pencil"></i> &nbsp&nbsp<b>Company Information</b>
								</span>
								<div class="pull-right" style="height:40px; display:none;">
									<span  id="delete_mapping" class="row-category-button-wrapper">
										<span class="btn btn-danger">
						                    <i class="glyphicon glyphicon-plus"></i>
						                    <span>Delete Mapping</span>
						                </span>
									</span>
								</div>
							</div>
						</div>
					</div>
				</div>
					
        		<div id="company_information_section">
        		</div>
        		
        		<div class="row-fluid">
					<div class="span12">
						<div class="row-fluid">
							<div class="row-category">
								<span class="" id="sales_title">
									<i class="icon-plus-sign" style="margin-right:10px; display:none;"></i>
									<i class="icon-pencil"></i> &nbsp&nbsp<b>Address Information</b>
								</span>
								<div class="pull-right" style="height:40px; display:none;">
									<span  id="delete_mapping" class="row-category-button-wrapper">
										<span class="btn btn-danger">
						                    <i class="glyphicon glyphicon-plus"></i>
						                    <span>Delete Mapping</span>
						                </span>
									</span>
								</div>
							</div>
						</div>
					</div>
				</div>
					
        		<div id="address_information_section">
        		</div>
        		
            </div>
        </div>
    </div>
</div>


<script>

    $(document).ready(function(){
    
    	var init_id = <%=typeof(init_id)!='undefined'?init_id:null%>;
    	
    	var mapping_id = null;
	   	var curcontactsval = '';
		var contactssearchtimer;
		var contactscombobox;
		var curcompanyval = '';
		var companysearchtimer;
		var companycombobox;
		var datatable = $('#contacts').dataTable({
		        "processing": true,
		        "serverSide": true,
		        "dom":"ltipr",
		        "ajax": {
		        	"url":"/contacts/getcompanycontacts",
	        		"data":function(d){
	        			d.address_search = $("#search_address").val();
	        			d.contact_search = $("#search_contact").val();
	        		},
	        		error: function(xhr, error, thrown){
	        			alert('an error');
	        		}
	        	},
		        "aoColumns":[
		        	{"mData":"mapping_id","visible":false}
			        ,{"mData":"company_name"}
			        ,{"mData":"phone"}
			        ,{"mData":"email"}
			        ,{"mData":"contact_name"}
			        ,{"mData":function(data,b){ 
			        	return "<b>"+data.street_number_begin+" "+data.street_name+", "+data.city+"</b>"; }
			        }
		        ],
		        "rowCallback": function( row, data, displayIndex ) {
					$(row).attr('mapping_id',data['mapping_id']);
					$(row).attr('contact_id',data['contact_id']);
					$(row).attr('company_id',data['company_id']);
					$(row).attr('address_id',data['address_id']);
					$(row).click(function(){
						//alert('i like to click rows');
						$('.edit-item-section').css('display','');
						$('#new_contact_pending').css('display','none');
						$('#mapped_contact_pending').css('display','none');
						$('#modified_contact_pending').css('display','none');
						
						mapping_id = $(row).attr('mapping_id');
    					contact.fetch({id:parseInt($(row).attr('contact_id'))});
    					company.fetch({id:parseInt($(row).attr('company_id'))});
    					address.fetch({id:parseInt($(row).attr('address_id'))});
               		});
		        }
	    });
	    $('select[name=contacts_length]').css('margin-top','10px');
	    $('#contacts_length label').css('margin-bottom','0px');
	    
        $('#contacts tbody').on('click', 'tr', function () {
        	$(this).siblings().removeClass('selected');
        	$(this).removeClass('selected').addClass('selected');
	    });
	    $('#contacts').on('draw.dt',function(event,datatable){
	     	
    	});
    	
    	

		$('#search_address').keydown(function(){
			setTimeout(function(){
				datatable.api().ajax.reload();
			},10);
		});
		$('#search_contact').keydown(function(){
			setTimeout(function(){
				datatable.api().ajax.reload();
			},10);
		});
		
    	
    	
    	
	    	 // just shows the changes are pending, by scanning through the collection to see if that's the case.
	    function setChangesPending(){
	    
	    	if(contact.get('contact_id')=='new'){
	    		$('#new_contact_pending').css('display','block');
	    		$('#mapped_contact_pending').css('display','none');
	    		$('#modified_contact_pending').css('display','none');
	    	}else if(typeof(contact.get('modified'))!='undefined'){
	    		$('#new_contact_pending').css('display','none');
	    		$('#mapped_contact_pending').css('display','none');
	    		$('#modified_contact_pending').css('display','block');
	    	}else if(typeof(contact.get('dosync'))!='undefined'){
	    		$('#new_contact_pending').css('display','none');
	    		$('#mapped_contact_pending').css('display','block');
	    		$('#modified_contact_pending').css('display','none');
	    	}
	    	return;
            //buildingcontacts.each(function(bcontact){
           //	if(typeof(bcontact.get('dodelete'))!='undefined'||typeof(bcontact.get('dosync'))!='undefined')
            //	{
            //		change = true;
            //	}
            //});
	        $('#save_mapping')[0].disabled = !change;
	        if(change){
	            $('#changes_pending').css('display','block');
	        }
	        else{
	            $('#changes_pending').css('display','none');
	        }
	    }
    	
    	
    	
		///////////////////////////
	    /// CONTACT        ////////
	    ///////////////////////////   
		var ContactModel = Backbone.Model.extend({
	        urlRoot: '/contacts/getcontact',
	        socket:null,
	        sync:function(method,model,options){
	        	var where = options;
	            if(typeof this.urlRoot === "string" && this.urlRoot !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request(this.urlRoot+collectionid, where, _.bind(function(contact){
	                    if(contact.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.clear();
	                    this.set(contact);
	                    if(contactView==null){
	                    	contactView = new ContactBackboneView();
	                    	contactView.render();
	                    }else{
	                    	contactView.render();
	                    }
	                }, this));
	            }
	        
	        }
	    });
	    var contact = new ContactModel();
		
	    	
	    ///////////////////////////
	    /// Contact      View ////
	    ///////////////////////////	
	    var ContactBackboneView = Backbone.View.extend({
	        el: '#contact_information_section',
	        events: {
	           "click .editmode-edit" : "edit",
	           "click .editmode-save" : "save",
	           "click .editmode-create" : "create",
	           "change input#phone_number":"phone",
	           "change input#email":"email"
	           
	        },
	        email:function(event){
	        	contact.set('email',$('input#email').val());
	        	contact.set('modified',true);
	        	setChangesPending();
	        },
	        phone:function(event){
	        	contact.set('phone_number',$('input#phone_number').val());
	        	contact.set('modified',true);
	        	setChangesPending();
	        },
	        create:function(event){
	        	//contact.set('contact_id','new');
	        	//contact.unset('createmode');
	        	//contact.set('editmode',true);
	        	//contactView.render();
	        	//enableContactFields(true);
	        	$('input.contact_name').change();
	        },
	        save:function(event){
	        	//setTimeout(function(){
		        	contact.unset('editmode');
		        	//contact.set('contact_name',curcontactsval);
					contactView.render();
		        	enableContactFields(false);
	        	//},100);
	        	

	        },
	        edit:function(event){
	        	contact.set('editmode',true);
	        	contactView.render();
	        	enableContactFields(true);
	        	//setChangesPending();
	        },
	        initialize: function () {
	            //this.render();
	        },
	        template: _.template($('#contact-template').html()),
	        render: function () {
	    	    this.$el.empty();
	        	this.$el.append(this.template(contact.toJSON()));
	        	
	        	
	        	socket.get('/contacts/getcontactsbyname',{},function(res){
		        	$('select.contact_name').empty();
		        	$('select#contact_name').append('<option email="'+contact.get('email')+'" phone_number="' + contact.get('phone_number') + '" contact_id="'+contact.get('contact_id')+'" value="'+contact.get('contact_id')+'" contact_name="'+contact.get('contact_name')+'">'+contact.get('contact_name')+'</option>');
		        	for(var i=0;i<res.length;i++){
		        		if(parseInt(contact.get('contact_id'))!=parseInt(res[i].contact_id)){
			        		$('select.contact_name').append('<option email="'+res[i].email+'" phone_number="' + res[i].phone_number + '" contact_id="'+res[i].contact_id+'" value="'+res[i].contact_id+'" contact_name="'+res[i].contact_name+'">'+res[i].contact_name+'</option>');
		        		}
		        	}
		        	contactscombobox = $('select.contact_name').combobox();
		        	$('input.contact_name').on('keyup',function(e){
		        		if(curcontactsval!=$('input.contact_name').val()&&e.keyCode!=9&&e.keyCode!=13&&e.keyCode!=27)
		        		{
	        				curcontactsval =  $('input.contact_name').val();
		        			updateContactsCombobox();
			        		if(typeof(contact.get('editmode'))=='undefined'){
	        					enableContactFields(false);
								$('input#phone_number').val('');
								$('input#email').val('');
			        		}
			        			
		        			if(typeof(contact.get('editmode'))=='undefined'&&typeof(contact.get('createmode'))=='undefined'){
		        				contact.set('createmode',true);
		        				if(typeof(contact.get('editmode'))!='undefined'){
		        					contact.unset('editmode');
		        				}
		        				//contactView.render();
			        			$('.editmode-save').css('display','none');
			        			$('.editmode-edit').css('display','none');
			        			$('.editmode-create').css('display','');
		        			}
	        			}
		        		else if(e.keyCode==9||e.keyCode==13||e.keyCode==27)
		        		{
		        			$('input.contact_name').change();
	        			}
	        		});
	        		$('input.contact_name').change(function(){
	        			var selectedoption = $('select.contact_name option[contact_name="'+$('input.contact_name').val()+'"]');
	        			if(selectedoption.length==1)
	        			{
	        				var newcontact = {contact_id:selectedoption.attr('contact_id'),contact_name:selectedoption.attr('contact_name'), email:selectedoption.attr('email'),phone_number:selectedoption.attr('phone_number')};
	        				//if(typeof(selectedoption.attr('dosync'))!='undefined'&&selectedoption.attr('dosync'))
	        				//{
	        					newcontact.dosync = true;
	        				//}
	        				contact = new ContactModel(newcontact);
	        				contactView.render();
    						enableContactFields(false);
	    				}else{
	    					if($('input.contact_name').val()!='')
	    					{
	    						if(mapping_id=='new')
	    						{
	    							contact = new ContactModel({contact_id:'new' ,contact_name:$('input.contact_name').val() ,email: '',phone_number: ''});
	    							contactView.render();
    							}else{
	    							contact = new ContactModel({editmode:true, contact_id:'new' ,contact_name:$('input.contact_name').val() ,email: '',phone_number: ''});
	    							contactView.render();
	        						enableContactFields(true);
    								//contact.
    								//contact.set('dosync',true);
    								//contact.set('contact_name',$('input.contact_name').val());
    								//contactView.render();
    							}
	    					}
	    				}
					});
					
	    			$('.contact_name').siblings('.add-on').find('.icon-remove').click(function(){
	    				resetContactFields();
					});
	    			$('.contact_name').siblings('.add-on').find('.caret').click(function(){
	    				resetContactFields();
					});
	    			$('.contact_name').siblings('.add-on').click(function(){
	    				resetContactFields();
					});
					if(typeof(contact.get('editmode'))!='undefined'&&contact.get('contact_id')=='new'){
						$('#phone_number').focus();
					}else if(typeof(contact.get('editmode'))!='undefined'){
						$('.contact_name').focus();
					}
					//enableContactFields(false);
	           		setChangesPending();
	    							
	        	});
        		
	        }
	    });
	    var contactView;
	    
	    function resetContactFields(){
			$('input.contact_name').val('');
			$('input#phone_number').val('');
			$('input#email').val('');
			enableContactFields(false);
			$('input.contact_name').removeAttr('disabled');
			$('input.contact_name').change();
			$('.editmode-save').css('display','none');
			$('.editmode-edit').css('display','none');
			$('.editmode-create').css('display','');
			
	    }
	    function enableContactFields(editmode){
	    	if(editmode){
		    	$('input#phone_number').removeAttr('disabled');
		    	$('input#email').removeAttr('disabled');
	    	}else{
		    	$('input#phone_number').attr('disabled','disabled');
		    	$('input#email').attr('disabled','disabled');
	    	}
	    }
	    
	    function updateContactsCombobox(){
    		clearTimeout(contactssearchtimer);
    		contactssearchtimer = setTimeout(function(){
    			socket.get('/contacts/getcontactsbyname',{search:curcontactsval},function(res){
    				var tempval = $('input.contact_name').val();
        			$('select.contact_name').empty();
        			if(typeof(contact.get('editmode'))!='undefined')
        			{
        				contact.set('modified',true);
		        		$('select#contact_name').append('<option '+(typeof(contact.get('dosync'))!='undefined'?'dosync="'+contact.get('dosync')+'"':'') +' email="'+contact.get('email')+'" phone_number="' + contact.get('phone_number') + '" contact_id="'+contact.get('contact_id')+'" value="'+contact.get('contact_id')+'" contact_name="'+contact.get('contact_name')+'">'+contact.get('contact_name')+'</option>');
		        	}
		        	for(var i=0;i<res.length;i++){
		        		if($('select#contact_name option[contact_id='+parseInt(res[i].contact_id)+']').length==0){//   parseInt(contact.get('contact_id'))!=parseInt(res[i].contact_id)){
			        		$('select.contact_name').append('<option email="'+res[i].email+'" phone_number="' + res[i].phone_number + '" contact_id="'+res[i].contact_id+'" value="'+res[i].contact_id+'" contact_name="'+res[i].contact_name+'">'+res[i].contact_name+'</option>');
		        		}
		        	}
        			contactscombobox.data('combobox').refresh(); 
        			$('input.contact_name').val(tempval);
        			contactscombobox.data('combobox').lookup();
        			
    			});
    		},100);
	    }
	    
	    
	    ///////////////////////////
	    /// Company        ////////
	    ///////////////////////////    	
	    	
		var CompanyModel = Backbone.Model.extend({
	        urlRoot: '/contacts/getcompany',
	        socket:null,
	        sync:function(method,model,options){
	        	var where = options;
	            if(typeof this.urlRoot === "string" && this.urlRoot !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request(this.urlRoot+collectionid, where, _.bind(function(company){
	                    if(company.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.clear();
	                    this.set(company);
	                    if(companyView==null){
	                    	companyView = new CompanyBackboneView();
	                    	companyView.render();
	                    }else{
	                    	companyView.render();
	                    }
	                }, this));
	            }
	        
	        }
	    });
	    var company = new CompanyModel();
		
	    ///////////////////////////
	    /// Company View       ////
	    ///////////////////////////
	
	    var CompanyBackboneView = Backbone.View.extend({
	        el: '#company_information_section',
	        events: {
	           // "change .building-segment-wrapper input" : "inputChange"
	        },
	        inputChange:function(event){
	        	
	        	//setChangesPending();
	        },
	        initialize: function () {
	            //this.render();
	        },
	        template: _.template($('#company-template').html()),
	        render: function () {
	    	    this.$el.empty();
	        	this.$el.append(this.template(company.toJSON()));
	        	socket.get('/contacts/getcompaniesbyname',{},function(res){
		        	$('select.company_name').empty();
		        	$('select.company_name').append('<option company_id="'+company.get('company_id')+'" value="'+company.get('company_id')+'" company_name="'+company.get('company_name')+'">'+company.get('company_name')+'</option>');
		        	for(var i=0;i<res.length;i++){
		        		if(parseInt(company.get('company_id'))!=parseInt(res[i].company_id)){
			        		$('select.company_name').append('<option company_id="'+res[i].company_id+'" value="'+res[i].company_id+'" company_name="'+res[i].company_name+'">'+res[i].company_name+'</option>');
		        		}
		        	}
		        	companycombobox = $('select.company_name').combobox();
		        	$('input.company_name').on('keyup',function(e){
		        		if(curcompanyval!=$('input.company_name').val()&&e.keyCode!=9&&e.keyCode!=13&&e.keyCode!=27)
		        		{
		        			curcompanyval =  $('input.company_name').val();
		        			updateCompanyCombobox();
	        			}
		        		else if(e.keyCode==9||e.keyCode==13||e.keyCode==27)
		        		{
		        			$('input.company_name').change();
	        			}
	        		});
	        		$('input.company_name').change(function(){
	        			var selectedoption = $('select.company_name option[company_name="'+$('input.company_name').val()+'"]');
	        			if(selectedoption.length==1)
	        			{
	        				var newcompany = {company_id:selectedoption.attr('company_id'),company_name:selectedoption.attr('company_name')};
	        				if(typeof(selectedoption.attr('dosync'))!='undefined'&&selectedoption.attr('dosync'))
	        				{
	        					newcompany.dosync = true;
	        				}
	        				company = new CompanyModel(newcompany);
	        				companyView.render();
	        				socket.get('/contacts/getaddressbycompanyid/'+company.get('company_id'),{},function(addressval){
	        					address.fetch({id:addressval.address_id});
	        				});
	    				}else{
	    					if($('input.company_name').val()!='')
	    					{
	    						if(mapping_id=='new')
	    						{
	    							company = new CompanyModel({company_id:'new' ,company_name:$('input.company_name').val()});
	    							companyView.render();
    							}else{
    								company.set('dosync',true);
    								company.set('company_name',$('input.company_name').val());
    								companyView.render();
    							}
	    					}
	    				}
					});
					
	    			$('.company_name').siblings('.add-on').find('.icon-remove').click(function(){
	    				$('input.company_name').val('');
	    				$('input.company_name').change();
					});
	    			$('.company_name').siblings('.add-on').find('.caret').click(function(){
	    				$('input.company_name').val('');
	    				$('input.company_name').change();
					});
	    			$('.company_name').siblings('.add-on').click(function(){
	    				$('input.company_name').val('');
	    				$('input.company_name').change();
					});
	        	});
        		
	            setChangesPending();
	        }
	    });
	    var companyView;
    	
    	function updateCompanyCombobox(){
    		clearTimeout(companysearchtimer);
    		companysearchtimer = setTimeout(function(){
    			socket.get('/contacts/getcompaniesbyname',{search:curcompanyval},function(res){
    				var tempval = $('input.company_name').val();
        			$('select.company_name').empty();
		        	$('select.company_name').append('<option '+(typeof(company.get('dosync'))!='undefined'?'dosync="'+company.get('dosync')+'"':'') +' company_id="'+company.get('company_id')+'" value="'+company.get('company_id')+'" company_name="'+company.get('company_name')+'">'+company.get('company_name')+'</option>');
		        	for(var i=0;i<res.length;i++){
		        		if(parseInt(company.get('company_id'))!=parseInt(res[i].company_id)){
			        		$('select.company_name').append('<option company_id="'+res[i].company_id+'" value="'+res[i].company_id+'" company_name="'+res[i].company_name+'">'+res[i].company_name+'</option>');
		        		}
		        	}
        			companycombobox.data('combobox').refresh(); 
        			$('input.company_name').val(tempval);
        			companycombobox.data('combobox').lookup();
    			});
    		},100);
	    }
	    
	    
    	
    	 //////////////////////////
	    /// Address         ///////
	    ///////////////////////////    	
	    	
		var AddressModel = Backbone.Model.extend({
	        urlRoot: '/contacts/getaddress',
	        socket:null,
	        sync:function(method,model,options){
	        	var where = options;
	            if(typeof this.urlRoot === "string" && this.urlRoot !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request(this.urlRoot+collectionid, where, _.bind(function(address){
	                    if(address.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.clear();
	                    this.set(address);
	                    if(addressView==null){
	                    	addressView = new AddressBackboneView();
	                    	addressView.render();
	                    }else{
	                    	addressView.render();
	                    }
	                }, this));
	            }
	        
	        }
	    });
	    var address = new AddressModel();
		
	    ///////////////////////////
	    /// Address View       ////
	    ///////////////////////////
	
	    var AddressBackboneView = Backbone.View.extend({
	        el: '#address_information_section',
	        events: {
	           // "change .building-segment-wrapper input" : "inputChange"
	        },
	        inputChange:function(event){
	        	//setChangesPending();
	        },
	        initialize: function () {
	            //this.render();
	        },
	        template: _.template($('#address-template').html()),
	        render: function () {
	    	    this.$el.empty();
	        	this.$el.append(this.template(address.toJSON()));
	            setChangesPending();
	        }
	    });
	    var addressView;
    	
    	
        
    });
</script>
