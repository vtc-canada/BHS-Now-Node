<%
    var translate = {
        'en' : {
            'You do not have sufficient privileges to access':'You do not have sufficient privileges to access',
            'Error':'Error',
            'Dashboard':'Dashboard',
            'Date':'Date',
            'Equipment':'Equipment',
            'Device':'Device',
            'Alarm Type':'Alarm Type',
            'System Health':'System Health',
            'System Throughput':'System Throughput',
            'Time In System':'Time In System',
            'BHS Overview':'BHS Overview',
            'Time':'Time',
            'Alarms':'Alarms',
            'Daily Reminders':'Daily Reminders',
            'Predictive Mainenance Tasks':'Predictive Mainenance Tasks',
            'DEVICE':'DEVICE',
            'REASON':'REASON',
            'Uptime':'Uptime',
            'Failsafe Rate':'Failsafe Rate',
            'Tracking Rate':'Tracking Rate',
            'Key Performance Indicators':'Key Performance Indicators',
            'Throughput (bph)':'Throughput (bph)',
            'State':'State',
            'Jam Rate':'Jam Rate',
            'ATR Read Rate':'ATR Read Rate'
        },
        'es' : {
            'You do not have sufficient privileges to access':'Usted no tiene suficientes privilegios para acceder a',
            'Error':'Error',
            'Dashboard':'Salpicadero',
            'Date':'Date',
            'Equipment':'Equipment',
            'Device':'Device',
            'REASON':'REASON',
            'Alarm Type':'Alarm Type',
            'System Health':'System Health',
            'System Throughput':'System Throughput',
            'Time In System':'Time In System',
            'BHS Overview':'BHS Overview',
            'Time':'Time',
            'Alarms':'Alarms',
            'Daily Reminders':'Daily Reminders',
            'Predictive Mainenance Tasks':'Predictive Mainenance Tasks',
            'DEVICE':'DEVICE',
            'Uptime':'Uptime',
            'Failsafe Rate':'Failsafe Rate',
            'Tracking Rate':'Tracking Rate',
            'Key Performance Indicators':'Key Performance Indicators',
            'Throughput (bph)':'Throughput (bph)',
            'State':'State',
            'Jam Rate':'Jam Rate',
            'ATR Read Rate':'ATR Read Rate'
        }
    }
%>

<div class="row-fluid page-banner">
    <div class="banner-div"><i class="icon-dashboard icon-1x banner-icon-top"></i><div class="banner-div-text"><%= translate[req.session.user.locale]['Dashboard'] %></div></div>
</div>

        <!-- Throws in Error messages if they were passed in from the controller -->
<% if(typeof(errormessage)!='undefined'){ %>
<div class="alert alert-error" style="border-radius:0px;">
    <button type="button" class="close" data-dismiss="alert">Ã—</button>
    <strong><%= translate[req.session.user.locale]['Error'] %>:</strong>
    <%= translate[req.session.user.locale][errormessage] %><% if(typeof(errorurl)!='undefined'){ %> <%= errorurl %><% } %>
</div>
<% } %>



<div class="row-fluid create-report-controls-wrapper">
    <div class="row">
        <div class="span8 offset2 create-report-controls" style="padding-top: 60px;">
           <div class="row-fluid">
               <div class="row">
                   <div class="span3 report-control-left-label" style="min-height: 20px;"><label for="reporttype">Quick Search:</label></div>
                   <div class="span8 report-control-right-control">
                       <input type="text" id="searchfield" value="York">
                   </div>
               </div>
               <div class="row" style="margin-top:15px;">
                   <div class="span7 report-control-left-label">
                   		<a id="advanced_criteria_toggler" data-toggle="collapse" data-target="#collapseadvanced" style="text-decoration: none; color: #5a6573;">
							<div style="float:left;"></i><i class="icon-plus-sign icon-2x"></i></div><div style="float: left; padding-bottom: 20px;margin-top: -6px;margin-left: 20px;"><h4>Advanced Criteria</h4></div>
						</a>
                   </div>
               </div>
               <div class="row collapse" id="collapseadvanced">
	               <div class="">
	                   <div class="span3 report-control-left-label" ><label for="reporttype">Units:</label></div>
	                   <div class="span3 report-control-right-control">
	                       <input type="text" style="width:120px; max-width:70%" id="unitsmin">
	                   </div>
	                   <div class="span1 report-control-right-control">
	                       <span style="display: inline-block;width: auto;height: 20px;min-width: 16px;padding: 4px 5px;font-size: 14px;font-weight: normal;line-height: 20px;">to</span>
	
	                   </div>
	                   <div class="span3 report-control-right-control">
	                       <input type="text" style="width:120px; max-width:70%" id="unitsmax">
	                   </div>
	               </div>
	               <div class="">
	               		<div class="span3 report-control-left-label" style="">
	               			<label for="start_time">Sale Date:</label>
	           			</div>
	           			<div class="input-append span3 report-control-right-control" id="start_time_gen">
	           				<input class="" data-format="yyyy-MM-dd" style="width:150px; max-width:70%;" id="start_time" type="text" value="">
	       					<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
	       				</div>
	           			<div class="input-append span1 report-control-right-control">
	       					<span style="display: inline-block;width: auto;height: 20px;min-width: 16px;padding: 4px 5px;font-size: 14px;font-weight: normal;line-height: 20px;">to</span>
						</div>
	           			<div class="input-append span3 report-control-right-control" id="end_time_gen">
	           				<input class="" data-format="yyyy-MM-dd" style="width:150px; max-width:70%;" id="end_time" type="text" value="">
	   						<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
	       				</div>
	       				
	   				</div>
	   			</div>
           </div>
        </div>
    </div>
</div>


<!-- There next templates are the pieces of the BHS Overview drawing -->
<!-- In order, they represent the columns across the diagram -->


<div class="row-fluid" style="margin-top:19px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;">Buildings</span>
             <div style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="create_building">Create New</div>
        
        </div>
        <div class="row-fluid key-indicaters-frame" id="iframediv">
            <div class="row-fluid">
                <table id="buildings" class="display" cellspacing="0" width="100%">
			        <thead>
			            <tr>
			            	<th>Id<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Address<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Units<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Owner<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Property Manager<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			                <th>Sale Date<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
			            </tr>
			        </thead>
			 
			    </table>
            </div>
        </div>
    </div>
</div>


<div class="row-fluid edit-item-section" style="display:none; margin-top:19px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;">Edit Building Details</span>
         	<div style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="save_building">Save</div>
         	<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="changes_pending">Changes Pending. &nbsp;</div>
  		 </div>
        <div class="row-fluid " id="iframediv">
        	<div class="content-wrapper building-details-frame">
	            <div class="span12">
	            	
	                
	            </div>
            </div>
        </div>
    </div>
</div>

<script type="text/template" id="building-photo-template">
	<div class="span3 buildingimage">
		<div class="row-fluid" style="position:relative;">
			<img src="">
			<div class="buildingimagetrash"><i class="icon-trash icon-2x"></i></div>
			
			<div id="UploadGif" style="margin: auto; display: none;">
                <div id="blockG_1" class="UploadGif_block">
                </div>
                <div id="blockG_2" class="UploadGif_block">
                </div>
                <div id="blockG_3" class="UploadGif_block">
                </div>
            </div>
			
		</div>
		<div class="row-fluid">
			<div class="progress" style="display: none; margin-bottom: 0px;">
				<div class="bar" style="width: 0%;"></div>
			</div>
		</div>
	</div>
</script>

<script type="text/template" id="building-details-template">
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-camera"></i> &nbsp&nbsp<b>Photo</b>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
						
							<span class="btn btn-success fileinput-button">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Add files...</span>
			                </span>
						
							<div style='height: 0px;width:0px; overflow:hidden;'><input type="file" name="filesToUpload[]" id="filesToUpload" multiple="multiple"/></div>
    
						</span>
					</div>
				</div>
			</div>
		</div>
	
	</div>
	<div class="row-fluid building-photo-wrapper">
	
	</div>	
	
	
	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-home"></i> &nbsp&nbsp<b>Address</b>
				</div>
			</div>
		</div>
	
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="row-fluid">
			<div class="span5 segment-label">Street Number Begin:</div>
			
			<div class="span7"><input type="hidden" id="building_id"><input type="text" id="street_number_begin"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Street Number End:</div>
			<div class="span7"><input type="text" id="street_number_end"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Street Name:</div>
			<div class="span7"><input type="text" id="street_name"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Postal Code:</div>
			<div class="span7"><input type="text" id="postal_code"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">City:</div>
			<div class="span7"><input type="text" id="city"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Province:</div>
			<div class="span7"><input type="text" id="province"></div>
		</div>
	</div>	
	
	
	
		
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-credit-card"></i> &nbsp&nbsp<b>Owners</b>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
							<span id="add_owner" class="btn btn-primary">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Add Owner</span>
			                </span>
						</span>
					</div>
				</div>
			</div>
		</div>
	
	</div>
	
	
		
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-legal"></i> &nbsp&nbsp<b>Sellers</b>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
							<span id="add_seller" class="btn btn-primary">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Add Seller</span>
			                </span>
						</span>
					</div>
				</div>
			</div>
		</div>
	
	</div>
	
	
	
	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-building"></i> &nbsp&nbsp<b>Building Details</b>
				</div>
			</div>
		</div>
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="row-fluid">
			<div class="span5 segment-label">Building Type:</div>
			<div class="span7"><select type="text" id="building_type"><% for(var i=0;i<building_types.length;i++){ %><%-'<option value="'+building_types[i].id+'">'+building_types[i].type+'</option>'%><% } %></select>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Property Management:</div>
			<div class="span7"><input type="text" id="property_mgmt_company"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Previous Property Management:</div>
			<div class="span7"><input type="text" id="prev_property_mgmt_company"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Heat System:</div>
			<div class="span7"><select type="text" id="heat_system"><% for(var i=0;i<heat_types.length;i++){ %><%-'<option value="'+heat_types[i].id+'">'+heat_types[i].type+'</option>'%><% } %></select>

		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Heat Age:</div>
			<div class="span7"><input type="text" id="heat_system_age"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Boiler Age:</div>
			<div class="span7"><input type="text" id="boilers_age"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Cable Internet Provider:</div>
			<div class="span7"><input type="text" id="cable_internet_provider"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Total Units:</div>
			<div class="span7"><input type="text" id="unit_quantity"></div>
		</div>
	</div>
	
	
	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-money"></i> &nbsp&nbsp<b>Equity Details</b>
				</div>
			</div>
		</div>
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="row-fluid">
			<div class="span5 segment-label">Assessed Value:</div>
			<div class="span7"><input type="text" id="assessed_value"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Bachelor Rent Price:</div>
			<div class="span7"><input type="text" id="bachelor_price"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">1 Bedroom Rent Price:</div>
			<div class="span7"><input type="text" id="bedroom1_price"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">2 Bedroom Rent Price:</div>
			<div class="span7"><input type="text" id="bedroom2_price"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">3 Bedroom Rent Price:</div>
			<div class="span7"><input type="text" id="bedroom3_price"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Bachelor Units:</div>
			<div class="span7"><input type="text" id="bachelor_units"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">1 Bedroom Units:</div>
			<div class="span7"><input type="text" id="bedroom1_units"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">2 Bedroom Units:</div>
			<div class="span7"><input type="text" id="bedroom2_units"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">3 Bedroom Units:</div>
			<div class="span7"><input type="text" id="bedroom3_units"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Building Income:</div>
			<div class="span7" style="margin-bottom:10px;">
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="building-income-radio" id="income_calculated_radio">&nbsp&nbsp&nbspCalculated - <span id="income_calculated_radio_label"></span></div>
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="building-income-radio" id="income_manual_radio">&nbsp&nbsp&nbspManual - <input style="width:118px; margin-bottom:0px;" type="text" class="" id="income_manual"></div>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">CAP Rate:</div>
			<div class="span7"><input type="text" id="cap_rate"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Last Sale Date:</div>
			<div class="span7">
				<div class="input-append span3 report-control-right-control" id="last_sale_date_gen">
       				<input class="" data-format="yyyy-MM-dd" style="width: 179px;" id="sale_date" type="text" value="">
   					<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
   				</div>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Last Sale Price:</div>
			<div class="span7"><input type="text" id="last_sale_price"></div>
		</div>
	</div>
	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-pencil"></i> &nbsp&nbsp<b>Note History</b>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
							<span id="create_note" class="btn btn-primary">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Create Note</span>
			                </span>
						</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="tableheader row-fluid">
		<div class="span2">
			Timestamp
		</div>
		<div class="span2">
			User
		</div>
		<div class="span6">
			Details
		</div>
		<div class="span2">
			Modify
		</div>
	</div>
	<div id="building-notes-wrapper" class="row-fluid">
	
	</div>

</script>


<script type="text/template" id="building-notes-template">
	<div class="row-fluid building-note" noteid="{{=id}}">
		<div class="span2">
			<b>{{=timestamp}}</b>
		</div>
		<div class="span2">
			{{=user}}
		</div>
		<div class="span6"><div class="note-editable">{{=note}}</div></div>
		<div class="span2">
			<div class="row-fluid" style="padding:6px;">
				<a class="edit-note" style="color:#0F74BC;cursor:pointer;padding-right:6px;"><i class="icon-edit icon-2x"></i></a>
				<a class="delete-note" style="color:red;cursor:pointer;"><i class="icon-remove-sign icon-2x"></i></a>
			</div>
		</div>
	</div>
</script>

<script type="text/template" id="building-contact-template">
	<div class="row-fluid building-note" noteid="{{=id}}">
		<div class="span2">
			<b>{{=timestamp}}</b>
		</div>
		<div class="span2">
			{{=user}}
		</div>
		<div class="span6"><div class="note-editable">{{=note}}</div></div>
		<div class="span2">
			<div class="row-fluid" style="padding:6px;">
				<a class="edit-note" style="color:#0F74BC;cursor:pointer;padding-right:6px;"><i class="icon-edit icon-2x"></i></a>
				<a class="delete-note" style="color:red;cursor:pointer;"><i class="icon-remove-sign icon-2x"></i></a>
			</div>
		</div>
	</div>
</script>




<script>


    var alarms;
    $(document).ready(function(){
    
    	var bucketPrefix = "https://s3-us-west-2.amazonaws.com/credimages/";
    	var lastImageUrl = "";
    	var lastThumbUrl = "";
    
    	var buildingphototemplate = _.template($('#building-photo-template').html());
    	
    	var buildingtemplate = _.template($('#building-details-template').html());
    	$('.building-details-frame').append(buildingtemplate());
    	
    	$('.fileinput-button').click(function(){
    		$('#filesToUpload').click();
    	});
    	
		$('#filesToUpload').change(function(){
			fileSelect();
		});
		
		
		

		var datatable = $('#buildings').dataTable({
		        "processing": true,
		        "serverSide": true,
		        "dom":"tipr",
		        "ajax": {
		        	"url":"/buildings/getajax",
	        		"data":function(d){
	        			d.search = $("#searchfield").val();
	        			d.unitQuantityMin = $('#unitsmin').val();
	        			d.unitQuantityMax = $('#unitsmax').val();
	        			d.saleDateRangeStart = $('#start_time').val();
	        			d.saleDateRangeEnd = $('#end_time').val();
	        			console.log($("#searchfield").val());
	        		}
	        	},
		        "aoColumns":[
		        	{"mData":"building_id","visible":false}
		         	,{"mData":function(data,b){ 
			        	return "<b>"+data.street_number_begin+" "+data.street_name+", "+data.city+"</b>"; }
			        }
			        ,{"mData":"units"}
			        ,{"mData":"owner"}
			        ,{"mData":"property_mgmt_company"}
			        ,{"mData":"sale_date"}
		        ],
		        "rowCallback": function( row, data, displayIndex ) {
					$(row).attr('building_id',data['building_id']);
					$(row).click(function(){
	               		selectBuilding($(row).attr('building_id'));
	               		
    					buildingnotes.fetch({id:$(row).attr('building_id')});
               		});
	               
		        }
	    });

		$('#searchfield').keydown(function(){
			setTimeout(function(){
				datatable.api().ajax.reload();
			},10);
		});

        $(window).resize(function(){
        });
        
        $('#buildings tbody').on('click', 'tr', function () {
        	$(this).siblings().removeClass('selected');
        	$(this).removeClass('selected').addClass('selected');
	    });
	    
	    
        $("#start_time_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd hh:mm',
            pick12HourFormat: false,
            pickSeconds: false
        }).data('datetimepicker');

        $("#end_time_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd hh:mm',
            pick12HourFormat: false,
            pickSeconds: false
        }).data('datetimepicker');
        
        $("#last_sale_date_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd hh:mm',
            pick12HourFormat: false,
            pickSeconds: false
        }).data('datetimepicker');
        
        $('.bootstrap-datetimepicker-widget > div > div.close-datetime').click(function(){
            $("#end_time_gen" ).data('datetimepicker').hide();
            $("#start_time_gen" ).data('datetimepicker').hide();
            $('#last_sale_date_gen').data('datetimepicker').hide();
        });
        
        $('#advanced_criteria_toggler').click(function(){
        	if($('#advanced_criteria_toggler > div > i').hasClass('icon-plus-sign')){
        		$('#advanced_criteria_toggler > div > i').removeClass('icon-plus-sign').addClass('icon-minus-sign');
        	}else{
        		$('#advanced_criteria_toggler > div > i').removeClass('icon-minus-sign').addClass('icon-plus-sign');
        	}
        	//selectBuilding(8);
    	});
    	
    	function createBuilding(){
    	
    	
    	
    	}
    	
    	function setPending(pending){
    		if(pending)
    		{
    			$('#changes_pending').css('display','');
    		}else{
    			$('#changes_pending').css('display','none');
    		}
    	}
    	
    	function selectBuilding(buildingId){
    		socket.get('/buildings/getbuilding/'+buildingId,{},function(building){
    		
    			$('.edit-item-section').css('display','block');
    		// Address
    			$('#building_id').val(building.id);
    			$('#street_number_begin').val(building.street_number_begin);
    			$('#street_number_end').val(building.street_number_end);
    			$('#street_name').val(building.street_name);
    			$('#postal_code').val(building.postal_code);
    			$('#city').val(building.city);
    			$('#province').val(building.province).change(function(){
    				setPending(true)
    			});
    		
    		
    		
    		//Building Details
    			$('#building_type').val(building.building_type);
    			$('#property_mgmt_company').val(building.property_mgmt_company);
    			$('#prev_property_mgmt_company').val(building.prev_property_mgmt_company);
    			$('#heat_system').val(building.heat_system);
    			$('#heat_system_age').val(building.heat_system_age);
    			$('#boilers').val(building.boilers);
    			$('#boiler_age').val(building.boiler_age);
    			$('#cable_internet_provider').val(building.cable_internet_provider);
    			$('#unit_quantity').val(building.unit_quantity);
    			
			//Equity Details
    			$('#assessed_value').val(building.assessed_value);
    			$('#sale_date').val(building.sale_date);
    			$('#last_sale_price').val(building.last_sale_price);
				
    			
    		});
    	}
    	
    	function fileSelect(evt) {
		   if (window.File && window.FileReader && window.FileList && window.Blob) {
		        var files = document.getElementById('filesToUpload').files;
		        for(var i = 0; i < files.length; i++) {
		            resizeAndUpload(files[i]);
		        }
			} else {
				var files = document.getElementById('filesToUpload').files;
		        for(var i = 0; i < files.length; i++) {
		            upload(files[i]);
		        }
			}
		}
		
		function upload(file,cb){
			socket.get('/upload/getPolicy',{},function(policy){
			 		
	 			lastImageUrl =  bucketPrefix + policy.filename+'.jpg';	 		
			 	var xhr =  new XMLHttpRequest();
				fd = new FormData();
			 
	    		
	    		xhr.upload.addEventListener("progress", uploadProgress, false);
				xhr.upload.addEventListener("load", transferComplete, false);
				xhr.upload.addEventListener("error", transferFailed, false);
	    		xhr.upload.addEventListener("loadstart", transferStart, false);
				
				// Populate the Post paramters.
				fd.append('key', policy.filename+'.jpg');
				fd.append('AWSAccessKeyId', policy.key);
				fd.append('acl', 'private');
				fd.append('success_action_status', "200");
				fd.append('policy', policy.policy);
				fd.append('signature',policy.signature);
				fd.append('file', file);
				xhr.open('POST', '//s3-us-west-2.amazonaws.com/credimages', true);
				xhr.send(fd);
				
				cb();
	 		});
		}
		
		function resizeAndUpload(file) {
			var reader = new FileReader();
		    reader.onloadend = function() {
			 
			    var tempImg = new Image();
			    tempImg.src = reader.result;
			    tempImg.onload = function() {
			 
			        var MAX_WIDTH = 500; //125
			        var MAX_HEIGHT = 400; //125
			        var tempW = tempImg.width;
			        var tempH = tempImg.height;
			        if (tempW > tempH) {
			            if (tempW > MAX_WIDTH) {
			               tempH *= MAX_WIDTH / tempW;
			               tempW = MAX_WIDTH;
			            }
			        } else {
			            if (tempH > MAX_HEIGHT) {
			               tempW *= MAX_HEIGHT / tempH;
			               tempH = MAX_HEIGHT;
			            }
			        }
			 
			        var canvas = document.createElement('canvas');
			        canvas.width = tempW;
			        canvas.height = tempH;
			        var ctx = canvas.getContext("2d");
			        ctx.drawImage(tempImg, 0, 0, tempW, tempH);
			        //var imageData = ctx.getImageData(0, 0, tempW, tempH);
					//var typedArray = imageData.data;
			        
			        var dataURL = dataURItoBlob(canvas.toDataURL("image/jpeg"));
			 
			 		upload(dataURL,function(){
			 		
			 		});
			 		
				}
		   }
		   reader.readAsDataURL(file);
		}
		
		function uploadProgress(evt){
			if (evt.lengthComputable) {
				$('.building-photo-wrapper > .span3:last').find('.progress > .bar').css('width',Math.round(evt.loaded * 100 / evt.total)+'%');
				console.log('computable');
			}
			else{
				console.log('progress');
			}
		}
		
		function transferStart(evt){
			$('.building-photo-wrapper').append(buildingphototemplate());
			$('.building-photo-wrapper > .span3:last').find('#UploadGif').css('display','block');
			$('.building-photo-wrapper > .span3:last').find('.progress').css('display','block');
			console.log('transfer Started');
		}
		
		function transferComplete(evt){
			setTimeout(function(){
				$('.building-photo-wrapper > .span3:last').css('min-height',$('.building-photo-wrapper > .span3:last').height());
				$('.building-photo-wrapper > .span3:last').find('#UploadGif').css('display','none');
				$('.building-photo-wrapper > .span3:last').find('.progress').css('display','none');
				$('.building-photo-wrapper > .span3:last').find('img').attr('src',lastImageUrl);
				$('.building-photo-wrapper > .span3:last').find('.buildingimagetrash').click(function(){
					$(this).parents('.buildingimage').remove();
				});
				
			},2000);
			console.log('transfer completed');
		}
		
		function transferFailed(evt){
			console.log('transfer failed');
		
		}
		
		
		function dataURItoBlob(dataURI) {
		    var binary = atob(dataURI.split(',')[1]);
		    var array = [];
		    for(var i = 0; i < binary.length; i++) {
		        array.push(binary.charCodeAt(i));
		    }
		    return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});
		}
    	
    	
    	
    	
	///////////////////////////
    /// BUILDING       ////////
    ///////////////////////////
    	
    	
	var BuildingModel = Backbone.Model.extend({
        urlRoot: '/buildings/getbuilding',
        socket:null,
        sync:function(method,model,options){
        	var where = {};
            if (options.where) {
                where = {
                    where: options.where
                }
            }
            if(options.id){
            	where.id = options.id;
        	}
            if(typeof this.urlRoot === "string" && this.urlRoot !== "") {
                this.socket = socket;
            	var collectionid = where.id?'/'+where.id:'';
                this.socket.request("/" + this.urlRoot+collectionid, where, _.bind(function(building){
                    if(building.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
                        location.reload(); // Will boot back to login screen
                    }
                    this.set(building);
                    //buildingView = new BuildingBackboneView({model: building});
                }, this));
            }
        
        }
    });


    var building = new BuildingModel();
    building.fetch({id:11});



/*

    ///////////////////////////
    /// BuildingNotes View ////
    ///////////////////////////

    var BuildingBackboneView = Backbone.View.extend({
        el: '#building-notes-wrapper',
        events: {
            //"change select.securityselect"   : "changeSecurity",
            "click a.delete-note"   : "deleteNote",
            "click a.edit-note" : "editNote"

        },
        editNote:function(event){
        	var self = this;
        	var blurTimeout;
        	//event.target.parent('.building-note').find();
        	var $notelement = $(event.target).parents('.building-note');
        	var noteid= $notelement.attr('noteid');
        	//var currentnote = $(event.target).parents('.building-note').find('.note-editable').html();
        	//this.collection.get(noteid)
        	$notelement.find('.note-editable').replaceWith('<textarea class="note-textarea-editable">'+this.collection.get(noteid).get('note')+'</textarea><button class="save-note-textarea-editable btn btn-primary">Save</button><button class="cancel-note-textarea-editable btn ">Cancel</button>');
        	
        	$notelement.find('.save-note-textarea-editable').click(function(){
        		self.collection.get(noteid).set('note', $notelement.find('.note-textarea-editable').val());
        		self.collection.get(noteid).set('modified', true);
    		});
        	
        	$notelement.find('.note-textarea-editable').blur(function(){
	        	blurTimeout = setTimeout(function(){
	        		self.render();
	        	},100);
        	});
        	$notelement.find('.note-textarea-editable').focus();
        },
        deleteNote:function(event){
        
        
        	var $notelement = $(event.target).parents('.building-note');
        	var noteid= $notelement.attr('noteid');
        	if($notelement.attr('noteid').indexOf("new")>-1){
        		this.collection.remove(noteid);
        		this.render();
        	}else{
        		this.collection.get(noteid).set('deleted',true);
        		this.render();
        	}
        },
        initialize: function () {
            this.render();
        },
        template: _.template($('#building-notes-template').html()),
        render: function () {
            this.$el.html("");
            
            var tcollection = this.collection.sortBy(function(notes){
                return notes.get("note").toString().toUpperCase();
            });

            for(var i=0; i<tcollection.length; i++)
            {
                //if(!tcollection[i].isNew()){
                if(typeof(tcollection[i].get('deleted'))=='undefined'){
                
                	this.$el.append(this.template(tcollection[i].toJSON()));
            	}
                //}else{
                //    this.$el.append(this.newusertemplate(tcollection[i].toJSON()));
                //}
            }
            
        }
    });
    var buildingnotesView;
    	
    	*/
    	
    	
    	
    ///////////////////////////
    /// BUILDING NOTES ////////
    ///////////////////////////
    	
	var BuildingNotesModel = Backbone.Model.extend({
        urlRoot: '/buildings/note'
    });

    var BuildingNotesCollection = Backbone.Collection.extend({
        sailsCollection: "",
        socket: null,
        sync: function(method, model, options){
            var where = {};
            if (options.where) {
                where = {
                    where: options.where
                }
            }
            if(options.id){
            	where.id = options.id;
        	}
            if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
                this.socket = socket;
            	var collectionid = where.id?'/'+where.id:'';
                this.socket.request("/" + this.sailsCollection+collectionid, where, _.bind(function(notes){
                    if(notes.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
                        location.reload(); // Will boot back to login screen
                    }
                    this.set(notes);
                    buildingnotesView = new BuildingNotesBackboneView({collection: buildingnotes});
                }, this));
            }
        }
    });

    var BuildingNotesCollection = BuildingNotesCollection.extend({
        sailsCollection: 'buildings/notes',
        model: BuildingNotesModel
    });

    var buildingnotes = new BuildingNotesCollection();
    buildingnotes.fetch({id:11});





    ///////////////////////////
    /// BuildingNotes View ////
    ///////////////////////////

    var BuildingNotesBackboneView = Backbone.View.extend({
        el: '#building-notes-wrapper',
        events: {
            //"change select.securityselect"   : "changeSecurity",
            "click a.delete-note"   : "deleteNote",
            "click a.edit-note" : "editNote"

        },
        editNote:function(event){
        	var self = this;
        	var blurTimeout;
        	//event.target.parent('.building-note').find();
        	var $notelement = $(event.target).parents('.building-note');
        	var noteid= $notelement.attr('noteid');
        	//var currentnote = $(event.target).parents('.building-note').find('.note-editable').html();
        	//this.collection.get(noteid)
        	$notelement.find('.note-editable').replaceWith('<textarea class="note-textarea-editable">'+this.collection.get(noteid).get('note')+'</textarea><button class="save-note-textarea-editable btn btn-primary">Save</button><button class="cancel-note-textarea-editable btn ">Cancel</button>');
        	
        	$notelement.find('.save-note-textarea-editable').click(function(){
        		self.collection.get(noteid).set('note', $notelement.find('.note-textarea-editable').val());
        		self.collection.get(noteid).set('modified', true);
    		});
        	
        	$notelement.find('.note-textarea-editable').blur(function(){
	        	blurTimeout = setTimeout(function(){
	        		self.render();
	        	},100);
        	});
        	$notelement.find('.note-textarea-editable').focus();
        },
        deleteNote:function(event){
        
        
        	var $notelement = $(event.target).parents('.building-note');
        	var noteid= $notelement.attr('noteid');
        	if($notelement.attr('noteid').indexOf("new")>-1){
        		this.collection.remove(noteid);
        		this.render();
        	}else{
        		this.collection.get(noteid).set('deleted',true);
        		this.render();
        	}
        },
        initialize: function () {
            this.render();
        },
        template: _.template($('#building-notes-template').html()),
        render: function () {
            this.$el.html("");
            
            var tcollection = this.collection.sortBy(function(notes){
                return notes.get("note").toString().toUpperCase();
            });

            for(var i=0; i<tcollection.length; i++)
            {
                //if(!tcollection[i].isNew()){
                if(typeof(tcollection[i].get('deleted'))=='undefined'){
                
                	this.$el.append(this.template(tcollection[i].toJSON()));
            	}
                //}else{
                //    this.$el.append(this.newusertemplate(tcollection[i].toJSON()));
                //}
            }
            
            
            
/*
            // sorts by username
            var tcollection = this.collection.sortBy(function(message){
                return message.get("username").toString().toUpperCase();
            });

            for(var i=0; i<tcollection.length; i++)
            {
                if(!tcollection[i].isNew()){
                    this.$el.append(this.template(tcollection[i].toJSON()));
                }else{
                    this.$el.append(this.newusertemplate(tcollection[i].toJSON()));
                }
            }
            $('#adminusers > div.row-fluid:even').addClass('odd');
            $('#adminusers > div.row-fluid:odd').addClass('even');
*/
            //setChangesPending();  // recalculates and displays if changes are pending
        }
    });
    var buildingnotesView;
    	
    $('#create_note').click(function(){
    	if(typeof(buildingnotes)!='undefined'){
    		var noteid = 'new_'+Math.floor((Math.random() * 1000000) + 1);
    		var newbuildingnote = new BuildingNotesModel({id:noteid,note:'',timestamp:'now',user:1});
    		buildingnotes.add(newbuildingnote);
    		buildingnotesView.render();
    		
        	
    		$('.building-note[noteid='+noteid+'] .edit-note').click();
    	}	
	});	
    	
    	
    	
    	
    	
    	
    	
    	
    	
    	
    	
    /////////////////////////////////////////
    ////// BUiLDING CONTACTS ////////////////
    /////////////////////////////////////////
    
    
    
    var BuildingContactsModel = Backbone.Model.extend({
        urlRoot: '/buildings/contact'
    });

    var BuildingContactsCollection = Backbone.Collection.extend({
        sailsCollection: "",
        socket: null,
        sync: function(method, model, options){
            var where = {};
            if (options.where) {
                where = {
                    where: options.where
                }
            }
            if(options.id){
            	where.id = options.id;
        	}
            if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
                this.socket = socket;
            	var collectionid = where.id?'/'+where.id:'';
                this.socket.request("/" + this.sailsCollection+collectionid, where, _.bind(function(contacts){
                    if(contacts.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
                        location.reload(); // Will boot back to login screen
                    }
                    this.set(contacts);
                    buildingcontactsView = new BuildingContactsBackboneView({collection: buildingcontacts});
                }, this));
            }
        }
    });

    var BuildingContactsCollection = BuildingContactsCollection.extend({
        sailsCollection: 'buildings/contacts',
        model: BuildingContactsModel
    });

    var buildingcontacts = new BuildingContactsCollection();





    //////////////////////////////
    /// BuildingContacts View ////
    //////////////////////////////

    var BuildingContactsBackboneView = Backbone.View.extend({
        elowners: '#building-owners-wrapper',
        elsellers: '#building-sellers-wrapper',
        events: {
            //"change select.securityselect"   : "changeSecurity",
            "click a.delete-note"   : "deleteNote",
            "click a.edit-note" : "editNote"

        },
       /* editNote:function(event){
        	var self = this;
        	var blurTimeout;
        	//event.target.parent('.building-note').find();
        	var $notelement = $(event.target).parents('.building-note');
        	var noteid= $notelement.attr('noteid');
        	//var currentnote = $(event.target).parents('.building-note').find('.note-editable').html();
        	//this.collection.get(noteid)
        	$notelement.find('.note-editable').replaceWith('<textarea class="note-textarea-editable">'+this.collection.get(noteid).get('note')+'</textarea><button class="save-note-textarea-editable btn btn-primary">Save</button><button class="cancel-note-textarea-editable btn ">Cancel</button>');
        	
        	$notelement.find('.save-note-textarea-editable').click(function(){
        		self.collection.get(noteid).set('note', $notelement.find('.note-textarea-editable').val());
        		self.collection.get(noteid).set('modified', true);
    		});
        	
        	$notelement.find('.note-textarea-editable').blur(function(){
	        	blurTimeout = setTimeout(function(){
	        		self.render();
	        	},100);
        	});
        	$notelement.find('.note-textarea-editable').focus();
        },
        deleteNote:function(event){
        
        
        	var $notelement = $(event.target).parents('.building-note');
        	var noteid= $notelement.attr('noteid');
        	if($notelement.attr('noteid').indexOf("new")>-1){
        		this.collection.remove(noteid);
        		this.render();
        	}else{
        		this.collection.get(noteid).set('deleted',true);
        		this.render();
        	}
        },*/
        initialize: function () {
            this.render();
        },
        template: _.template($('#building-contact-template').html()),
        render: function () {
            this.$elowners.html("");
            this.$elsellers.html("");
            
            var tcollection = this.collection.sortBy(function(contacts){
                return notes.get("owner_name").toString().toUpperCase();
            });

            for(var i=0; i<tcollection.length; i++)
            {
                //if(!tcollection[i].isNew()){
               // if(typeof(tcollection[i].get('deleted'))=='undefined'){
                
                	this.$elowners.append(this.template(tcollection[i].toJSON()));
            	//}
                //}else{
                //    this.$el.append(this.newusertemplate(tcollection[i].toJSON()));
                //}
            }
            
            
            

            // sorts by username
            //var tcollection = this.collection.sortBy(function(message){
            //    return message.get("username").toString().toUpperCase();
            //});

            //for(var i=0; i<tcollection.length; i++)
            //{
            //    if(!tcollection[i].isNew()){
            //        this.$el.append(this.template(tcollection[i].toJSON()));
            //    }else{
            //        this.$el.append(this.newusertemplate(tcollection[i].toJSON()));
            //    }
            //}
            //$('#adminusers > div.row-fluid:even').addClass('odd');
            //$('#adminusers > div.row-fluid:odd').addClass('even');

            //setChangesPending();  // recalculates and displays if changes are pending
        }
    });
    var buildingcontactsView;	
    	
    	
    	
        
    });
</script>
