<%
    var translate = {
        'en' : {
            'You do not have sufficient privileges to access':'You do not have sufficient privileges to access',
            'Error':'Error',
            'Buildings':'Buildings',
            'Date':'Date',
            'Equipment':'Equipment',
            'Device':'Device',
            'Alarm Type':'Alarm Type',
            'System Health':'System Health',
            'System Throughput':'System Throughput',
            'Time In System':'Time In System',
            'BHS Overview':'BHS Overview',
            'Time':'Time',
            'Alarms':'Alarms',
            'Daily Reminders':'Daily Reminders',
            'Predictive Mainenance Tasks':'Predictive Mainenance Tasks',
            'DEVICE':'DEVICE',
            'REASON':'REASON',
            'Uptime':'Uptime',
            'Failsafe Rate':'Failsafe Rate',
            'Tracking Rate':'Tracking Rate',
            'Key Performance Indicators':'Key Performance Indicators',
            'Throughput (bph)':'Throughput (bph)',
            'State':'State',
            'Jam Rate':'Jam Rate',
            'ATR Read Rate':'ATR Read Rate',
            'Cancel':'Cancel',
            'Delete':'Delete',
            'To create a new owner':'To create a new owner, select the contact and/or company associated with this building',
            'To create a new sale':'To create a new sale, click create',
            'Create':'Create',
            'Contact':'Contact',
            'Company':'Company'
        },
        'es' : {
            'You do not have sufficient privileges to access':'Usted no tiene suficientes privilegios para acceder a',
            'Error':'Error',
            'Buildings':'Salpicadero',
            'Date':'Date',
            'Equipment':'Equipment',
            'Device':'Device',
            'REASON':'REASON',
            'Alarm Type':'Alarm Type',
            'System Health':'System Health',
            'System Throughput':'System Throughput',
            'Time In System':'Time In System',
            'BHS Overview':'BHS Overview',
            'Time':'Time',
            'Alarms':'Alarms',
            'Daily Reminders':'Daily Reminders',
            'Predictive Mainenance Tasks':'Predictive Mainenance Tasks',
            'DEVICE':'DEVICE',
            'Uptime':'Uptime',
            'Failsafe Rate':'Failsafe Rate',
            'Tracking Rate':'Tracking Rate',
            'Key Performance Indicators':'Key Performance Indicators',
            'Throughput (bph)':'Throughput (bph)',
            'State':'State',
            'Jam Rate':'Jam Rate',
            'ATR Read Rate':'ATR Read Rate',
            'Cancel':'Cancel',
            'Delete':'Delete',
            'To create a new owner':'To create a new owner, select the contact and/or company associated with this building',
            'To create a new sale':'To create a new sale, click create',
            'Create':'Create',
            'Contact':'Contact',
            'Company':'Company'
        }
    }
%>

<div id="map_pane_wrapper" style="height:50px;">
	<div id="map_pane">
		<div id="map_wrapper" style="width:100%;">
		</div>
		<div id="building_slideup_wrapper" style="width:100%;position:absolute;bottom:50px;">
		</div>
		<div class="row-fluid" id="search_toggler" style="position:absolute;bottom:0px;" scrollstate="top">
			<div class="arrow-down search-toggler-arrow"><i class="icon-chevron-down icon-3x"></i></div>
			<div class="arrow-down scroll-icon"><i class="icon-globe icon-3x"></i></div>
			<div class="arrow-up search-toggler-arrow"><i class="icon-chevron-up icon-3x"></i></div>
			<div class="arrow-up scroll-icon"><i class="icon-globe icon-3x"></i></div>
		</div>
	</div>
</div>


<div class="row-fluid page-banner">
    <div class="banner-div"><i class="icon-building icon-1x banner-icon-top"></i><div class="banner-div-text"><%= translate[req.session.user.locale]['Buildings'] %></div></div>
</div>

        <!-- Throws in Error messages if they were passed in from the controller -->
<% if(typeof(errormessage)!='undefined'){ %>
<div class="alert alert-error" style="border-radius:0px;">
    <button type="button" class="close" data-dismiss="alert">×</button>
    <strong><%= translate[req.session.user.locale]['Error'] %>:</strong>
    <%= translate[req.session.user.locale][errormessage] %><% if(typeof(errorurl)!='undefined'){ %> <%= errorurl %><% } %>
</div>
<% } %>


<div class="row-fluid create-report-controls-wrapper">
<div class="span10 offset1 report-control-left-label"  style="min-height: 30px;padding-top: 5px; font-size:18px; font-weight:bold;margin-top: 33px;">
	<i class="icon-search icon-2x banner-icon-top" style="margin-top: -12px; margin-right: 10px;"></i>
	<div class="buildings-search-filters banner-div-text">Search Filters</div>
	<div class="buildings-search-filters-toggle btn btn-primary">Filters Enabled</div>
</div>
</div>



    <!-- Modal -  -->
<div id="exportModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="exportModalLabelgenerate">Buildings Export</h3>
    </div>
    <p style="margin:10px;">
    	Your report is being generated and will be available for 15 minutes.
    </p>
    <div class="modal-body" style="overflow:hidden;">
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
        <!--<button class="btn btn-primary" data-dismiss="modal" aria-hidden="true" id="confirmdeletes"><%= translate[locale]['Confirm'] %></button>-->
    </div>
</div>

<div class="row-fluid create-report-controls-wrapper">
    <div class="row">
    	<div class="row-fluid">
	        <div class="span10 offset2 create-report-controls" style="padding-top: 20px;">
	           <div class="row-fluid">
	               <div class="row">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_keyword">Keyword:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_keyword" value="">
	                   </div>
	               </div>
	               <div class="row">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_full_contact">Contact:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_full_contact" value="">
	                   </div>
	               </div>
	               <div class="row">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_full_address">Address:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_full_address" value="">
	                   </div>
	               </div>
	   			</div>
	   		</div>
   		</div>
   	</div>
 </div>
 <div class="row-fluid create-report-controls-wrapper">
    <div class="row-fluid span10 offset1 report-control-left-label" style="padding-top: 20px;">
   		<a id="advanced_criteria_toggler" data-toggle="collapse" data-target="#collapseadvanced" style="text-decoration: none; color: #5a6573;">
			<div style="float:left;"></i><i class="icon-plus-sign icon-2x"></i></div><div style="float: left; padding-bottom: 5px;margin-top: -6px;margin-left: 20px;"><h4>Advanced Criteria</h4></div>
		</a>
  	</div>
 </div>
 <div class="row-fluid create-report-controls-wrapper">
    <div class="row">
       <div class="row-fluid">
         <div class="span10 offset2 create-report-controls" style="padding-top: 10px; padding-bottom:10px;">
           <div class="row-fluid">
               <div class="row collapse" id="collapseadvanced">
               
               
               		<div class="row-fluid">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_address">Property Address:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_address" value="">
	                   </div>
	               </div>
	               <div class="row-fluid">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_owner">Owner Contact:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_owner" value="">
	                   </div>
	               </div>
	               
               		<div class="row-fluid">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_owner_company">Owner Company:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_owner_company" value="">
	                   </div>
	               </div>
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_property_mgmt_company">Property Management Company:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_property_mgmt_company" value="">
	                   </div>
	               </div>
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="reporttype">Units:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label" ><span id="units_min">0</span></div>
	                   			
	                   			<input id="units_slider" type="text" class="" value="" data-slider-min="0" data-slider-max="1000" data-slider-step="5" data-slider-value="[0,1000]"/>
	                   			&nbsp&nbsp
	                   			<span id="units_max">1000+</span>
	                   		</div>
	                   </div>
	               </div>
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="reporttype">Unit Price:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label" ><span id="unit_price_min">0</span></div>
	                   			
	                   			<input id="unit_price_slider" type="text" class="" value="" data-slider-min="0" data-slider-max="250" data-slider-step="5" data-slider-value="[0,250]"/>
	                   			&nbsp&nbsp
	                   			<span id="unit_price_max">250+</span>
	                   		</div>
	                   </div>
	               </div>
	               <div class="row-fluid">
	               		<div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;">
	               			<label for="start_time">Sale Date:</label>
	           			</div>
	           			<div class="input-append span3 report-control-right-control" id="start_time_gen">
	           				<input class="" data-format="yyyy-MM-dd" style="width:150px; max-width:70%;" id="start_time" type="text" value="">
	       					<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
	       				</div>
	           			<div class="input-append span1 report-control-right-control">
	       					<span style="display: inline-block;width: auto;height: 20px;min-width: 16px;padding: 4px 5px;font-size: 14px;font-weight: normal;line-height: 20px;">to</span>
						</div>
	           			<div class="input-append span3 report-control-right-control" id="end_time_gen">
	           				<input class="" data-format="yyyy-MM-dd" style="width:150px; max-width:70%;" id="end_time" type="text" value="">
	   						<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
	       				</div>
	       				
	   				</div>
               
               
               
	               <div class="row-fluid">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_seller">Seller Contact:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_seller" value="">
	                   </div>
	               </div>
	               <div class="row-fluid">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_seller_company">Seller Company:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_seller_company" value="">
	                   </div>
	               </div>
	               <div class="row-fluid">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_agent">Agent Contact:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_agent" value="">
	                   </div>
	               </div>
	               <div class="row-fluid">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_agent_company">Agent Company:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_agent_company" value="">
	                   </div>
	               </div>
               		
               		<div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label>Building Type:</label></div>
	        			<div class="span8 report-control-right-control" style="margin-bottom:10px;">
							<% for(var i=0;i<building_types.length;i++){ %>
							<div class="row-fluid" style="margin-top: 5px;"><input type="checkbox" class="segment-form-radio building-type-checkboxes" name="building-type-radio" building_type="<%-building_types[i].id%>" id="building_type_<%-building_types[i].id%>">&nbsp;&nbsp;&nbsp;<label for="building_type_<%-building_types[i].id%>" style="display: inline;"><%-building_types[i].type%></label></div>
							<% } %>
						</div>   
	               </div>
               		
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_prev_property_mgmt_company">Previous Property Management Company:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_prev_property_mgmt_company" value="">
	                   </div>
	               </div>
               
               	   <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label>Heat System:</label></div>
	        			<div class="span8 report-control-right-control" style="margin-bottom:10px;">
							<% for(var i=0;i<heat_types.length;i++){ %>
							<div class="row-fluid" style="margin-top: 5px;"><input type="checkbox" class="segment-form-radio heating-type-checkboxes" name="heat-type-radio" heat_type="<%-heat_types[i].id%>" id="heat_type_<%-heat_types[i].id%>">&nbsp;&nbsp;&nbsp;<label for="heat_type_<%-heat_types[i].id%>" style="display: inline;"><%-heat_types[i].type%></label></div>
							<% } %>
						</div>   
	               </div>
               
               
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="heat_age_slider">Heat System Installed Year:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="heat_age_min">0</span></div>
	                   			
	                   			<input id="heat_age_slider" type="text" class="" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="heat_age_max">+</span>
	                   		</div>
	                   </div>
	               </div>
               		<div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="boiler_installed_year_slider">Boiler Installed Year:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="boiler_installed_year_min">0</span></div>
	                   			
	                   			<input id="boiler_installed_year_slider" type="text" class="" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="boiler_installed_year_max">+</span>
	                   		</div>
	                   </div>
	               </div>
               		<div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="boiler_upgrade_slider">Last Boiler Upgrade Year:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="boiler_upgrade_min">0</span></div>
	                   			
	                   			<input id="boiler_upgrade_slider" type="text" class="" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="boiler_upgrade_max">+</span>
	                   		</div>
	                   </div>
	               </div>
               		<div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_isp">Cable Internet Provider:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_isp" value="">
	                   </div>
	               </div>
               
	              <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="parking_spots_slider">Number of Stories:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="parking_spots_min">0</span></div>
	                   			
	                   			<input id="parking_spots_slider" type="text"  value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="parking_spots_max">+</span>
	                   		</div>
	                   </div>
	               </div>
	               	<div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_elevator">Elevator:</label></div>
	                   <div class="span8 report-control-right-control" >
	                       <select id="search_elevator">
							<option value="null">Any</option>
							<option value="true">Yes</option>
							<option value="false">No</option>
						  </select>
	                   </div>
	               </div>
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="elevator_installed_year_slider">Elevator Installed Year:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="elevator_installed_year_min">0</span></div>
	                   			
	                   			<input id="elevator_installed_year_slider" type="text" class="" value="" data-slider-min="" data-slider-max="" data-slider-step="5" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="elevator_installed_year_max">250+</span>
	                   		</div>
	                   </div>
	               </div>
	               
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="elevator_upgrade_year_slider">Last Elevator Upgrade Year:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="elevator_upgrade_year_min">0</span></div>
	                   			
	                   			<input id="elevator_upgrade_year_slider" type="text" class="" value="" data-slider-min="" data-slider-max="" data-slider-step="5" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="elevator_upgrade_year_max">250+</span>
	                   		</div>
	                   </div>
	               </div>
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="windows_installed_year_slider">Windows Installed Year:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="windows_installed_year_min">0</span></div>
	                   			
	                   			<input id="windows_installed_year_slider" type="text"  value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="windows_installed_year_max">+</span>
	                   		</div>
	                   </div>
	               </div>   
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;"><label for="search_mortgage">Mortgage Company:</label></div>
	                   <div class="span8 report-control-right-control">
	                       <input type="text" id="search_mortgage" value="">
	                   </div>
	               </div>
	               
	               <div class="row-fluid">
	               		<div class="span3 report-control-left-label"  style="min-height: 30px;padding-top: 5px;">
	               			<label for="start_mortgage_due_date">Mortgage Due Date:</label>
	           			</div>
	           			<div class="input-append span3 report-control-right-control" id="start_mortgage_due_date_gen">
	           				<input class="" data-format="yyyy-MM-dd" style="width:150px; max-width:70%;" id="start_mortgage_due_date" type="text" value="">
	       					<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
	       				</div>
	           			<div class="input-append span1 report-control-right-control">
	       					<span style="display: inline-block;width: auto;height: 20px;min-width: 16px;padding: 4px 5px;font-size: 14px;font-weight: normal;line-height: 20px;">to</span>
						</div>
	           			<div class="input-append span3 report-control-right-control" id="end_mortgage_due_date_gen">
	           				<input class="" data-format="yyyy-MM-dd" style="width:150px; max-width:70%;" id="end_mortgage_due_date" type="text" value="">
	   						<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
	       				</div>
	   				</div>
	   				
	               
	               
	               
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bachelor_rent_slider">Bachelor Rent Price:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bachelor_rent_min">0</span></div>
	                   			
	                   			<input id="bachelor_rent_slider" type="text" class="rent-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bachelor_rent_max">+</span>
	                   		</div>
	                   </div>
	               </div>

	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bedroom1_rent_slider">1 Bedroom Rent Price:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bedroom1_rent_min">0</span></div>
	                   			
	                   			<input id="bedroom1_rent_slider" type="text" class="rent-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bedroom1_rent_max">+</span>
	                   		</div>
	                   </div>
	               </div>
	               
   	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bedroom2_rent_slider">2 Bedroom Rent Price:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bedroom2_rent_min">0</span></div>
	                   			
	                   			<input id="bedroom2_rent_slider" type="text" class="rent-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bedroom2_rent_max">+</span>
	                   		</div>
	                   </div>
	               </div>	
	               
   	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bedroom3_rent_slider">3 Bedroom Rent Price:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bedroom3_rent_min">0</span></div>
	                   			
	                   			<input id="bedroom3_rent_slider" type="text" class="rent-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bedroom3_rent_max">+</span>
	                   		</div>
	                   </div>
	               </div>               
	               
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bachelor_units_slider">Bachelor Units:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bachelor_units_min">0</span></div>
	                   			
	                   			<input id="bachelor_units_slider" type="text" class="units-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bachelor_units_max">+</span>
	                   		</div>
	                   </div>
	               </div>

	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bedroom1_units_slider">1 Bedroom Units:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bedroom1_units_min">0</span></div>
	                   			
	                   			<input id="bedroom1_units_slider" type="text" class="units-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bedroom1_units_max">+</span>
	                   		</div>
	                   </div>
	               </div>
	               
   	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bedroom2_units_slider">2 Bedroom Units:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bedroom2_units_min">0</span></div>
	                   			
	                   			<input id="bedroom2_units_slider" type="text" class="units-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bedroom2_units_max">+</span>
	                   		</div>
	                   </div>
	               </div>	
	               
   	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="bedroom3_units_slider">3 Bedroom Units:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="bedroom3_units_min">0</span></div>
	                   			
	                   			<input id="bedroom3_units_slider" type="text" class="units-slider" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="bedroom3_units_max">+</span>
	                   		</div>
	                   </div>
	               </div> 
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="building_income_slider">Building Income:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="building_income_min">0</span></div>
	                   			
	                   			<input id="building_income_slider" type="text" value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="building_income_max">+</span>
	                   		</div>
	                   </div>
	               </div> 
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="cap_rate_slider">CAP Rate:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="cap_rate_min">0</span></div>
	                   			
	                   			<input id="cap_rate_slider" type="text" class="" value="" data-slider-min="" data-slider-max="" data-slider-step="5" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="cap_rate_max">250+</span>
	                   		</div>
	                   </div>
	               </div>
	               
	               
	               
   	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="sale_price_slider">Last Sale Price:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="sale_price_min">0</span></div>
	                   			
	                   			<input id="sale_price_slider" type="text"  value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="sale_price_max">+</span>
	                   		</div>
	                   </div>
	               </div> 
	               
	               <div class="row-fluid" style="min-height: 40px;">
	                   <div class="span3 report-control-left-label" style="min-height: 30px;padding-top: 5px;"><label for="sales_count_slider">Number of Sale History Records:</label></div>
	                   <div class="span7 report-control-right-control" style="min-height: 30px;padding-top: 5px;">
	                   		<div class="row-fluid">
	                   			<div class="pull-left slider-min-val-label"><span id="sales_count_min">0</span></div>
	                   			
	                   			<input id="sales_count_slider" type="text"  value="" data-slider-min="" data-slider-max="" data-slider-step="" data-slider-value=""/>
	                   			&nbsp&nbsp
	                   			<span id="sales_count_max">+</span>
	                   		</div>
	                   </div>
	               </div> 
	   			</div>
           </div>
        </div>
        </div>
    </div>
</div>


<!-- There next templates are the pieces of the BHS Overview drawing -->
<!-- In order, they represent the columns across the diagram -->


<div class="row-fluid" style="margin-top:0px; margin-bottom:25px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;">Buildings</span>
       	<% if(req.session.user.policy[req.route.path].update==1){ %><div style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="create_building">Create New</div><% } %>
        <% if(req.session.user.policy[req.route.path].update==1){ %><div style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="export_building">Export</div><% } %>      
        <div style="margin-right:10px;font-weight: 400; display:none;" class="btn pull-right save_pull" id="clear_selected"><i class="only-mobile icon-circle-arrow-left"></i><span class="only-desktop">Clear Selected</span></div>     
        
        </div>
        <div class="row-fluid key-indicaters-frame" id="iframediv">
            <div class="row-fluid">
            	<div class="real_buildings_wrapper">
	                <table id="buildings" class="display" style="display:none;" cellspacing="0" width="100%">
				        <thead>
				            <tr>
				            	<th>Id<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
				            	<th></th>
				                <th>Property Address<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
				                <th>Units<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
				                <th>Owner<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
				                <th>Owner Company<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
				                <th>Sale Date<i class="icon-caret-down"></i><i class="icon-caret-up"></i></th>
				            </tr>
				        </thead>
				 
				    </table>
			    </div>
            </div>
        </div>
    </div>
</div>


<div id="edit_item_section" class="row-fluid edit-item-section" style="display:none; margin-top:19px; margin-bottom:35px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;" id="building-section-title">Edit Building Details</span>
         	<% if(req.session.user.policy[req.route.path].update==1){ %><button style="margin-right:10px;font-weight: 400;" class="btn btn-primary pull-right save_pull" id="save_building"><i class="only-mobile icon-save"></i><span class="only-desktop">Save</span></button><% } %>
         	<% if(req.session.user.policy[req.route.path].delete==1){ %><button style="margin-right:10px;font-weight: 400;" class="btn btn-danger pull-right save_pull" id="delete_building"><i class="only-mobile icon-trash"></i><span class="only-desktop">Delete</span></button><% } %>
         	<button style="margin-right:10px;font-weight: 400;" class="btn pull-right save_pull" id="cancel_building"><i class="only-mobile icon-circle-arrow-left"></i><span class="only-desktop">Cancel</span></button>
         	<% if(req.session.user.policy[req.route.path].update==1){ %><div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="changes_pending">Changes Pending. &nbsp;</div><% } %>
  		 </div>
        <div class="row-fluid " id="iframediv" style="margin-bottom:150px;">
        	<div class="content-wrapper building-details-frame">
        		<div id="building-sales">
        			<div class="row-fluid">
						<div class="span12">
							<div class="row-fluid">
								<div class="row-category">
									<span class="" id="sales_title">
										<i class="icon-plus-sign" style="margin-right:10px; display:none;"></i>
										<i class="icon-pencil"></i> &nbsp&nbsp<b>Sales History</b>
									</span>
									<% if(req.session.user.policy[req.route.path].update==1){ %><div class="pull-right" style="height:40px;">
										<span class="row-category-button-wrapper">
											<span id="create_sale" class="btn btn-success">
							                    <i class="glyphicon glyphicon-plus"></i>
							                    <span>Create Sale</span>
							                </span>
										</span>
									</div>
									<div class="pull-right" style="height:40px; display:none;">
										<span  id="delete_sale" class="row-category-button-wrapper">
											<span class="btn btn-danger">
							                    <i class="glyphicon glyphicon-plus"></i>
							                    <span>Delete Sale</span>
							                </span>
										</span>
									</div><% } %>
								</div>
							</div>
						</div>
					</div>
				
				
	
					
				
				
					<div id="building-sales-wrapper" >
						<div id="notes-table-header" class="tableheader row-fluid">
							<div class="span3">
								Timestamp
							</div>
							<div class="span2">
								Owner
							</div>
							<div class="span2">
								Seller
							</div>
							<div class="span2">
								Agent
							</div>
							<div class="span3">
								Price
							</div>
						</div>
						<div id="building-sales-table" class="row-fluid">
						
						</div>
					</div>
        		</div>
        		<div id="main-building-details">
        		
        		</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal  for creating new user -->
<div id="addSaleModal" class="modal hide fade " tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabelAdd">Create Sale</h3>
    </div>
    <div class="modal-body building-segment-wrapper">
        <div class="row-fluid"><p><%= translate[locale]['To create a new sale'] %></p></div>
        
		<div class="row-fluid">
			<div class="span5 segment-label">Sale Price:</div>
			<div class="span7"><input type="text" id="sale_price" value=""></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Sale Date:</div>
			
			<div class="span7">
				<div class="input-append span3 report-control-right-control" id="new_sale_date_gen">
       				<input class="" data-format="yyyy-MM-dd" style="width: 179px;" id="new_sale_date" type="text" value="">
   					<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
   				</div>
   			</div>
		</div>
		
		<div class="row-fluid">
			<div class="span5 segment-label">Unit Price:</div>
			<div class="span7" style="margin-bottom:10px;">
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="new-unit-price-radio" id="new_unit_price_calculated_radio" checked="checked">&nbsp&nbsp&nbspCalculated - <span id="new_unit_price_calculated_radio_label"></span></div>
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="new-unit-price-radio" id="new_unit_price_manual_radio">&nbsp&nbsp&nbspManual - <input style="width:118px; margin-bottom:0px;" type="text" class="" id="new_unit_price"></div>
			</div>
		</div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true"><%= translate[locale]['Cancel'] %></button>
        <button class="btn btn-primary" id="confirmaddsale"><%= translate[locale]['Create'] %></button>
    </div>
</div>

<script type="text/template" id="edit-company-details-section-template">
	<div class="row-fluid">
		<div class="span5 segment-label">Company:</div>
		<div class="span7 segment-label-value">{{=company_name}}</div>
	</div>
	<div class="row-fluid">
		<div class="span5 segment-label">Phone:</div>
		<div class="span7 segment-label-value">{{=phone_number}}</div>
	</div>
	<div class="row-fluid">
		<div class="span5 segment-label">Address:</div>
		<div class="span7" style="padding-top: 6px;">
			<div class="row-fluid">{{=buildStreetString(street_number_begin,street_number_end,street_name)}}</div>
			<div class="row-fluid">{{=buildCityProvinceString(city,province)}}</div>
			<div class="row-fluid">{{=buildPostalCodeString(postal_code)}}</div>
		</div>
	</div>
	<div class="row-fluid">
		<div class="pull-right edit-company-details-mapping-button"><div class="btn btn-warning">Edit</div></div>
	</div>
</script>

<script type="text/template" id="edit-contact-details-section-template">
	<div class="row-fluid">
		<div class="span5 segment-label">Contact:</div>
		<div class="span7 segment-label-value">{{=contact_name}}</div>
	</div>
	<div class="row-fluid">
		<div class="span5 segment-label">Phone:</div>
		<div class="span7 segment-label-value">{{=phone_number}}</div>
	</div>
	<div class="row-fluid">
		<div class="span5 segment-label">Email:</div>
		<div class="span7 segment-label-value">{{=email}}</div>
	</div>
	<div class="row-fluid">
		<div class="span5 segment-label">Address:</div>
		<div class="span7" style="padding-top: 6px;">
			<div class="row-fluid">{{=buildStreetString(street_number_begin,street_number_end,street_name)}}</div>
			<div class="row-fluid">{{=buildCityProvinceString(city,province)}}</div>
			<div class="row-fluid">{{=buildPostalCodeString(postal_code)}}</div>
		</div>
	</div>
	<div class="row-fluid">
		<div class="pull-right edit-contact-details-mapping-button"><div class="btn btn-warning">Edit</div></div>
	</div>
</script>

<!-- Modal  for creating new user -->
<div id="addContactModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabelAdd">Add Contact to Building</h3>
    </div>
    <div class="edit-add-contact-company-drop-pane-wrapper">
		<div id="edit-add-contact-company-drop-pane">
		</div>
	</div>    
    <div class="modal-body">
    
        <div class="row-fluid create-contact-message"><p><%= translate[locale]['To create a new owner'] %></p></div>
        
        <div class="row-fluid"> 
        	<div class="span12"  style="min-height:72px;">
        		<h4><%= translate[locale]['Contact'] %></h4>
        		<div class="row-fluid">
			        <select class="contactscombobox">
					  <option></option>
					</select>
					<div class="btn constrain-btn"><i class="icon-lock"></i></div>
					<div class="pull-right">
						<button class="btn btn-success" id="create_new_contact">Create Contact</button>
					</div>
				</div>
        	</div>
    	</div>
        <div class="row-fluid building-contact-wrapper" id="edit-contact-details-section" style="min-height: 180px;">
    		
    		
    		
    		
		</div>
		
        <div class="row-fluid"> 
        	<div class="span12"  style="min-height:72px;">
        		<h4><%= translate[locale]['Company'] %></h4>
				<div class="row-fluid">
			        <select class="companiescombobox">
					  <option></option>
					</select>
					<div class="btn constrain-btn"><i class="icon-lock"></i></div>
					<div class="pull-right">
						<button class="btn btn-success" id="create_new_company">Create Company</button>
					</div>
				</div>
        	</div>
        </div>
		<div class="row-fluid building-contact-wrapper" id="edit-company-details-section" style="min-height: 180px;">	
			
        	
		</div>
        
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" id="canceladdbuildingcontact" aria-hidden="true"><%= translate[locale]['Cancel'] %></button>
        <button class="btn btn-success" id="confirmaddbuildingcontact">Add</button>
    </div>
</div>



<script type="text/template" id="building-photo-template">
	<div class="span3 buildingimage" >
		<div class="row-fluid" style="position:relative;">
			<a href="{{=image}}" data-lightbox="{{=image}}" ><img src="{{=image}}" thumb="{{=thumb}}"></a>
			{{if(enabled){ }}<div class="buildingimagetrash"><i class="icon-remove-sign icon-2x"></i></div>{{ } }}
			
			<div id="UploadGif" style="margin: auto; display: none;">
                <div id="blockG_1" class="UploadGif_block">
                </div>
                <div id="blockG_2" class="UploadGif_block">
                </div>
                <div id="blockG_3" class="UploadGif_block">
                </div>
            </div>
			
		</div>
		<div class="row-fluid">
			<div class="progress" style="display: none; margin-bottom: 0px;">
				<div class="bar" style="width: 0%;"></div>
			</div>
		</div>
	</div>
</script>

<script type="text/template" id="edit-contact-pane-template">
	<div class="row-fluid edit-contact-pane-template-wrapper" style="cursor:default;" id="contact_ajax_contact_id" contact_id="{{=contact_id}}">
		<br/>
		<h4 style="margin-top:0px;">
			Modify Contact
		</h4>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label" style="min-height:40px;">Contact Name:</div>
			<div class="span7" style="min-height:40px;"><input type="text" id="contact_ajax_contact_name" class="contact_name" value="{{=contact_name}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Contact Number:</div>
			<div class="span7"><input type="text" id="contact_ajax_phone_number" value="{{=phone_number}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Contact Email:</div>
			<div class="span5"><input type="text" id="contact_ajax_email" value="{{=email}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Number Begin:</div>
			<div class="span7"><input type="text" id="contact_ajax_street_number_begin" class="address-input"  maxlength="60" value="{{=street_number_begin}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Number End:</div>
			<div class="span7"><input type="text" id="contact_ajax_street_number_end" class="address-input"  maxlength="60" value="{{=street_number_end}}" ></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Name:</div>
			<div class="span7"><input type="text" id="contact_ajax_street_name" class="address-input"  maxlength="250" value="{{=street_name}}" ></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">City:</div>
			<div class="span7"><input type="text" id="contact_ajax_city" class="address-input"  maxlength="60" value="{{=city}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Province:</div>
			<div class="span7">
				<select id="contact_ajax_province" class="address-input" >
					<option value="AB" {{if(province=='AB'){ }}selected="selected"{{ } }}>AB</option>
					<option value="BC" {{if(province=='BC'){ }}selected="selected"{{ } }}>BC</option>
					<option value="MB" {{if(province=='MB'){ }}selected="selected"{{ } }}>MB</option>
					<option value="NB" {{if(province=='NB'){ }}selected="selected"{{ } }}>NB</option>
					<option value="NL" {{if(province=='NL'){ }}selected="selected"{{ } }}>NL</option>
					<option value="NS" {{if(province=='NS'){ }}selected="selected"{{ } }}>NS</option>
					<option value="NT" {{if(province=='NT'){ }}selected="selected"{{ } }}>NT</option>
					<option value="NU" {{if(province=='NU'){ }}selected="selected"{{ } }}>NU</option>
					<option value="ON" {{if(province=='ON'){ }}selected="selected"{{ } }}>ON</option>
					<option value="PE" {{if(province=='PE'){ }}selected="selected"{{ } }}>PE</option>
					<option value="QC" {{if(province=='QC'){ }}selected="selected"{{ } }}>QC</option>
					<option value="SK" {{if(province=='SK'){ }}selected="selected"{{ } }}>SK</option>
					<option value="YT" {{if(province=='YT'){ }}selected="selected"{{ } }}>YT</option>
				</select>
			</div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Postal Code:</div>
			<div class="span7"><input type="text" id="contact_ajax_postal_code" class="address-input" maxlength="7" value="{{=postal_code}}"></div>
		</div>
		<div class="row-fluid">
			<div class="pull-right">
				<button class="btn" id="cancel_edit_contact">Cancel</button>
				<button class="btn btn-primary" id="save_edit_contact">Save</button>
			</div>
		</div>
		<div class="row-fluid" style="margin-top:10px;">
			* Changes will take effect immediately when you click Save.
		</div>
		
	</div>
</script>

<script type="text/template" id="edit-company-pane-template">
	<div class="row-fluid edit-company-pane-template-wrapper" style="cursor:default;" id="company_ajax_company_id" company_id="{{=company_id}}">
		<br/>
		<h4 style="margin-top:0px;">
			Modify Company
		</h4>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label" >Company Name:</div>
			<div class="span7" ><input type="text" id="company_ajax_company_name" class="company_name address-input"  maxlength="60" value="{{=company_name}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label" >Phone Number:</div>
			<div class="span7" ><input type="text" id="company_ajax_phone_number" class="phone_number address-input"  maxlength="60" value="{{=phone_number}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Number Begin:</div>
			<div class="span7"><input type="text" id="company_ajax_street_number_begin" class="address-input"  maxlength="60" value="{{=street_number_begin}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Number End:</div>
			<div class="span7"><input type="text" id="company_ajax_street_number_end" class="address-input"  maxlength="60" value="{{=street_number_end}}" ></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Street Name:</div>
			<div class="span7"><input type="text" id="company_ajax_street_name" class="address-input"  maxlength="250" value="{{=street_name}}" ></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">City:</div>
			<div class="span7"><input type="text" id="company_ajax_city" class="address-input"  maxlength="60" value="{{=city}}"></div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Province:</div>
			<div class="span7">
				<select id="company_ajax_province" class="address-input" >
					<option value="AB" {{if(province=='AB'){ }}selected="selected"{{ } }}>AB</option>
					<option value="BC" {{if(province=='BC'){ }}selected="selected"{{ } }}>BC</option>
					<option value="MB" {{if(province=='MB'){ }}selected="selected"{{ } }}>MB</option>
					<option value="NB" {{if(province=='NB'){ }}selected="selected"{{ } }}>NB</option>
					<option value="NL" {{if(province=='NL'){ }}selected="selected"{{ } }}>NL</option>
					<option value="NS" {{if(province=='NS'){ }}selected="selected"{{ } }}>NS</option>
					<option value="NT" {{if(province=='NT'){ }}selected="selected"{{ } }}>NT</option>
					<option value="NU" {{if(province=='NU'){ }}selected="selected"{{ } }}>NU</option>
					<option value="ON" {{if(province=='ON'){ }}selected="selected"{{ } }}>ON</option>
					<option value="PE" {{if(province=='PE'){ }}selected="selected"{{ } }}>PE</option>
					<option value="QC" {{if(province=='QC'){ }}selected="selected"{{ } }}>QC</option>
					<option value="SK" {{if(province=='SK'){ }}selected="selected"{{ } }}>SK</option>
					<option value="YT" {{if(province=='YT'){ }}selected="selected"{{ } }}>YT</option>
				</select>
			</div>
		</div>
		<div class="row-fluid building-segment-wrapper">
			<div class="span5 segment-label">Postal Code:</div>
			<div class="span7"><input type="text" id="company_ajax_postal_code" class="address-input" maxlength="7" value="{{=postal_code}}"></div>
		</div>
		<div class="row-fluid">
			<div class="pull-right">
				<button class="btn" id="cancel_edit_company">Cancel</button>
				<button class="btn btn-primary" id="save_edit_company">Save</button>
			</div>
		</div>
		<div class="row-fluid" style="margin-top:10px;">
			* Changes will take effect immediately when you click Save.
		</div>
	</div>
</script>

<script type="text/template" id="building-details-template">



	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-camera"></i> &nbsp&nbsp<b>Photo</b>
					<% if(req.session.user.policy[req.route.path].update==1){ %>
					<div class="pull-right" style="height:40px;">
						
						<div class="fileupload-ontop"> <!-- style='height: 0px;width:0px; overflow:hidden;'-->
							<input type="file" name="filesToUpload[]" id="filesToUpload" multiple="multiple"/>
						</div>
						<span class="row-category-button-wrapper">
							<span class="btn btn-success fileinput-button">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Add Photo</span>
			                </span>
						</span>
						
					</div>
					<% } %>
				</div>
			</div>
		</div>
	
	</div>
	<div class="row-fluid building-photo-wrapper">
	
	</div>	
	
	
	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid" >
				<div class="row-category" >
					<i class="icon-home"></i> &nbsp&nbsp<b>Property Address</b>
				</div>
			</div>
		</div>
	</div>
	{{ if(building_id!='new'&&latitude==null){ }}
	<div class="alert fade in" style="margin-bottom:20px; border-radius:0px;">
		<!-- <button type="button" class="close" data-dismiss="alert">&times</button>-->
		<strong>Warning:&nbsp;</strong>This address is invalid and cannot be geocoded by Google Maps. This address will not display on the maps screen.
	</div>
	{{ } }}
	
    		
	
	<div class="row-fluid building-segment-wrapper">
		<div class="row-fluid">
			<div class="span5 segment-label">Street Number Begin:</div>
			
			<div class="span7"><input type="hidden" id="building_id" value="{{=building_id}}"><input type="text" maxlength="60" id="street_number_begin" {{=typeof(sale_id)!='undefined'?'disabled="disabled"':''}} value="{{=street_number_begin}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Street Number End:</div>
			<div class="span7"><input type="text" id="street_number_end"  maxlength="60" value="{{=street_number_end}}"  {{=typeof(sale_id)!='undefined'?'disabled="disabled"':''}}></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Street Name:</div>
			<div class="span7"><input type="text" id="street_name"  maxlength="250" value="{{=street_name}}"  {{=typeof(sale_id)!='undefined'?'disabled="disabled"':''}}></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">City:</div>
			<div class="span7"><input type="text" id="city" value="{{=city}}"  maxlength="60" {{=typeof(sale_id)!='undefined'?'disabled="disabled"':''}}></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Province:</div>
			<div class="span7"><select id="province" {{=typeof(sale_id)!='undefined'?'disabled="disabled"':''}}>
			<option value="AB" {{if(province=='AB'){ }}selected="selected"{{ } }}>AB</option>
			<option value="BC" {{if(province=='BC'){ }}selected="selected"{{ } }}>BC</option>
			<option value="MB" {{if(province=='MB'){ }}selected="selected"{{ } }}>MB</option>
			<option value="NB" {{if(province=='NB'){ }}selected="selected"{{ } }}>NB</option>
			<option value="NL" {{if(province=='NL'){ }}selected="selected"{{ } }}>NL</option>
			<option value="NS" {{if(province=='NS'){ }}selected="selected"{{ } }}>NS</option>
			<option value="NT" {{if(province=='NT'){ }}selected="selected"{{ } }}>NT</option>
			<option value="NU" {{if(province=='NU'){ }}selected="selected"{{ } }}>NU</option>
			<option value="ON" {{if(province=='ON'){ }}selected="selected"{{ } }}>ON</option>
			<option value="PE" {{if(province=='PE'){ }}selected="selected"{{ } }}>PE</option>
			<option value="QC" {{if(province=='QC'){ }}selected="selected"{{ } }}>QC</option>
			<option value="SK" {{if(province=='SK'){ }}selected="selected"{{ } }}>SK</option>
			<option value="YT" {{if(province=='YT'){ }}selected="selected"{{ } }}>YT</option>
			
			</select></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Postal Code:</div>
			<div class="span7"><input type="text" id="postal_code" maxlength="7" value="{{=postal_code}}"  {{=typeof(sale_id)!='undefined'?'disabled="disabled"':''}}></div>
		</div>
	</div>	
	
	
	
		
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-certificate"></i> &nbsp&nbsp<b>Owners</b>
					
					{{if(true||typeof(sale_id)=='undefined'){ }}
					<% if(req.session.user.policy[req.route.path].update==1){ %>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
							<span id="add_owner" contact_type="owner" class="btn btn-success">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Add Owner</span>
			                </span>
						</span>
					</div>
					<% } %>
					{{ } }}
				</div>
			</div>
		</div>
	
	</div>
	
	<div class="row-fluid" id="building-owners-wrapper">
	
	</div>
	
		
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-legal"></i> &nbsp&nbsp<b>Sellers</b>
					
					{{if(true||typeof(sale_id)=='undefined'){ }}
					<% if(req.session.user.policy[req.route.path].update==1){ %>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
							<span id="add_seller" contact_type="seller" class="btn btn-success">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Add Seller</span>
			                </span>
						</span>
					</div>
					<% } %>
					{{ } }}
				</div>
			</div>
		</div>
	
	</div>
	
	<div class="row-fluid" id="building-sellers-wrapper">
	
	</div>
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-tag"></i> &nbsp&nbsp<b>Agents</b>
					{{if(true||typeof(sale_id)=='undefined'){ }}
					<% if(req.session.user.policy[req.route.path].update==1){ %>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
							<span id="add_agent" contact_type="agent" class="btn btn-success">
			                    <i class="glyphicon glyphicon-plus"></i>
			                    <span>Add Agent</span>
			                </span>
						</span>
					</div>
					<% } %>
					{{ } }}
				</div>
			</div>
		</div>
	
	</div>
	
	<div class="row-fluid" id="building-agents-wrapper">
	</div>
	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-building"></i> &nbsp&nbsp<b>Building Details</b>
				</div>
			</div>
		</div>
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="row-fluid">
			<div class="span5 segment-label">Building Type:</div>
			<div class="span7">
			
				<select type="text" id="building_type">
				<option value=""></option>
				<% for(var i=0;i<building_types.length;i++){ %><%-'<option value="'+building_types[i].id+'" {{ if(building_type=='+building_types[i].id+'){ }} selected="selected"{{ } }}  >'+building_types[i].type+'</option>'%><% } %></select>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Property Management Company:</div>
			<div class="span7"><textarea id="property_mgmt_company" rows="4" maxlength="510" >{{=property_mgmt_company}}</textarea></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Previous Property Management Company:</div>
			<div class="span7"><textarea id="prev_property_mgmt_company" rows="4" maxlength="510" >{{=prev_property_mgmt_company}}</textarea></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Heat System:</div>
			<div class="span7"><select type="text" id="heat_system_type">
			<option value=""></option>
			<% for(var i=0;i<heat_types.length;i++){ %><%-'<option value="'+heat_types[i].id+'" {{ if(heat_system_type=='+heat_types[i].id+'){ }} selected="selected"{{ } }}>'+heat_types[i].type+'</option>'%><% } %></select>

		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Heat System Installed Year:</div>
			<div class="span7"><input type="text" min="1900" max="2099" pattern="[0-9]{4}" id="heat_system_age" value="{{=heat_system_age}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Boiler Installed Year:</div>
			<div class="span7"><input type="text" min="1900" max="2099" pattern="[0-9]{4}" id="boiler_installed_year" value="{{=boiler_installed_year}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Last Boiler Upgrade Year:</div>
			<div class="span7"><input type="text" min="1900" max="2099" pattern="[0-9]{4}" id="last_boiler_upgrade_year" value="{{=last_boiler_upgrade_year}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Cable Internet Provider:</div>
			<div class="span7"><input type="text" id="cable_internet_provider" maxlength="40" value="{{=cable_internet_provider}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Number Of Stories:</div>
			<div class="span7"><input type="text" id="parking_spots" value="{{=parking_spots}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Has Elevator:</div>
			<div class="span7" style="min-height:40px;">
			<input type="checkbox" {{if(has_elevator){ }}checked="checked" {{ } }}id="has_elevator"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Elevator Installed Year:</div>
			<div class="span7"><input type="text" min="1900" max="2099" pattern="[0-9]{4}" id="elevator_installed_year" value="{{=elevator_installed_year}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Last Elevator Upgrade Year:</div>
			<div class="span7"><input type="text" min="1900" max="2099" pattern="[0-9]{4}" id="last_elevator_upgrade_year" value="{{=last_elevator_upgrade_year}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Windows Installed Year:</div>
			<div class="span7"><input type="text" min="1900" max="2099" pattern="[0-9]{4}" id="windows_installed_year" value="{{=windows_installed_year}}"></div>
		</div>
	</div>
	
	
	
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-money"></i> &nbsp&nbsp<b>Equity Details</b>
				</div>
			</div>
		</div>
	</div>
	<div class="row-fluid building-segment-wrapper">
		<div class="row-fluid">
			<div class="span5 segment-label">Assessed Value:</div>
			<div class="span7"><input type="text" id="assessed_value" value="{{=assessed_value}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Mortgage Company:</div>
			<div class="span7"><input type="text" id="mortgage_company" maxlength="40" value="{{=mortgage_company}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Mortgage Due Date:</div>
			
			<div class="span7">
				<div class="input-append span3 report-control-right-control" id="mortgage_due_date_gen">
       				<input class="" data-format="yyyy-MM-dd" style="width: 179px;" id="mortgage_due_date" type="text" value="">
   					<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>
   				</div>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Bachelor Rent Price:</div>
			<div class="span7"><input type="text" class="unit-price-dependant" id="bachelor_price" value="{{=bachelor_price}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">1 Bedroom Rent Price:</div>
			<div class="span7"><input type="text" class="unit-price-dependant" id="bedroom1_price" value="{{=bedroom1_price}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">2 Bedroom Rent Price:</div>
			<div class="span7"><input type="text" class="unit-price-dependant" id="bedroom2_price" value="{{=bedroom2_price}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">3 Bedroom Rent Price:</div>
			<div class="span7"><input type="text" class="unit-price-dependant" id="bedroom3_price" value="{{=bedroom3_price}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Bachelor Units:</div>
			<div class="span7"><input type="text" class="unit-price-dependant total-units-dependant" id="bachelor_units" value="{{=bachelor_units}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">1 Bedroom Units:</div>
			<div class="span7"><input type="text" class="unit-price-dependant total-units-dependant" id="bedroom1_units" value="{{=bedroom1_units}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">2 Bedroom Units:</div>
			<div class="span7"><input type="text" class="unit-price-dependant total-units-dependant" id="bedroom2_units" value="{{=bedroom2_units}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">3 Bedroom Units:</div>
			<div class="span7"><input type="text" class="unit-price-dependant total-units-dependant" id="bedroom3_units" value="{{=bedroom3_units}}"></div>
		</div>
		
		<div class="row-fluid">
			<div class="span5 segment-label">Total Units:</div>
			<div class="span7"><input type="text" min="0" max="999999" class="unit-price-dependant" id="unit_quantity" value="{{=unit_quantity}}"></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Building Income:</div>
			<div class="span7" style="margin-bottom:10px;">
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="building-income-radio" id="income_calculated_radio" {{ if(!building_income_manual_mode){ }}checked="checked"{{ } }}>&nbsp&nbsp&nbspCalculated - <span id="income_calculated_radio_label">{{ if(!building_income_manual_mode){ }}{{=building_income_cs}}{{ } }}</span></div>
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="building-income-radio" id="income_manual_radio" {{ if(building_income_manual_mode){ }}checked="checked"{{ } }}>&nbsp&nbsp&nbspManual - <input style="width:118px; margin-bottom:0px;" type="text" class="" id="building_income" {{ if(!building_income_manual_mode){ }}disabled="disabled" {{ }else{ }}value="{{=building_income}}"{{ } }}></div>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">Unit Price:</div>
			<div class="span7" style="margin-bottom:10px;">
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="unit-price-radio" id="unit_price_calculated_radio" {{ if(!unit_price_manual_mode){ }}checked="checked"{{ } }}>&nbsp&nbsp&nbspCalculated - <span id="unit_price_calculated_radio_label">{{ if(!unit_price_manual_mode){ }}{{='$'+(unit_price==null?'0.00':commaSeparateNumber(unit_price.toFixed(2)))}}{{ } }}</span></div>
				<div class="row-fluid" style="margin-top: 5px;"><input type="radio" class="segment-form-radio" name="unit-price-radio" id="unit_price_manual_radio" {{ if(unit_price_manual_mode){ }}checked="checked"{{ } }}>&nbsp&nbsp&nbspManual - <input style="width:118px; margin-bottom:0px;" type="text" class="" id="unit_price" {{ if(!unit_price_manual_mode){ }}disabled="disabled" {{ }else{ }}value="{{=unit_price}}"{{ } }}></div>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">CAP Rate:</div>
			<div class="span7 cap-rate"><span id="cap_rate" style="line-height:28px;">{{=cap_rate}}%</span></div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">{{if(typeof(sale_id)=='undefined'){ }}Last {{ } }}Sale Date:</div>
			<div class="span7">
				<div class="input-append span3 report-control-right-control" id="last_sale_date_gen" >
       				<input class="" data-format="yyyy-MM-dd" {{if(typeof(sale_id)!='undefined'){ }}style="width: 179px;"{{ }else{ }}style="width: 206px;"{{ } }} id="sale_date" type="text" value="" {{if(typeof(sale_id)=='undefined'){ }}disabled="disabled"{{ } }}>
   					{{if(typeof(sale_id)!='undefined'){ }}<span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"> </i> </span>{{ } }}
   				</div>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label">{{if(typeof(sale_id)=='undefined'){ }}Last {{ } }}Sale Price:</div>
			<div class="span7"><input type="text" id="last_sale_price" value="{{=last_sale_price}}" {{if(typeof(sale_id)=='undefined'){ }}disabled="disabled"{{ } }}></div>
		</div>
	</div>
	{{ if(typeof(sale_id)=='undefined'&&building_id!='new'){ }}
	<div class="row-fluid">
		<div class="span12">
			<div class="row-fluid">
				<div class="row-category">
					<i class="icon-pencil"></i> &nbsp&nbsp<b>Note History</b>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper">
							<span id="create_note" class="btn btn-success">
			                    <span><i class="only-mobile icon-file-alt"></i><span class="only-desktop">Create Note</span></span>
			                </span>
						</span>
					</div>
         	<% if(req.session.user.policy[req.route.path].delete==0){ %>
					<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper" id="save_note_parent">
							<span id="save_notes" class="btn btn-primary">
			                    <span><i class="only-mobile icon-save"></i><span class="only-desktop">Save Notes</span></span>
			                </span>
						</span>
					</div>
         	<% }else{ %>
         			<div class="pull-right" style="height:40px;">
						<span class="row-category-button-wrapper" id="save_note_parent">
							<button id="save_note_admin" class="btn btn-primary">
			                    <span><i class="only-mobile icon-save"></i><span class="only-desktop">Save</span></span>
			                </button>
						</span>
					</div>
         	
         	<% } %>
					
         	<% if(true||req.session.user.policy[req.route.path].update==0){ %>
         	<div style="margin-right: 10px; color: rgb(153, 0, 0); font-weight: 400; display: none;" class="pull-right save_pull" id="changes_pending_notes">Changes Pending. &nbsp;</div>
         	<% } %>
					
					
					
					
				</div>
			</div>
		</div>
	</div>
	
	<div id="notes-table-header" class="tableheader row-fluid">
		<div class="span2">
			Timestamp
		</div>
		<div class="span2">
			User
		</div>
		<div class="span6">
			Details
		</div>
		<div class="span2">
			Modify
		</div>
	</div>
	<div id="building-notes-wrapper" class="row-fluid css-notes-wrapper">
	
	</div>
	{{ } }}
</script>

<script type="text/template" id="building-notes-template">
	<div class="row-fluid building-note" noteid="{{=id}}">
		<div class="span2">
			<span class="mobilelabel">Timestamp:</span>{{=note_datetime}}
		</div>
		<div class="span2">
			<span class="mobilelabel">User:</span>{{=user}}
		</div>
		<div class="span6"><span class="mobilelabel">Details:</span><div class="note-editable">{{=note}}</div></div>
		<div class="span2" style="padding-top:0px;">
			<div class="row-fluid" style="padding:6px;">
				{{ if(user=='<%=req.session.user.username%>'||<%=req.session.user.policy[req.route.path].update==1%>){ }}<a class="edit-note" style="color:#0F74BC;cursor:pointer;padding-right:6px;"><i class="icon-edit icon-2x"></i></a> {{ } }}
				{{ if(user=='<%=req.session.user.username%>'||<%=req.session.user.policy[req.route.path].update==1%>){ }}<a class="delete-note" style="color:red;cursor:pointer;"><i class="icon-remove-sign icon-2x"></i></a>{{ } }}
			</div>
		</div>
	</div>
</script>

<script type="text/template" id="building-contact-template">
	<div class="row-fluid building-contact-wrapper" contact_mapping_id="{{=mapping_id}}" contact_id="{{=contact_id}}" {{ if(typeof(dodelete)!='undefined'){ }}style="display:none;"{{ } }}>

		<div class="row-fluid">
			<div class="span5 segment-label mobilehider">Company:</div>
			<div class="span7 segment-label-value"><span class="mobilelabel">Company:</span>{{=cur_company_name}}</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label mobilehider">Company Phone:</div>
			<div class="span7 segment-label-value"><span class="mobilelabel">Phone:</span>{{=company_phone_number}}</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label mobilehider">Company Address:</div>
			<div class="span7" style="padding-top: 6px;">
				<div class="mobileaddress">
					<div class="row-fluid"><span class="mobilelabel">Address:</span><span>{{=(street_number_begin==null?'':street_number_begin)+(street_number_end==''||street_number_end==null||street_number_end=='null'?'':' - '+street_number_end)+(street_name==''||street_name==null||street_name=='null'?'':' '+street_name)}}</span></div>
					<div class="row-fluid"><span class="mobilelabel"></span><span>{{=(city==''||city==null||city=='null'?'':city)+(province==''||province==null||province=='null'?'':(city==''||city==null||city=='null'?'':', ')+province)}}</span></div>
					<div class="row-fluid"><span class="mobilelabel"></span><span>{{=postal_code==null||postal_code=='null'||postal_code==''?'':postal_code}}</span></div>
				</div>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label mobilehider">Contact:</div>
			<div class="span7 segment-label-value"><span class="mobilelabel">Contact:</span>{{=contact_name}}</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label mobilehider">Contact Phone:</div>
			<div class="span7 segment-label-value"><span class="mobilelabel">Phone:</span>{{=phone_number}}</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label mobilehider">Contact Email:</div>
			<div class="span7 segment-label-value"><span class="mobilelabel">Email:</span>{{=email}}</div>
		</div>
		<div class="row-fluid">
			<div class="span5 segment-label mobilehider">Contact Address:</div>
			<div class="span7" style="padding-top: 6px;">
				<div class="mobileaddress">
					<div class="row-fluid"><span class="mobilelabel">Address:</span><span>{{=(contact_street_number_begin==null?'':contact_street_number_begin)+(contact_street_number_end==''||contact_street_number_end==null||contact_street_number_end=='null'?'':' - '+contact_street_number_end)+(contact_street_name==''||contact_street_name==null||contact_street_name=='null'?'':' '+contact_street_name)}}</span></div>
					<div class="row-fluid"><span class="mobilelabel"></span><span>{{=(contact_city==''||contact_city==null||contact_city=='null'?'':contact_city)+(contact_province==''||contact_province==null||contact_province=='null'?'':(contact_city==''||contact_city==null||contact_city=='null'?'':', ')+contact_province)}}</span></div>
					<div class="row-fluid"><span class="mobilelabel"></span><span>{{=contact_postal_code==null||contact_postal_code=='null'||contact_postal_code==''?'':contact_postal_code}}</span></div>
				</div>
			</div>
		</div>
		
		{{if(true||typeof(sale_id)=='undefined'){ }}
		<% if(req.session.user.policy[req.route.path].update==1){ %>
		<div class="row-fluid">
			<div class="span12 ">
				<a class="btn btn-danger pull-right remove-building-contact">Remove</a>
				<a contact_type="{{=contact_type}}" contact_mapping_id="{{=mapping_id}}" class="btn btn-warning pull-right edit-building-contact">Edit</a>
			</div>
		</div>
		
		<% } %>
		{{ } }}
		
	</div>
</script>


<script type="text/template" id="building-sale-template">
	<div class="row-fluid building-sale-wrapper generic-table-styling {{=typeof(selected)!='undefined'&&selected?'table-row-selected':''}}" sale_id="{{=sale_id}}" building_id="{{=building_id}}">
		<div class="row-fluid">
			<div class="span3"><span class="mobilelabel">Timestamp:</span>{{=sale_datestring}}</div>
			<div class="span2"><span class="mobilelabel">Owner:</span>{{=owner}}</div>
			<div class="span2"><span class="mobilelabel">Seller:</span>{{=seller}}</div>
			<div class="span2"><span class="mobilelabel">Agent:</span>{{=agent}}</div>
			<div class="span3"><span class="mobilelabel">Price:</span>{{=formatted_sale_price}}</div>
		</div>
	</div>
</script>


<!-- Modal - confirms you want to continue to delete contact -->
<div id="deleteModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabeldelete"></h3>
    </div>
    <div class="modal-body">
        <p>One fine body…</p>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true"><%= translate[locale]['Cancel'] %></button>
        <button class="btn btn-danger" data-dismiss="modal" aria-hidden="true" id="confirmdelete"><%= translate[locale]['Delete'] %></button>
    </div>
</div>

<!-- Modal - confirms you want to continue to delete contact -->
<div id="deleteSaleModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabeldeleteSale"></h3>
    </div>
    <div class="modal-body">
        <p>One fine body…</p>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true"><%= translate[locale]['Cancel'] %></button>
        <button class="btn btn-danger" data-dismiss="modal" aria-hidden="true" id="confirmdeletesale"><%= translate[locale]['Delete'] %></button>
    </div>
</div>


<div class="isn-content-footer">
	<hr class="isn-footer-hr">
	<div class="isn-margin-footer-wrapper">
		<div class="isn-footer-image">
			Powered By 
			<img alt="iSystemsNow" class="logo isn-logo" src="/img/iSystemsNow-Logo-RGB-Black.png">'s Now Management Studio. 
		</div>
	</div>
</div>


<script type="text/template" id="building-template">
	<div class="row-fluid building-map-details" style="position:relative; cursor:default;" building_id="{{=building_id}}">
		<div style="position: absolute;top: 0px;right: 0px;color: #C52D22;cursor: pointer;margin-right: 12px;margin-top: 7px;">
		<i class="icon-remove-sign icon-2x close-building-map-details"></i>
		</div>
		<div class="building-details-padder">	
			<div class="row-fluid" style="white-space:nowrap;">
				{{ var tempimages = JSON.parse(images); if(tempimages!=null&&tempimages.length>0){ }}
				<div class="building-card-images-wrapper">
					{{var images = JSON.parse(images); for( key in images){ }}
				 		<a href="{{=images[key].image}}" data-lightbox="{{=images[key].image}}" class="span2 building-overlay-block-picture"><img src="{{=images[key].thumb}}"></a>
					{{ } }}
				</div>
				{{ } }}
				<div class="span3 building-overlay-block-address">
					<div class="row-fluid">Address:</div>
					<div class="row-fluid block-value">{{=address_1}}</div>
					<div class="row-fluid block-value">{{=address_2}}</div>
					<div class="row-fluid block-value"><div id="view_history">View History</div></div>
				</div>
				
				<div class="span3 building-overlay-block-details">
					{{ for(var i=0; i<contacts.length; i++){ if(contacts[i].contact_type=='owner'){ }}
					<div class="row-fluid" contact_id="{{=contacts[i].contact_id}}">
						<div class="pull-left">Owner:</div>
						<div class="pull-right">{{=contacts[i].contact_name}}</div>
					</div>
					{{ } } }}
					{{ for(var i=0; i<contacts.length; i++){ if(contacts[i].contact_type=='seller'){ }}
					<div class="row-fluid" contact_id="{{=contacts[i].contact_id}}">
						<div class="pull-left">Seller:</div>
						<div class="pull-right">{{=contacts[i].contact_name}}</div>
					</div>
					{{ } } }}
					
					{{ for(var i=0; i<contacts.length; i++){ if(contacts[i].contact_type=='agent'){ }}
					<div class="row-fluid" contact_id="{{=contacts[i].contact_id}}">
						<div class="pull-left">Agent:</div>
						<div class="pull-right">{{=contacts[i].contact_name}}</div>
					</div>
					{{ } } }}
					<div class="row-fluid">
						<div class="pull-left">Prop. Mngr:</div>
						<div class="pull-right" style="max-width: 240px;white-space: normal;">{{=property_mgmt_company}}</div>
					</div>
				</div>
				<div class="span3 building-overlay-block-details">
					<div class="row-fluid">
						<div class="pull-left">Units:</div>
						<div class="pull-right block-value">{{=unit_quantity}}</div>
					</div>
					<div class="row-fluid">
						<div class="pull-left">Sale Date:</div>
						<div class="pull-right block-value">{{=(sale_date==null||sale_date=='')?'':(new Date(sale_date).toDateString())}}</div>
					</div>
					<div class="row-fluid">
						<div class="pull-left">Price Per Unit:</div>
						<div class="pull-right block-value">{{=unit_price}}</div>
					</div>
					<div class="row-fluid">
						<div class="pull-left">Price:</div>
						<div class="pull-right block-value">{{=last_sale_price}}</div>
					</div>
					
				</div>
				<div class="span3 building-overlay-block-details">
					{{ if(bachelor_price!=null&&bachelor_price!='$0'){ }}
					<div class="row-fluid">
						<div class="pull-left">Bachelor Rent:</div>
						<div class="pull-right block-value">{{=bachelor_price}}</div>
					</div>
					{{ } }}
					{{ if(bedroom1_price!=null&&bedroom1_price!='$0'){ }}
					
					<div class="row-fluid">
						<div class="pull-left">1 Bdrm Rent:</div>
						<div class="pull-right block-value">{{=bedroom1_price}}</div>
					</div>
					{{ } }}
					{{ if(bedroom2_price!=null&&bedroom2_price!='$0'){ }}
					<div class="row-fluid">
						<div class="pull-left">2 Bdrm Rent:</div>
						<div class="pull-right block-value">{{=bedroom2_price}}</div>
					</div>
					{{ } }}
					{{ if(bedroom3_price!=null&&bedroom3_price!='$0'){ }}
					<div class="row-fluid">
						<div class="pull-left">3 Bdrm Rent:</div>
						<div class="pull-right block-value">{{=bedroom3_price}}</div>
					</div>
					{{ } }}
				</div>
			</div>
		</div>
	</div>
</script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAbxXYHzi3ypnRymTns27yE_o-fEyj6cIE"></script>

<script>
    var alarms;
    var markers,map;
    var alarms;
    var layers = {};
    var selectedBuilding = null;
    var filtersEnabled = true;
    var sliders = [];
    var editMappingId = null;
    
    var ajaxContact;
    var passThroughIsChangesPending = false;
    
    
    $(document).ready(function(){
    
    	var unitsMax = null;
    	var unitsMin = null;
    	var building_income_max = null;
		var elevator_installed_year_max = null;
		var unit_price_max = null;
		var elevator_upgrade_year_max = null;
		var cap_rate_max = null;
		var sale_price_max = null;
		var boiler_installed_year_max = null;
		var boiler_upgrade_max = null;
		var heat_age_max = null;
		var sales_count_max = null;
		var windows_installed_year_max = null;
		var parking_spots_max = null;
		
    	var building_income_min = null;
		var elevator_installed_year_min = null;
		var unit_price_min = null;
		var elevator_upgrade_year_min = null;
		var cap_rate_min = null;
		var sale_price_min = null;
		var boiler_installed_year_min = null;
		var boiler_upgrade_min = null;
		var heat_age_min = null;
		var sales_count_min = null;
		var windows_installed_year_min = null;
		var parking_spots_min = null;
		    	
    	var bachelor_units_min = null;
    	var bachelor_units_max = null;
    	var bedroom1_units_min = null;
    	var bedroom1_units_max = null;
    	var bedroom2_units_min = null;
    	var bedroom2_units_max = null;
    	var bedroom3_units_min = null;
    	var bedroom3_units_max = null;
    	
    	var bachelor_rent_min = null;
    	var bachelor_rent_max = null;
    	var bedroom1_rent_min = null;
    	var bedroom1_rent_max = null;
    	var bedroom2_rent_min = null;
    	var bedroom2_rent_max = null;
    	var bedroom3_rent_min = null;
    	var bedroom3_rent_max = null;
    	
    	var sliderLimit = 1000;
    	var bucketPrefix = "https://s3-us-west-2.amazonaws.com/credimage/";
    	var tempImg = null;
    	var lastImageUrl = "";
    	var lastThumbUrl = "";
        var MAX_WIDTH = 500;
        var MAX_HEIGHT = 400;
        var THMB_WIDTH = 125;
        var THMB_HEIGHT = 125;
        var leaveSalesExpanded = false;
        var triggerScroll = false;
    	var init_id = <%=typeof(init_id)!='undefined'?init_id:null%>;
    	var salepicker;
    	var MAX_CAP_RATE = 100;
    	var MIN_CAP_RATE = 0;
    	var STEP_CAP_RATE = 1;
    	var MIN_HEAT_AGE = 1900;
    	var MAX_HEAT_AGE = 2100;
    	var STEP_HEAT_AGE = 10;
    	var MIN_BOILER_INSTALLED_YEAR = 1900;
    	var MAX_BOILER_INSTALLED_YEAR = 2100;
    	var STEP_BOILER_INSTALLED_YEAR = 10;
    	var MIN_BOILER_UPGRADE = 1900;
    	var MAX_BOILER_UPGRADE = 2100;
    	var STEP_BOILER_UPGRADE = 10;
    	
    	
    	var MIN_ROOM_RENT = 0;
    	var MAX_ROOM_RENT = 10000;
    	var STEP_ROOM_RENT = 10;
    	var MIN_ROOM_UNITS = 0;
    	var MAX_ROOM_UNITS = 1000;
    	var STEP_ROOM_UNITS = 1;
    	
    	var MIN_BUILDING_INCOME = 0;
    	var MAX_BUILDING_INCOME = 10000000;
    	var STEP_BUILDING_INCOME = 1000;
    	
    	var MIN_UNIT_PRICE = 5000;
    	var MAX_UNIT_PRICE = 300000;
    	var STEP_UNIT_PRICE = 10;

    	var MIN_SALE_PRICE = 0;
    	var MAX_SALE_PRICE = 100000000;
    	var STEP_SALE_PRICE = 1000;
    	
    	var MIN_SALES_COUNT = 0;
    	var MAX_SALES_COUNT = 10;
    	var STEP_SALES_COUNT = 1;
    	
    	var MIN_WINDOWS_INSTALLED_YEAR = 1900;
    	var MAX_WINDOWS_INSTALLED_YEAR = 2100;
    	var STEP_WINDOWS_INSTALLED_YEAR = 10;
    	var MIN_PARKING_SPOTS = 0;
    	var MAX_PARKING_SPOTS = 2000;
    	var STEP_PARKING_SPOTS = 10;
    	
    	var MIN_ELEVATOR_UPGRADE_YEAR = 1900;
    	var MAX_ELEVATOR_UPGRADE_YEAR = 2100;
    	var STEP_ELEVATOR_UPGRADE_YEAR = 10;
    	
    	var MIN_ELEVATOR_INSTALLED_YEAR = 1900;
    	var MAX_ELEVATOR_INSTALLED_YEAR = 2100;
    	var STEP_ELEVATOR_INSTALLED_YEAR = 10;
    	
		  	
    	var buildingtemplate = _.template($('#building-template').html());
    	var buildingphototemplate = _.template($('#building-photo-template').html());
    	
    	var blockNoteSave = false;
    	
    	
    	
    	function buildingSelected(building_id,pan){
    		//$('#building_slideup_wrapper').empty();
    		selectedBuilding = building_id;
			setMapSize();
    		socket.get('/buildings/getbuilding/'+building_id,{},function(responseBuilding){
    			socket.get('/buildings/getcontacts/'+building_id,{},function(responseContacts){
    				if(typeof(responseContacts[0])!='undefined'){
    					responseBuilding.contacts = responseContacts[0];
    				}else{
    					responseBuilding.contacts = [];
    				}
    				$('#building_slideup_wrapper').empty();
    				responseBuilding.address_1=buildStreetString(responseBuilding.street_number_begin,responseBuilding.street_number_end,responseBuilding.street_name);
	    			responseBuilding.address_2=buildCityProvincePostalCodeString(responseBuilding.city,responseBuilding.province,responseBuilding.postal_code);
	    			responseBuilding.sale_date=toSaleDateTimeString(responseBuilding.sale_date);
	    			
    				responseBuilding.unit_price = responseBuilding.unit_price==null?'$0':'$'+commaSeparateNumber(responseBuilding.unit_price.toFixed(0));
    				responseBuilding.last_sale_price = responseBuilding.last_sale_price==null?'$0':'$'+commaSeparateNumber(parseInt(responseBuilding.last_sale_price).toFixed(0));
    				responseBuilding.bachelor_price = responseBuilding.bachelor_price==null?'$0':'$'+commaSeparateNumber(parseInt(responseBuilding.bachelor_price).toFixed(0));
    				responseBuilding.bedroom1_price = responseBuilding.bedroom1_price==null?'$0':'$'+commaSeparateNumber(parseInt(responseBuilding.bedroom1_price).toFixed(0));
    				responseBuilding.bedroom2_price = responseBuilding.bedroom2_price==null?'$0':'$'+commaSeparateNumber(parseInt(responseBuilding.bedroom2_price).toFixed(0));
    				responseBuilding.bedroom3_price = responseBuilding.bedroom3_price==null?'$0':'$'+commaSeparateNumber(parseInt(responseBuilding.bedroom3_price).toFixed(0));
    				
    				$('#clear_selected').css('display','');
	    			$('#building_slideup_wrapper').append(buildingtemplate(responseBuilding));
	    			
	    			$('#clear_selected').unbind();
	    			$('#clear_selected').click(function(){
		    			if(isChangesPending()){
							if(!confirm(unsavedMessage)){
								if($('body').width()>979){
									$('.main-content').animate({
								        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
								    }, 500);
								}else{
									$('html, body').animate({
								        scrollTop: $(".edit-item-section").offset().top
								    }, 500);
								}
								return;
							}
						}
	    				$('.building-map-details').remove();
						setMapSize();
						markers.clearSelected();
						$('.edit-item-section').css('display','none');
						$('#delete_building').css('display','none');
						$('#clear_selected').css('display','none');
						selectedBuilding = null;
	    			});
	    			
	    			$('#view_history').unbind();
	    			$('#view_history').click(function(){
	    				$('#search_toggler').click();
	    				$('#buildings tbody tr[building_id='+$(this).closest('.building-map-details').attr('building_id')+']').click();
	    				
	    			});
	    			$('.close-building-map-details').click(function(){
	    				if(isChangesPending()){
							if(!confirm(unsavedMessage)){
								$('#search_toggler').click();
								if($('body').width()>979){
									$('.main-content').animate({
								        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
								    }, 500);
								}else{
									$('html, body').animate({
								        scrollTop: $(".edit-item-section").offset().top
								    }, 500);
								}
								return;
							}
						}
	    			
	    				$(this).parents('.building-map-details').remove();
	    				setMapSize();
	    				markers.clearSelected();
						$('.edit-item-section').css('display','none');
						$('#delete_building').css('display','none');
						$('#clear_selected').css('display','none');
						//building.unset('building_id');// = null;
						selectedBuilding = null;
	    			});
	    			setTimeout(function(){
						setMapSize();
	    			},500);
					setMapSize();
					
					
					if(pan){
						markers.blockIdleEvent = true;
						map.panTo(markers.getPosition(building_id));
					}
    			});
    			
    		});
    	
    		// if it's being filled for the first time:
    		//if($('#building_slideup_wrapper').html()!=''){
    		//	$('#map_wrapper').height($('#map_wrapper').height()-$('#building_slideup_wrapper').height()); //shrink the map height
    		//}
    	}
    	
    	$('#search_toggler').click(function(){
			if($('#map_pane_wrapper').height()==50){
				$('#map_pane_wrapper').animate({
					height:$(window).height()-$('.navbar-fixed-top').height()+'px'
					
					
				},300,function(){
					$('#search_toggler').attr('scrollstate','bottom');
					$('.main-content').addClass('map-hidden');
				});
			}else{
				$('.main-content').removeClass('map-hidden');
				$('#map_pane_wrapper').animate({
					height:50+'px'
				},300,function(){
					$('#search_toggler').attr('scrollstate','top');
				});
			}
			
			
			
    	});
    
    
    	function Markers(){
    		var self = this;
    		
    		this.constrainGPS = false;
    		this.blockIdleEvent = true;
    		this.collection = {};
    		
    		this.clearMarkers = function (newmarkers){
    			for(marker in self.collection){
    				if(typeof(newmarkers[marker])=='undefined'){
    					self.collection[marker].destroy();
    					delete self.collection[marker];
    				}else if(selectedBuilding==marker&&(newmarkers[marker].latitude != self.collection[marker].latitude||newmarkers[marker].longitude != self.collection[marker].longitude)){
    					self.collection[marker].destroy();
    					delete self.collection[marker];
    				}
    				
    				//else if(selectedBuilding == marker){ //the SELECTED ONE!
    				
    				//}
    				
    				
    			}
    			//self.collection = {};
    		}
    		
    		this.addMarker = function(building)
    		{
    			if(building.latitude !=null)
    			{
    				if(typeof(self.collection[building.building_id])=='undefined'){
    					self.collection[building.building_id] = (new ActiveMarker(building,map));
    				}
				}
    			//if(!constrainGPS&&!map.getBounds().contains(self.collection[building.building_id].googleMarker.getPosition())){
    				
    			//}
    		}
    		
    		this.checkMarkersBounded = function(){
    			for(marker in self.collection){
    				if(typeof(self.collection[marker].googleMarker)!='undefined'){
	    				if(!map.getBounds().contains(self.collection[marker].googleMarker.getPosition())){
	    					return false;
	    				}
    				}
    			}
    			return true;
    		}
    		
    		this.verifyBounds = function(){
				//  Create a new viewpoint bound
				if(!self.constrainGPS&&!self.checkMarkersBounded()){  // only attempting to check and correct position if we're not in lat/lng mode
    				self.blockIdleEvent = true;
    				var bounds = new google.maps.LatLngBounds ();
	    			for(marker in self.collection){
	    				if(typeof(self.collection[marker].googleMarker)!='undefined'){
	    					bounds.extend(self.collection[marker].googleMarker.getPosition());
	    				}
	    			}
					map.fitBounds(bounds);
				}
    		}
    		
			this.clearSelected = function(){
				for(marker in self.collection){
    				self.collection[marker].clearSelected();
    			}
			}
    		
    		this.toggle = function(building_id,pan){
    			
    			if(isChangesPending()){
    				if(!confirm(unsavedMessage)){
						if($('body').width()>979){
							$('.main-content').animate({
						        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
						    }, 500);
						}else{
							$('html, body').animate({
						        scrollTop: $(".edit-item-section").offset().top
						    }, 500);
						}
						return;
					}
				}
				
    			if(typeof(self.collection[building_id])!='undefined'){
    				self.collection[building_id].toggle(pan);
    			}else if(typeof(building.get('sale_id'))=='undefined'){
    			
					building.fetch({id:parseInt(building_id)});
					$('#buildings tbody tr').removeClass('selected');
					$('#buildings tbody tr[building_id='+building_id+']').removeClass('selected').addClass('selected');    			
    			}
    		}
    		
    		this.getPosition = function(building_id){
    			return self.collection[building_id].getPosition();
    		}
    		
    	} 
    	
    	function ActiveMarker(tempbuilding){
    		var self = this;
    		this.building = tempbuilding;
    		this.googleMarker;
    		this.selected = false;
    		
    		var blueColor = "2F76EE"; // a random blue color that i picked
			this.blueImage = new google.maps.MarkerImage("/img/markers/bluemarker.png",
            new google.maps.Size(21, 34),
            new google.maps.Point(0,0),
            new google.maps.Point(10, 34));
            var redColor = "F75448"
            this.redImage = new google.maps.MarkerImage("/img/markers/redmarker.png",
            new google.maps.Size(21, 34),
            new google.maps.Point(0,0),
            new google.maps.Point(10, 34));
			this.pinShadow = new google.maps.MarkerImage("/img/markers/shadow.png",
            new google.maps.Size(40, 37),
            new google.maps.Point(0, 0),
            new google.maps.Point(12, 35));
            
            this.getPosition = function(){
            	return self.googleMarker.getPosition();
            }
    		
    		if(self.building.latitude!=null)
			{
    			self.googleMarker = new google.maps.Marker({
				    position: new google.maps.LatLng(self.building.latitude,self.building.longitude),
				    map: map,
				    icon:this.redImage,
				    opacity:0.25,
				    title:((typeof(self.building.street_number_begin)!='undefined'&&self.building.street_number_begin!=null)?self.building.street_number_begin:'')+((typeof(self.building.street_number_end)!='undefined'&&self.building.street_number_end!=null)?'-'+self.building.street_number_end:'')+(typeof(self.building.street_name)!='undefined'?' '+self.building.street_name:'')
				}); //(typeof(self.building.maporder)!='undefined'?('maporder:'+self.building.maporder):'')+
				this.addOpaqueTicker = setInterval(function(){
					self.googleMarker.setOpacity((self.googleMarker.getOpacity()||0)+0.25);
					if(self.googleMarker.getOpacity()>=1){
						clearInterval(self.addOpaqueTicker);
					}
				},100);
				google.maps.event.addListener(self.googleMarker,'click',function(){
					if(isChangesPending()){
						if(!confirm(unsavedMessage)){
							$('#search_toggler').click();
							if($('body').width()>979){
								$('.main-content').animate({
							        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
							    }, 500);
							}else{
								$('html, body').animate({
							        scrollTop: $(".edit-item-section").offset().top
							    }, 500);
							}
							return;
						}
					}
					self.toggle(true);
				});
			}
			this.clearSelected = function(){
				self.selected = false;
				$('#buildings > tbody > tr[building_id='+self.building.building_id+']').removeClass('selected');
				self.googleMarker.setIcon(self.redImage);
			}
			this.toggle = function(pan){
				self.selected = !self.selected;
				if(self.selected){
					if(typeof(building.get('sale_id'))=='undefined'|| self.building.building_id !=parseInt(building.get('sale_id'))){
						building.fetch({id:parseInt(self.building.building_id)});
					}
					$('#buildings tbody tr').removeClass('selected');
					$('#buildings tbody tr[building_id='+self.building.building_id+']').removeClass('selected').addClass('selected'); 
					markers.clearSelected();
					$('#buildings > tbody > tr[building_id='+self.building.building_id+']').addClass('selected');
					self.googleMarker.setIcon(self.blueImage);
					buildingSelected(self.building.building_id,pan);
					if($('#buildings tbody tr.hidden.selected').length>0){
						datatable.api().draw();
					}
				}else{
					$('#buildings > tbody > tr[building_id='+self.building.building_id+']').removeClass('selected');
					self.googleMarker.setIcon(self.redImage);
				}
			}
			this.destroy = function(){
    				google.maps.event.clearListeners(self.googleMarker, 'click');
    				self.googleMarker.setOpacity((self.googleMarker.getOpacity()||1)-0.25);
    				this.opaqueTicker = setInterval(function(){
    					self.googleMarker.setOpacity((self.googleMarker.getOpacity()||1)-0.25);
    					if(self.googleMarker.getOpacity()<=0){
    						clearInterval(self.opaqueTicker);
    						self.googleMarker.setMap(null);
    						self.googleMarker = null;
    					}
    				},100);
    				
    				//self.googleMarker.setMap(null);
    				//self.googleMarker = null;
			}
    	}
    
    
    	function initMap(){
	    	var mapOptions = {
	          center: new google.maps.LatLng(43.7, -79.4),
	          zoom: 10,
	          panControl:false,
	          streetViewControl:true,
	          streetViewControlOptions:{
			        position: google.maps.ControlPosition.TOP_LEFT
			    },
	          mapTypeControl:true,
	          mapTypeControlOptions: {
			        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
			        position: google.maps.ControlPosition.TOP_LEFT
			    },
	          overviewMapControl:false
	        };
    		
    		//$('#map_wrapper').height($('body').height()-$('.navbar-fixed-top').height()-50);
    		setMapSize();
    		
    		map = new google.maps.Map($('#map_wrapper')[0],mapOptions);
    		
    		layers.go = new google.maps.KmlLayer('https://rems.principledadvisor.ca/img/layers/go.kmz',{preserveViewport: true});
			layers.ttc = new google.maps.KmlLayer('https://rems.principledadvisor.ca/img/layers/ttc.kmz',{preserveViewport: true});
			layers.viva = new google.maps.KmlLayer('https://rems.principledadvisor.ca/img/layers/viva.kmz',{preserveViewport: true});
			
		  	
		  	var filtersToggleDiv = document.createElement('div');
		  	var filtersToggle = new FiltersToggleControl(filtersToggleDiv,map);
    		
    		filtersToggleDiv.index = 1;
		  	map.controls[google.maps.ControlPosition.RIGHT_TOP].push(filtersToggleDiv);
			//var layerGo = new google.maps.KmlLayer('http://isystemsnow.com/layers/ttc.kmz');
			//layerGo.setMap(map);
    		
    		  // Create the DIV to hold the control and call the HomeControl() constructor
			  // passing in this DIV.
		  	var homeControlDiv = document.createElement('div');
		  	var homeControl = new HomeControl(homeControlDiv, map);
		
		  	homeControlDiv.index = 1;
		  	map.controls[google.maps.ControlPosition.RIGHT_TOP].push(homeControlDiv);
    		
    		
    		google.maps.event.addListener(map, 'tilesloaded', function() {
    			google.maps.event.clearListeners(map, 'tilesloaded');
    			initDataTable();
    			
				$('.title-collapse-wrapper').click(function(){
					if($('.map-collapse-content').css('display')=='none'){  //currently empty
		        		$('.title-collapse-wrapper > i.icon-plus-sign').removeClass('icon-plus-sign').addClass('icon-minus-sign');
		        	}else{  // currently shown
		        		$('.title-collapse-wrapper > i.icon-minus-sign').removeClass('icon-minus-sign').addClass('icon-plus-sign');
		        	}
		        	$('.map-collapse-content').slideToggle('medium',function(){
	
		        	});
				});
	        });
	        google.maps.event.addListener(map, 'idle', function() {  
	        	if(typeof(datatable)!='undefined'){
	        		if($('#map_pane_wrapper').height()!=50&&!markers.blockIdleEvent){
		        		if(isChangesPending()){
		    				if(!confirm(unsavedMessage)){
								if($('#map_pane_wrapper').height()!=50){
									$('#search_toggler').click();
								}
								if($('body').width()>979){
									$('.main-content').animate({
								        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
								    }, 500);
								}else{
									$('html, body').animate({
								        scrollTop: $(".edit-item-section").offset().top
								    }, 500);
								}
								return;
							}
						}
        				markers.constrainGPS = true;
        				$('#constrain_gps').prop('checked',true);
						datatable.api().ajax.reload(); // INITIAL/IDLE/PAN/ZOOM
        			}else{
        				markers.blockIdleEvent = false;
    				}
    			}
	        });
    		markers = new Markers();
    	}
    	
    	google.maps.event.addDomListener(window, 'load', initMap);
    

    	
    	
		$('#export_building').click(function(){
			$('#exportModal .modal-body').html('<div style="font-size: 16px; font-weight:400; text-align:right;" class="pull-right"><span class=""><i class="icon icon-cog icon-spin"></i></span>&nbsp;&nbsp;Generating Report...&nbsp;</div>');
            $('#exportModal').modal('show');
            blockUnload = true;
            $('#exportModal').unbind('hidden');
            $('#exportModal').on('hidden', function () {
			    blockUnload = false;
			});
            
            var checkbox_building_types = '';
			var checkbox_heating_types = '';
			$('.building-type-checkboxes').each(function(){
				if($(this).is(':checked')){
					if(checkbox_building_types != ''){
						checkbox_building_types = checkbox_building_types + ',';
					}
					checkbox_building_types = checkbox_building_types + $(this).attr('building_type');
				}
			});	   
			$('.heating-type-checkboxes').each(function(){
				if($(this).is(':checked')){
					if(checkbox_heating_types != ''){
						checkbox_heating_types = checkbox_heating_types + ',';
					}
					checkbox_heating_types = checkbox_heating_types + $(this).attr('heat_type');
				}
			});    
            
           	
            
            
            
			socket.get('/buildings/export',
				{timezoneoffset : new Date().getTimezoneOffset()
				,search_keyword : $('#search_keyword').val()
				,full_contact_search : $('#search_full_contact').val()
				,full_address_search : $('#search_full_address').val()
				,address_search : $("#search_address").val()
				,owner_search : $("#search_owner").val()
				,owner_company_search : $("#search_owner_company").val()
				,seller_search : $("#search_seller").val()
				,seller_company_search : $("#search_seller_company").val()
				,agent_search : $("#search_agent").val()
				,agent_company_search : $("#search_agent_company").val()
				,mortgage_search : $('#search_mortgage').val()
				,unitQuantityMin : unitsMin==0?null:unitsMin
				,unitQuantityMax : unitsMax==sliderLimit?null:unitsMax
				,unit_price_min:(parseInt(unit_price_min)==MIN_UNIT_PRICE)?null:unit_price_min
				,unit_price_max:unit_price_max==MAX_UNIT_PRICE?null:unit_price_max
				,saleDateRangeStart:$('#start_time').val()==''?null:typeof($('#start_time_gen').data('datetimepicker'))=='undefined'?null:$('#start_time_gen').data('datetimepicker').getLocalDate().toUTCString()        			
				,saleDateRangeEnd : $('#end_time').val()==''?null: typeof($('#end_time_gen').data('datetimepicker'))=='undefined'?null:$('#end_time_gen').data('datetimepicker').getLocalDate().toUTCString()
				,has_elevator: ($('#search_elevator').val()=='null'||$('#search_elevator').val()==null)?null:($('#search_elevator').val()=='true'||$('#search_elevator').val()==true?true:false)
				,elevator_installed_year_min:elevator_installed_year_min==MIN_ELEVATOR_INSTALLED_YEAR?null:elevator_installed_year_min
				,elevator_installed_year_max:elevator_installed_year_max==MAX_ELEVATOR_INSTALLED_YEAR?null:elevator_installed_year_max
				,elevator_upgrade_year_min:elevator_upgrade_year_min==MIN_ELEVATOR_UPGRADE_YEAR?null:elevator_upgrade_year_min
				,elevator_upgrade_year_max:elevator_upgrade_year_max==MAX_ELEVATOR_UPGRADE_YEAR?null:elevator_upgrade_year_max
				,cap_rate_min:cap_rate_min==MIN_CAP_RATE?null:cap_rate_min
				,cap_rate_max:cap_rate_max==MAX_CAP_RATE?null:cap_rate_max
				,search_property_mgmt_company:$('#search_property_mgmt_company').val()
				,search_prev_property_mgmt_company:$('#search_prev_property_mgmt_company').val()
				,heat_age_min:heat_age_min==MIN_HEAT_AGE?null:heat_age_min
				,heat_age_max:heat_age_max==MAX_HEAT_AGE?null:heat_age_max
				,boiler_installed_year_min:boiler_installed_year_min==MIN_BOILER_INSTALLED_YEAR?null:boiler_installed_year_min
				,boiler_installed_year_max:boiler_installed_year_max==MAX_BOILER_INSTALLED_YEAR?null:boiler_installed_year_max
				,boiler_upgrade_min:boiler_upgrade_min==MIN_BOILER_UPGRADE?null:boiler_upgrade_min
				,boiler_upgrade_max:boiler_upgrade_max==MAX_BOILER_UPGRADE?null:boiler_upgrade_max
				,building_income_min:building_income_min==MIN_BUILDING_INCOME?null:building_income_min
				,building_income_max:building_income_max==MAX_BUILDING_INCOME?null:building_income_max
				,sale_price_min:sale_price_min==MIN_SALE_PRICE?null:sale_price_min
				,sale_price_max:sale_price_max==MAX_SALE_PRICE?null:sale_price_max
				,bachelor_units_min:bachelor_units_min==MIN_ROOM_UNITS?null:bachelor_units_min
				,bachelor_units_max:bachelor_units_max==MAX_ROOM_UNITS?null:bachelor_units_max
				,bedroom1_units_min:bedroom1_units_min==MIN_ROOM_UNITS?null:bedroom1_units_min
				,bedroom1_units_max:bedroom1_units_max==MAX_ROOM_UNITS?null:bedroom1_units_max
				,bedroom2_units_min:bedroom2_units_min==MIN_ROOM_UNITS?null:bedroom2_units_min
				,bedroom2_units_max:bedroom2_units_max==MAX_ROOM_UNITS?null:bedroom2_units_max
				,bedroom3_units_min:bedroom3_units_min==MIN_ROOM_UNITS?null:bedroom3_units_min
				,bedroom3_units_max:bedroom3_units_max==MAX_ROOM_UNITS?null:bedroom3_units_max
				,bachelor_rent_min:bachelor_rent_min==MIN_ROOM_RENT?null:bachelor_rent_min
				,bachelor_rent_max:bachelor_rent_max==MAX_ROOM_RENT?null:bachelor_rent_max
				,bedroom1_rent_min:bedroom1_rent_min==MIN_ROOM_RENT?null:bedroom1_rent_min
				,bedroom1_rent_max:bedroom1_rent_max==MAX_ROOM_RENT?null:bedroom1_rent_max
				,bedroom2_rent_min:bedroom2_rent_min==MIN_ROOM_RENT?null:bedroom2_rent_min
				,bedroom2_rent_max:bedroom2_rent_max==MAX_ROOM_RENT?null:bedroom2_rent_max
				,bedroom3_rent_min:bedroom3_rent_min==MIN_ROOM_RENT?null:bedroom3_rent_min
				,bedroom3_rent_max:bedroom3_rent_max==MAX_ROOM_RENT?null:bedroom3_rent_max
				,windows_installed_year_min:windows_installed_year_min==MIN_WINDOWS_INSTALLED_YEAR?null:windows_installed_year_min
				,windows_installed_year_max:windows_installed_year_max==MAX_WINDOWS_INSTALLED_YEAR?null:windows_installed_year_max
				,parking_spots_min:parking_spots_min==MIN_PARKING_SPOTS?null:parking_spots_min
				,parking_spots_max:parking_spots_max==MAX_PARKING_SPOTS?null:parking_spots_max
				,cable_internet_provider:$('#search_isp').val()
				,start_mortgage_due_date:$('#start_mortgage_due_date').val()
				,end_mortgage_due_date:$('#end_mortgage_due_date').val()			
				,sales_count_min:sales_count_min==MIN_SALES_COUNT?null:sales_count_min
				,sales_count_max:sales_count_max==MAX_SALES_COUNT?null:sales_count_max
				,checkbox_building_types : checkbox_building_types
				,checkbox_heating_types : checkbox_heating_types
				},function(url){
					$('#exportModal .modal-body').html('<a class="pull-right btn btn-success" href="'+url.url+'">Download</a>');
				
				
			});
		});
		
		$('#create_building').click(function(){
			if(isChangesPending()){
				if(!confirm(unsavedMessage)){
					if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop: $(".edit-item-section").offset().top
					    }, 500);
					}
					return;
				}
			}
			selectedBuilding = null;
			$('.edit-item-section').css('display','none');
			$('#clear_selected').css('display','none');
			$('#delete_building').css('display','none');
			$('#buildings tbody tr.selected').removeClass('selected');
			building.clear();
			building = new BuildingModel({building_id:'new',street_number_begin:'',street_number_end:'',street_name:'',city:'',province:'',postal_code:'',building_type:1
										,property_mgmt_company:null,prev_property_mgmt_company:null,heat_system_age:null,heat_system_type:null,boiler_installed_year:null,elevator_installed_year:null,windows_installed_year:null, parking_spots:null, cable_internet_provider:'',assessed_value:null
										,bachelor_price:null,bedroom1_price:null,bedroom2_price:null,bedroom3_price:null,bachelor_units:null,bedroom1_units:null,bedroom2_units:null,bedroom3_units:null,building_income:null
										,building_income_manual_mode:false,unit_price:null,unit_price_manual_mode:false,unit_quantity:null
										,last_boiler_upgrade_year:null,has_elevator:false, latitude:null, longitude:null, last_elevator_upgrade_year:null
										,sale_date:null,last_sale_price:null,images:'',mortgage_company:null,mortgage_due_date:null,cap_rate:null});
			$('#building-sales').css('display','none');
			buildingcontacts.reset();
			if(buildingcontactsView==null)
            {
            	buildingcontactsView = new BuildingContactsBackboneView({collection: buildingcontacts});
        	}
        	buildingnotes.reset();
        	//if(buildingnotesView==null)
        	//{
        	//	buildingnotesView = new BuildingNotesBackboneView({collection: buildingnotes});
        	//}         
        	
			
            if(buildingView==null){
            	buildingView = new BuildingBackboneView();
            	buildingView.render();
            }else{
            	buildingView.render();
            }
            setTimeout(function(){
				if($('body').width()>979){
					$('.main-content').animate({
				        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
				    }, 500);
				}else{
					$('html, body').animate({
				        scrollTop: $(".edit-item-section").offset().top
				    }, 500);
				}
            },100);
		
		});
		
		$('#delete_building').click(function(){
	            $('#myModalLabeldelete').html('Delete Building');
	            $('#deleteModal > div.modal-body').html('<p>Are you sure you want to delete this building<b>'+'</b>?</p>');
	            $('#deleteModal').modal('show');
		});
		
		$('#confirmdelete').click(function(){
			socket.get('/buildings/deletebuilding',{building_id:building.get('building_id')},function(response){
				
				
				$('.building-map-details').remove();
				setMapSize();
				markers.clearSelected();
				$('.edit-item-section').css('display','none');
				$('#delete_building').css('display','none');
				$('#clear_selected').css('display','none');
				selectedBuilding = null;
				datatable.api().ajax.reload(function(){},false); //delete building
				
				
						
				//contact = new ContactModel({contact_id:'new',contact_name:'',email:'',phone_number:''});
				//contactView.render();
				//companies.reset();
				//companyView.render();
			});
		});
		$('#confirmdeletesale').click(function(){
			socket.get('/buildings/deletesale/'+building.get('sale_id'),{building:building},function(deleteResponse){
		        	
        		leaveSalesExpanded = true;
        		building.fetch({id:parseInt(building.get('building_id'))});
        	});
		});
		
		$('.buildings-search-filters-toggle').click(toggleFilters);
		
		        	
		
		$('#cancel_building').click(function(){
			//$('.edit-item-section').css('display','none');
			//$('#delete_building').css('display','none');
			//$('#buildings tbody tr').removeClass('selected');
			if(isChangesPending()){
				if(!confirm(unsavedMessage)){
					if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop: $(".edit-item-section").offset().top
					    }, 500);
					}
					return;
				}
			}
			$('.building-map-details').remove();
			setMapSize();
			markers.clearSelected();
			$('.edit-item-section').css('display','none');
			$('#delete_building').css('display','none');
			$('#clear_selected').css('display','none');
			selectedBuilding = null;
		});
		

		var datatable 
		function initDataTable(){
			$('#buildings').css('display','');
			datatable = $('#buildings').dataTable({
					//"scrollY":  ($(window).width()<768)?false:400+ "px",
					//"scrollX": false,
        			//"scrollCollapse": true,
			        "processing": true,
			        "serverSide": true,
			        "iDisplayLength": 10,
			        //"lengthMenu":[[25,50,100],[25,50,100]], //,250,500,1000,"All"
			        "dom":"tipr",
			        "ajax": {
			        	"url":"/buildings/getajax",
		        		"data":function(d){
		        			d.length = $('#building_length_select').length==0?50:$('#building_length_select').val();
		        			
		        			if(filtersEnabled){
		        				d.search_keyword = $('#search_keyword').val();
								d.full_contact_search = $('#search_full_contact').val();
								d.full_address_search = $('#search_full_address').val();
			        			d.address_search = $("#search_address").val();
			        			d.owner_search = $("#search_owner").val();
			        			d.owner_company_search = $("#search_owner_company").val();
			        			d.seller_search = $("#search_seller").val();
			        			d.seller_company_search = $("#search_seller_company").val();
			        			d.agent_search = $("#search_agent").val();
			        			d.agent_company_search = $("#search_agent_company").val();
			        			d.mortgage_search = $('#search_mortgage').val();
			        			
			        			d.unitQuantityMin = unitsMin==0?null:unitsMin;
			        			d.unitQuantityMax = unitsMax==sliderLimit?null:unitsMax;
			        			d.unit_price_min = (parseInt(unit_price_min)==MIN_UNIT_PRICE)?null:unit_price_min;
			        			d.unit_price_max = unit_price_max==MAX_UNIT_PRICE?null:unit_price_max;
			        			
			        			d.saleDateRangeStart = $('#start_time').val()==''?null:typeof($('#start_time_gen').data('datetimepicker'))=='undefined'?null:$('#start_time_gen').data('datetimepicker').getLocalDate().toUTCString();	        			
		        				d.saleDateRangeEnd =$('#end_time').val()==''?null: typeof($('#end_time_gen').data('datetimepicker'))=='undefined'?null:$('#end_time_gen').data('datetimepicker').getLocalDate().toUTCString();
		
			        			d.has_elevator = ($('#search_elevator').val()=='null'||$('#search_elevator').val()==null)?null:($('#search_elevator').val()=='true'||$('#search_elevator').val()==true?true:false);
			        			d.elevator_installed_year_min = elevator_installed_year_min==MIN_ELEVATOR_INSTALLED_YEAR?null:elevator_installed_year_min;
			        			d.elevator_installed_year_max = elevator_installed_year_max==MAX_ELEVATOR_INSTALLED_YEAR?null:elevator_installed_year_max;
			        			d.elevator_upgrade_year_min = elevator_upgrade_year_min==MIN_ELEVATOR_UPGRADE_YEAR?null:elevator_upgrade_year_min;
			        			d.elevator_upgrade_year_max = elevator_upgrade_year_max==MAX_ELEVATOR_UPGRADE_YEAR?null:elevator_upgrade_year_max;
			        			
			        			d.cap_rate_min = cap_rate_min==MIN_CAP_RATE?null:cap_rate_min;
			        			d.cap_rate_max = cap_rate_max==MAX_CAP_RATE?null:cap_rate_max;
			        			d.search_property_mgmt_company = $('#search_property_mgmt_company').val();
			        			d.search_prev_property_mgmt_company = $('#search_prev_property_mgmt_company').val();
			        			d.heat_age_min = heat_age_min==MIN_HEAT_AGE?null:heat_age_min;
			        			d.heat_age_max = heat_age_max==MAX_HEAT_AGE?null:heat_age_max;
			        			
			        			d.boiler_installed_year_min = boiler_installed_year_min==MIN_BOILER_INSTALLED_YEAR?null:boiler_installed_year_min;
			        			d.boiler_installed_year_max = boiler_installed_year_max==MAX_BOILER_INSTALLED_YEAR?null:boiler_installed_year_max;
			        			
			        			d.boiler_upgrade_min = boiler_upgrade_min==MIN_BOILER_UPGRADE?null:boiler_upgrade_min;
			        			d.boiler_upgrade_max = boiler_upgrade_max==MAX_BOILER_UPGRADE?null:boiler_upgrade_max;
			        			
			        			
			        			d.building_income_min = building_income_min==MIN_BUILDING_INCOME?null:building_income_min;
			        			d.building_income_max = building_income_max==MAX_BUILDING_INCOME?null:building_income_max;
			        			
			        			d.sale_price_min = sale_price_min==MIN_SALE_PRICE?null:sale_price_min;
			        			d.sale_price_max = sale_price_max==MAX_SALE_PRICE?null:sale_price_max;
			        			
			        			d.bachelor_units_min = bachelor_units_min==MIN_ROOM_UNITS?null:bachelor_units_min;
			        			d.bachelor_units_max = bachelor_units_max==MAX_ROOM_UNITS?null:bachelor_units_max;
			        			
			        			d.bedroom1_units_min = bedroom1_units_min==MIN_ROOM_UNITS?null:bedroom1_units_min;
			        			d.bedroom1_units_max = bedroom1_units_max==MAX_ROOM_UNITS?null:bedroom1_units_max;
			        			
			        			d.bedroom2_units_min = bedroom2_units_min==MIN_ROOM_UNITS?null:bedroom2_units_min;
			        			d.bedroom2_units_max = bedroom2_units_max==MAX_ROOM_UNITS?null:bedroom2_units_max;
			        			
			        			d.bedroom3_units_min = bedroom3_units_min==MIN_ROOM_UNITS?null:bedroom3_units_min;
			        			d.bedroom3_units_max = bedroom3_units_max==MAX_ROOM_UNITS?null:bedroom3_units_max;
			        			
			        			d.bachelor_rent_min = bachelor_rent_min==MIN_ROOM_RENT?null:bachelor_rent_min;
			        			d.bachelor_rent_max = bachelor_rent_max==MAX_ROOM_RENT?null:bachelor_rent_max;
			        			
			        			d.bedroom1_rent_min = bedroom1_rent_min==MIN_ROOM_RENT?null:bedroom1_rent_min;
			        			d.bedroom1_rent_max = bedroom1_rent_max==MAX_ROOM_RENT?null:bedroom1_rent_max;
			        			
			        			d.bedroom2_rent_min = bedroom2_rent_min==MIN_ROOM_RENT?null:bedroom2_rent_min;
			        			d.bedroom2_rent_max = bedroom2_rent_max==MAX_ROOM_RENT?null:bedroom2_rent_max;
			        			
			        			d.bedroom3_rent_min = bedroom3_rent_min==MIN_ROOM_RENT?null:bedroom3_rent_min;
			        			d.bedroom3_rent_max = bedroom3_rent_max==MAX_ROOM_RENT?null:bedroom3_rent_max;
			        			
			        			d.windows_installed_year_min = windows_installed_year_min==MIN_WINDOWS_INSTALLED_YEAR?null:windows_installed_year_min;
			        			d.windows_installed_year_max = windows_installed_year_max==MAX_WINDOWS_INSTALLED_YEAR?null:windows_installed_year_max;
			        			
			        			d.parking_spots_min = parking_spots_min==MIN_PARKING_SPOTS?null:parking_spots_min;
			        			d.parking_spots_max = parking_spots_max==MAX_PARKING_SPOTS?null:parking_spots_max;
			        			
						
			        			d.cable_internet_provider = $('#search_isp').val();
			        			
			        			
			        			d.start_mortgage_due_date = $('#start_mortgage_due_date').val();
			        			d.end_mortgage_due_date = $('#end_mortgage_due_date').val();
			        			
			        			d.sales_count_min = sales_count_min==MIN_SALES_COUNT?null:sales_count_min;
			        			d.sales_count_max = sales_count_max==MAX_SALES_COUNT?null:sales_count_max;
			        			var checkbox_building_types = '';
			        			$('.building-type-checkboxes').each(function(){
			        				if($(this).is(':checked')){
			        					if(checkbox_building_types != ''){
			        						checkbox_building_types = checkbox_building_types + ',';
			        					}
			        					checkbox_building_types = checkbox_building_types + $(this).attr('building_type');
			        				}
			        			});	        			
			        			if(checkbox_building_types!=''){
			        				checkbox_building_types = checkbox_building_types;
			        			}
			        			d.checkbox_building_types = checkbox_building_types;
			        			
			        			var checkbox_heating_types = '';
			        			$('.heating-type-checkboxes').each(function(){
			        				if($(this).is(':checked')){
			        					if(checkbox_heating_types != ''){
			        						checkbox_heating_types = checkbox_heating_types + ',';
			        					}
			        					checkbox_heating_types = checkbox_heating_types + $(this).attr('heat_type');
			        				}
			        			});        			
			        			if(checkbox_heating_types!=''){
			        				checkbox_heating_types = checkbox_heating_types;
			        			}
			        			d.checkbox_heating_types = checkbox_heating_types;
		        			}
		        			if(selectedBuilding!=null){
		        				d.includeBuilding = selectedBuilding;
		        			}
		        			
		        			if(markers.constrainGPS)
		        			{
			        			d.boundsLatitudeMin = map.getBounds().getSouthWest().lat();
			        			d.boundsLatitudeMax = map.getBounds().getNorthEast().lat();
			        			d.boundsLongitudeMin = map.getBounds().getSouthWest().lng();
			        			d.boundsLongitudeMax = map.getBounds().getNorthEast().lng();
		        			}else{
			        			d.boundsLatitudeMin = null;
			        			d.boundsLatitudeMax = null;
			        			d.boundsLongitudeMin = null;
			        			d.boundsLongitudeMax = null;
		        			}
		        		},
		        		error: function(xhr, error, thrown){
		        			if(error.toString()=='parsererror'){
		        				location.reload();
		        			}else{
			        			$('.page-banner').after('<div class="alert alert-error" style="border-radius:0px;">'+
				                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
				                        ''+error.toString()+'</div>');
			                	if($('body').width()>979){
									$('.main-content').animate({
								        scrollTop: 0
								    }, 500);
								}else{
									$('html, body').animate({
								        scrollTop: 0
								    }, 500);
								}
		                	}
		        		}
		        	},
			        "aoColumns":[
			        	{"mData":"building_id","visible":false}
			         	,{"mData":function(data,b){ 
			         		if(data['latitude']==null){
			         			return '';
			         		}
				        	return '<i class="map-link icon icon-2x icon-globe"></i>'; }
				        },{"mData":function(data,b){ 
				        	return "<b>"+buildAddressString(data)+"</b>"; }
				        }
				        ,{"mData":"units"}
				        ,{"mData":"owner"}
				        ,{"mData":"owner_company"}
				        ,{"mData":function(data,b){
				        	if(data.sale_date==null)
				        		return '';
				        	return new Date(data.sale_date).toDateString();
				        }}
			        ],
			        "createdRow": function( row, data, dataIndex ) {
					    //if ( data[4] == "A" ) {
					    if(data.building_id==selectedBuilding&&typeof(data.showrow)=='undefined'){
					    	setTimeout(function(){
					    		$(row).parent().prepend($(row));
					    	},100);
					    }
					    else if(typeof(data.showrow)=='undefined'){
					    	$(row).addClass( 'hidden' );
					    }
					    //  
					    //}
					  },
			        "rowCallback": function( row, data, displayIndex ) {
			        
			        	if(data['latitude'] == null){
			        		$(row).css('background-color','#fcf8e3');
			        	}
			        	$(row).find('.map-link').click(function(){
			        		if($('body').width()>979){
								$('.main-content').animate({
							        scrollTop: 0
							    }, 500);
							}else{
								$('html, body').animate({
							        scrollTop: 0
							    }, 500);
							}
			        		$('#search_toggler').click();
			        	});
						$(row).attr('building_id',data['building_id']);
						$(row).click(function(){
							$('#delete_building').css('display','');
							markers.toggle(parseInt($(row).attr('building_id')),true);
							setTimeout(function(){
								if($('body').width()>979){
									$('.main-content').animate({
								        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
								    }, 500);
								}else{
									$('html, body').animate({
								        scrollTop: $('.edit-item-section').offset().top
								    }, 500);
								}
							},100);
	    					
	               		});
	               		//$(row).dblclick(function(){
							/*$('#delete_building').css('display','');
	    					building.fetch({id:parseInt($(row).attr('building_id'))});
	    					$(this).siblings().removeClass('selected');
        					$(this).removeClass('selected').addClass('selected');
							markers.toggle(parseInt($(row).attr('building_id')));
	    					*/
	               		//});
		               
			        }
		    });
		    //$('select[name=buildings_length]').css('margin-top','10px');
		    //$('#buildings_length label').css('margin-bottom','0px');
		    
		     $('#buildings').on('draw.dt',function(event,datatable){
		     	if(init_id){
					building.fetch({id:init_id});
		     		init_id = null;
		     		leaveSalesExpanded = true;
		     		triggerScroll = true;
		     	}
		     	
		     	if(selectedBuilding!=null){//!isNaN(parseInt(building.get('building_id')))){  //building.get('building_id')
		     		$('#buildings tbody tr[building_id='+selectedBuilding+']').addClass('selected');  //
		     	}
		     	var newmarkers = {};
		     	if(datatable.json.data instanceof Array)
		    	{
		    		for(var i=0; i< datatable.json.data.length; i++){
		    			newmarkers[datatable.json.data[i].building_id] = {latitude:datatable.json.data[i].latitude,longitude:datatable.json.data[i].longitude};
		    		}
		    	}
	    		markers.clearMarkers(newmarkers);
		    	if(datatable.json.data instanceof Array)
		    	{
		    		for(var i=0; i< datatable.json.data.length; i++){
		    			markers.addMarker(datatable.json.data[i]);
		    		}
		    	}
		    	markers.verifyBounds();
		    	if(selectedBuilding!=null){
		    		//setTimeout(function(){
		    			markers.toggle(selectedBuilding,false);
		    			//buildingSelected(selectedBuilding,false);
	    			//},10);
		    	}
	    	});
	    	
	    	//$('#buildings_length select').attr('id','building_length_select');
		    
		    $('#result_size_wrapper').append('<select name="buildings_length" aria-controls="buildings" class="" id="building_length_select"><option value="25">25</option><option value="50" selected="selected">50</option><option value="100">100</option></select>');
		    
		    //$('#building_length_select'));
		    //$('#buildings_length').remove();
		    //datatable.api().fnLengthChange($('#result_size').val());
		    
        
	        $('#buildings tbody').on('click', 'tr', function () {
	       // 	$(this).siblings().removeClass('selected');
	       // 	$(this).removeClass('selected').addClass('selected');
		    });
		    
		    $('#building_length_select').change(function(){
		    	if(isChangesPending()){
    				if(!confirm(unsavedMessage)){
						if($('body').width()>979){
							$('.main-content').animate({
						        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
						    }, 500);
						}else{
							$('html, body').animate({
						        scrollTop: $(".edit-item-section").offset().top
						    }, 500);
						}
						return;
					}
				}
		    	datatable.api().ajax.reload();
	    	});
    	}
    	/*
    	$('#buildings').on('draw.dt',function(event,datatable){
	    		//if($('#building_slideup_wrapper').html()!='')
	    		//{
	    		
	    		//}
	    		$('#building_slideup_wrapper').empty();
				setMapSize();
				setMapTableSize();
	    		markers.clearMarkers();
		    	if(datatable.json.data instanceof Array)
		    	{
		    		for(var i=0; i< datatable.json.data.length; i++){
		    			markers.addMarker(datatable.json.data[i]);
		    		}
		    	}
		    	markers.verifyBounds();
    	});*/
    	function FiltersToggleControl(filterDiv,map){
    		filterDiv.style.padding = '5px 3px 5px 0px';
    		var filterButton = document.createElement('div');
    		filterButton.className="btn filter-button btn-primary";
    		filterButton.innerHTML = 'Filters Enabled';
    		filterDiv.appendChild(filterButton);
    		
    		google.maps.event.addDomListener(filterButton, 'click', function() {
				toggleFilters();
			});
    	}
    	function toggleFilters(){
    		if(typeof(datatable)!='undefined'&&isChangesPending()){
				if(!confirm(unsavedMessage)){
					if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop: $(".edit-item-section").offset().top
					    }, 500);
					}
					return;
				}
			}
    		filtersEnabled = !filtersEnabled;
    		if(filtersEnabled){
    			$('.filter-button').addClass('btn-primary');
    			$('.filter-button').html('Filters Enabled');
    			$('.buildings-search-filters-toggle').addClass('btn-primary');
    			$('.buildings-search-filters-toggle').html('Filters Enabled');
    			$('.create-report-controls input[type=text]').removeAttr('disabled');
    			$('.create-report-controls input[type=checkbox]').removeAttr('disabled');
    			$('.create-report-controls select').removeAttr('disabled');
    			$('.create-report-controls .add-on').css('display','');
    			
    			for(key in sliders){
    				sliders[key].slider('enable');
    			}
    			
    		}else{
    			$('.filter-button').removeClass('btn-primary');
    			$('.filter-button').html('Filters Disabled');
    			$('.buildings-search-filters-toggle').removeClass('btn-primary');
    			$('.buildings-search-filters-toggle').html('Filters Disabled');
    			$('.create-report-controls input[type=text]').attr('disabled','disabled');
    			$('.create-report-controls input[type=checkbox]').attr('disabled','disabled');
    			$('.create-report-controls select').attr('disabled','disabled');
    			$('.create-report-controls .add-on').css('display','none');
    			for(key in sliders){
    				sliders[key].slider('disable');
    			}
    		}
    		if(typeof(datatable)!='undefined'){
    			datatable.api().ajax.reload();
    		}
    	}
    	
    	function HomeControl(controlDiv, map) {
		
			  // Set CSS styles for the DIV containing the control
			  // Setting padding to 5 px will offset the control
			  // from the edge of the map.
			  controlDiv.style.padding = '5px';
			
			  // Set CSS for the control border.
			  var controlUI = document.createElement('div');
			  controlUI.id = 'map_control';
			  controlUI.className="map-overlay-controls";
			  controlDiv.appendChild(controlUI);
			  
			  var titlecollapsewrapper = document.createElement('div');
			  titlecollapsewrapper.className = 'title-collapse-wrapper';
			  controlUI.appendChild(titlecollapsewrapper);
			  
			  var collapseicon = document.createElement('i');
			  collapseicon.className = 'icon-plus-sign';
			  titlecollapsewrapper.appendChild(collapseicon);
			  
			  var mapcontrolstitlediv = document.createElement('div');
			  mapcontrolstitlediv.className = 'map-overlay-title-label';
			  mapcontrolstitlediv.innerHTML = 'Map Controls';
			  titlecollapsewrapper.appendChild(mapcontrolstitlediv);
			  
			  
			  
			  var collapsecontent = document.createElement('div');
			  collapsecontent.className = 'map-collapse-content';
			  collapsecontent.style.display='none';
			  controlUI.appendChild(collapsecontent);
			  
			  // Set CSS for the control interior.
			  var constrainLabel = document.createElement('label');
			  constrainLabel.htmlFor  = 'constrain_gps';
			  constrainLabel.className= 'map-overlay-label';
			  constrainLabel.innerHTML = 'Constrain result to map bounds';
			  
			  // Set CSS for the control interior.
			  var constrainGPSCheckbox = document.createElement('input');
			  constrainGPSCheckbox.id = 'constrain_gps'
			  constrainGPSCheckbox.type = 'checkbox';
			  constrainGPSCheckbox.className = 'map-overlay-checkbox';
			  var condiv = document.createElement('div');
			  condiv.style.display = 'none';
			  condiv.className = 'map-control-row-wrapper';
			  condiv.appendChild(constrainGPSCheckbox);
			  condiv.appendChild(constrainLabel);
			  collapsecontent.appendChild(condiv);
			  
			  
			  
			  // Set CSS for the control interior.
			  var layerGo = document.createElement('label');
			  layerGo.htmlFor  = 'layer_go';
			  layerGo.className= 'map-overlay-label';
			  layerGo.innerHTML = 'Go Transit';
			  // Set CSS for the control interior.
			  var inputGo = document.createElement('input');
			  inputGo.id = 'layer_go'
			  inputGo.type = 'checkbox';
			  inputGo.className = 'map-overlay-checkbox';
			  
			  var godiv = document.createElement('div');
			  godiv.className = 'map-control-row-wrapper';
			  godiv.appendChild(inputGo);
			  godiv.appendChild(layerGo);
			  collapsecontent.appendChild(godiv);
			  
			  
			  
			  // Set CSS for the control interior.
			  var layerTTC = document.createElement('label');
			  layerTTC.htmlFor  = 'layer_ttc';
			  layerTTC.className= 'map-overlay-label';
			  layerTTC.innerHTML = 'TTC';
			  
			  // Set CSS for the control interior.
			  var inputTTC = document.createElement('input');
			  inputTTC.id = 'layer_ttc'
			  inputTTC.type = 'checkbox';
			  inputTTC.className = 'map-overlay-checkbox';
			  
			  var ttcdiv = document.createElement('div');
			  ttcdiv.className = 'map-control-row-wrapper';
			  ttcdiv.appendChild(inputTTC);
			  ttcdiv.appendChild(layerTTC);
			  collapsecontent.appendChild(ttcdiv);
			  
			  
			   // Set CSS for the control interior.
			  var layerViva = document.createElement('label');
			  layerViva.htmlFor  = 'layer_viva';
			  layerViva.className= 'map-overlay-label';
			  layerViva.innerHTML = 'VIVA';
			  
			  // Set CSS for the control interior.
			  var inputViva = document.createElement('input');
			  inputViva.id = 'layer_viva'
			  inputViva.type = 'checkbox';
			  inputViva.className = 'map-overlay-checkbox';
			  
			  var vivadiv = document.createElement('div');
			  vivadiv.className = 'map-control-row-wrapper';
			  vivadiv.appendChild(inputViva);
			  vivadiv.appendChild(layerViva);
			  collapsecontent.appendChild(vivadiv);
			  
			  
			  var resultSizeLabel = document.createElement('label');
			  resultSizeLabel.htmlFor  = 'building_length_select';
			  resultSizeLabel.className= 'map-overlay-label map-overlay-results-label';
			  resultSizeLabel.innerHTML = 'Result Size:';
			  
			  var resultsizediv = document.createElement('div');
			  resultsizediv.className = 'map-control-row-wrapper';
			  resultsizediv.id = 'result_size_wrapper';
			  resultsizediv.appendChild(resultSizeLabel);
			  collapsecontent.appendChild(resultsizediv);
			  			
			  
			google.maps.event.addDomListener(inputGo, 'change', function() {
				if(layers.go.getMap()==null){
					layers.go.setMap(map);
				}else{
					layers.go.setMap(null);
				}
			});
			google.maps.event.addDomListener(inputTTC, 'change', function() {
				if(layers.ttc.getMap()==null){
					layers.ttc.setMap(map);
				}else{
					layers.ttc.setMap(null);
				}
			});
			google.maps.event.addDomListener(inputViva, 'change', function() {
				if(layers.viva.getMap()==null){
					layers.viva.setMap(map);
				}else{
					layers.viva.setMap(null);
				}
			});
			google.maps.event.addDomListener(constrainGPSCheckbox, 'click', function() {
				if(isChangesPending()){
    				if(!confirm(unsavedMessage)){
						if($('body').width()>979){
							$('.main-content').animate({
						        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
						    }, 500);
						}else{
							$('html, body').animate({
						        scrollTop: $(".edit-item-section").offset().top
						    }, 500);
						}
						return;
					}
				}
			
			
			
				markers.constrainGPS = $('#constrain_gps').is(':checked');
				if(markers.constrainGPS&&!markers.checkMarkersBounded()) //markers aren't bounded correct.
				{
					datatable.api().ajax.reload(); //Toggled constrainGPS
				}else if(!markers.constrainGPS){  // this is the case where maybe you've typed in new search terms.
					datatable.api().ajax.reload();
				}
			});
		}
		
		function changedSearchParameter(){
			if(isChangesPending()){
				if(!confirm(unsavedMessage)){
					if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop: $(".edit-item-section").offset().top
					    }, 500);
					}
					return;
				}
				passThroughIsChangesPending = true;
			}
			if(markers.constrainGPS){
				markers.constrainGPS = false;
				$('#constrain_gps').prop('checked',false);
			}
			if(typeof(this.searchTimeout)!='undefined'){
				clearTimeout(this.searchTimeout);
			} 
			this.searchTimeout = setTimeout(function(){
				datatable.api().ajax.reload(); // Searching
			},200);
		}
		
		$('#search_keyword').keydown(function(){
			changedSearchParameter();
		});

		$('#search_full_contact').keydown(function(){
			changedSearchParameter();
		});
		$('#search_full_address').keydown(function(){
			changedSearchParameter();
		});
		
		$('#search_address').keydown(function(){
			changedSearchParameter();
		});
		$('#search_owner').keydown(function(){
			changedSearchParameter();
		});
		$('#search_owner_company').keydown(function(){
			changedSearchParameter();
		});
		$('#search_seller').keydown(function(){
			changedSearchParameter();
		});
		$('#search_seller_company').keydown(function(){
			changedSearchParameter();
		});
		$('#search_agent').keydown(function(){
			changedSearchParameter();
		});
		$('#search_agent_company').keydown(function(){
			changedSearchParameter();
		});
		$('#search_mortgage').keydown(function(){
			changedSearchParameter();
		});
		
		$('.building-type-checkboxes').click(function(){
			changedSearchParameter();
		
		});
		$('.heating-type-checkboxes').click(function(){
			changedSearchParameter();
		
		});
		$('#search_elevator').change(function(){
			changedSearchParameter();
		});
		$('#search_property_mgmt_company').keydown(function(){
			changedSearchParameter();
		});
		$('#search_prev_property_mgmt_company').keydown(function(){
			changedSearchParameter();
		});
		$('#search_isp').keydown(function(){
			changedSearchParameter();
		});
		
		function initSliders(){
		
		
		
			$('.rent-slider').attr('data-slider-min',MIN_ROOM_RENT); // corrects limit
			$('.rent-slider').attr('data-slider-max',MAX_ROOM_RENT); // corrects limit
			$('.rent-slider').attr('data-slider-step',STEP_ROOM_RENT); // corrects limit
			$('.rent-slider').attr('data-slider-value','['+MIN_ROOM_RENT+','+MAX_ROOM_RENT+']');
			$('.rent-slider').each(function(){
				sliders.push($(this).slider({tooltip: 'disabled'}));
			});
			
			$('.units-slider').attr('data-slider-min',MIN_ROOM_UNITS); // corrects limit
			$('.units-slider').attr('data-slider-max',MAX_ROOM_UNITS); // corrects limit
			$('.units-slider').attr('data-slider-step',STEP_ROOM_UNITS); // corrects limit
			$('.units-slider').attr('data-slider-value','['+MIN_ROOM_UNITS+','+MAX_ROOM_UNITS+']');
			
			$('.units-slider').each(function(){
				sliders.push($(this).slider({tooltip: 'disabled'}));
			});
			
			$('#bachelor_rent_min').html(MIN_ROOM_RENT);
			$('#bachelor_rent_max').html(MAX_ROOM_RENT+'+');
			$('#bachelor_rent_slider').on('slide',function(slideEvt){
				bachelor_rent_min = slideEvt.value[0];
				bachelor_rent_max = slideEvt.value[1];
				$('#bachelor_rent_min').html(bachelor_rent_min);
				
				if(bachelor_rent_max==MAX_ROOM_RENT)
				{
					$('#bachelor_rent_max').html(bachelor_rent_max+'+');
				}else{
					$('#bachelor_rent_max').html(bachelor_rent_max);
				}
			});
			$('#bachelor_rent_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#bedroom1_rent_min').html(MIN_ROOM_RENT);
			$('#bedroom1_rent_max').html(MAX_ROOM_RENT+'+');
			$('#bedroom1_rent_slider').on('slide',function(slideEvt){
				bedroom1_rent_min = slideEvt.value[0];
				bedroom1_rent_max = slideEvt.value[1];
				$('#bedroom1_rent_min').html(bedroom1_rent_min);
				
				if(bedroom1_rent_max==MAX_ROOM_RENT)
				{
					$('#bedroom1_rent_max').html(bedroom1_rent_max+'+');
				}else{
					$('#bedroom1_rent_max').html(bedroom1_rent_max);
				}
			});
			$('#bedroom1_rent_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#bedroom2_rent_min').html(MIN_ROOM_RENT);
			$('#bedroom2_rent_max').html(MAX_ROOM_RENT+'+');
			$('#bedroom2_rent_slider').on('slide',function(slideEvt){
				bedroom2_rent_min = slideEvt.value[0];
				bedroom2_rent_max = slideEvt.value[1];
				$('#bedroom2_rent_min').html(bedroom2_rent_min);
				
				if(bedroom2_rent_max==MAX_ROOM_RENT)
				{
					$('#bedroom2_rent_max').html(bedroom2_rent_max+'+');
				}else{
					$('#bedroom2_rent_max').html(bedroom2_rent_max);
				}
			});
			$('#bedroom2_rent_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#bedroom3_rent_min').html(MIN_ROOM_RENT);
			$('#bedroom3_rent_max').html(MAX_ROOM_RENT+'+');
			$('#bedroom3_rent_slider').on('slide',function(slideEvt){
				bedroom3_rent_min = slideEvt.value[0];
				bedroom3_rent_max = slideEvt.value[1];
				$('#bedroom3_rent_min').html(bedroom3_rent_min);
				
				if(bedroom3_rent_max==MAX_ROOM_RENT)
				{
					$('#bedroom3_rent_max').html(bedroom3_rent_max+'+');
				}else{
					$('#bedroom3_rent_max').html(bedroom3_rent_max);
				}
			});
			$('#bedroom3_rent_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			
			// Units
			$('#bachelor_units_min').html(MIN_ROOM_RENT);
			$('#bachelor_units_max').html(MAX_ROOM_UNITS+'+');
			$('#bachelor_units_slider').on('slide',function(slideEvt){
				bachelor_units_min = slideEvt.value[0];
				bachelor_units_max = slideEvt.value[1];
				$('#bachelor_units_min').html(bachelor_units_min);
				
				if(bachelor_units_max==MAX_ROOM_UNITS)
				{
					$('#bachelor_units_max').html(bachelor_units_max+'+');
				}else{
					$('#bachelor_units_max').html(bachelor_units_max);
				}
			});
			$('#bachelor_units_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#bedroom1_units_min').html(MIN_ROOM_UNITS);
			$('#bedroom1_units_max').html(MAX_ROOM_UNITS+'+');
			$('#bedroom1_units_slider').on('slide',function(slideEvt){
				bedroom1_units_min = slideEvt.value[0];
				bedroom1_units_max = slideEvt.value[1];
				$('#bedroom1_units_min').html(bedroom1_units_min);
				
				if(bedroom1_units_max==MAX_ROOM_UNITS)
				{
					$('#bedroom1_units_max').html(bedroom1_units_max+'+');
				}else{
					$('#bedroom1_units_max').html(bedroom1_units_max);
				}
			});
			$('#bedroom1_units_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#bedroom2_units_min').html(MIN_ROOM_UNITS);
			$('#bedroom2_units_max').html(MAX_ROOM_UNITS+'+');
			$('#bedroom2_units_slider').on('slide',function(slideEvt){
				bedroom2_units_min = slideEvt.value[0];
				bedroom2_units_max = slideEvt.value[1];
				$('#bedroom2_units_min').html(bedroom2_units_min);
				
				if(bedroom2_units_max==MAX_ROOM_UNITS)
				{
					$('#bedroom2_units_max').html(bedroom2_units_max+'+');
				}else{
					$('#bedroom2_units_max').html(bedroom2_units_max);
				}
			});
			$('#bedroom2_units_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#bedroom3_units_min').html(MIN_ROOM_UNITS);
			$('#bedroom3_units_max').html(MAX_ROOM_UNITS+'+');
			$('#bedroom3_units_slider').on('slide',function(slideEvt){
				bedroom3_units_min = slideEvt.value[0];
				bedroom3_units_max = slideEvt.value[1];
				$('#bedroom3_units_min').html(bedroom3_units_min);
				
				if(bedroom3_units_max==MAX_ROOM_UNITS)
				{
					$('#bedroom3_units_max').html(bedroom3_units_max+'+');
				}else{
					$('#bedroom3_units_max').html(bedroom3_units_max);
				}
			});
			
			$('#bedroom3_units_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			
			$('#building_income_slider').attr('data-slider-min',MIN_BUILDING_INCOME); // corrects limit
			$('#building_income_slider').attr('data-slider-max',MAX_BUILDING_INCOME); // corrects limit
			$('#building_income_slider').attr('data-slider-step',STEP_BUILDING_INCOME); // corrects limit
			$('#building_income_min').html(MIN_BUILDING_INCOME);
			$('#building_income_max').html(MAX_BUILDING_INCOME+'+');
			$('#building_income_slider').attr('data-slider-value','['+MIN_BUILDING_INCOME+','+MAX_BUILDING_INCOME+']');
			sliders.push($('#building_income_slider').slider({tooltip: 'disabled'}));
			$('#building_income_slider').on('slide',function(slideEvt){
				building_income_min = slideEvt.value[0];
				building_income_max = slideEvt.value[1];
				$('#building_income_min').html(building_income_min);
				
				if(building_income_max==MAX_BUILDING_INCOME)
				{
					$('#building_income_max').html(building_income_max+'+');
				}else{
					$('#building_income_max').html(building_income_max);
				}
			});
			$('#building_income_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			
			$('#elevator_installed_year_slider').attr('data-slider-min',MIN_ELEVATOR_INSTALLED_YEAR); // corrects limit
			$('#elevator_installed_year_slider').attr('data-slider-max',MAX_ELEVATOR_INSTALLED_YEAR); // corrects limit
			$('#elevator_installed_year_slider').attr('data-slider-step',STEP_ELEVATOR_INSTALLED_YEAR); // corrects limit
			$('#elevator_installed_year_min').html(MIN_ELEVATOR_INSTALLED_YEAR);
			$('#elevator_installed_year_max').html(MAX_ELEVATOR_INSTALLED_YEAR+'+');
			$('#elevator_installed_year_slider').attr('data-slider-value','['+MIN_ELEVATOR_INSTALLED_YEAR+','+MAX_ELEVATOR_INSTALLED_YEAR+']');
			sliders.push($('#elevator_installed_year_slider').slider({tooltip: 'disabled'}));
			$('#elevator_installed_year_slider').on('slide',function(slideEvt){
				elevator_installed_year_min = slideEvt.value[0];
				elevator_installed_year_max = slideEvt.value[1];
				$('#elevator_installed_year_min').html(elevator_installed_year_min);
				
				if(elevator_installed_year_max==MAX_ELEVATOR_INSTALLED_YEAR)
				{
					$('#elevator_installed_year_max').html(elevator_installed_year_max+'+');
				}else{
					$('#elevator_installed_year_max').html(elevator_installed_year_max);
				}
			});
			$('#elevator_installed_year_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#unit_price_slider').attr('data-slider-min',MIN_UNIT_PRICE); // corrects limit
			$('#unit_price_slider').attr('data-slider-max',MAX_UNIT_PRICE); // corrects limit
			$('#unit_price_slider').attr('data-slider-step',STEP_UNIT_PRICE); // corrects limit
			$('#unit_price_min').html(MIN_UNIT_PRICE==0?0:(MIN_UNIT_PRICE+'-'));
			$('#unit_price_max').html(MAX_UNIT_PRICE+'+');
			$('#unit_price_slider').attr('data-slider-value','['+MIN_UNIT_PRICE+','+MAX_UNIT_PRICE+']');
			sliders.push($('#unit_price_slider').slider({tooltip: 'disabled'}));
			$('#unit_price_slider').on('slide',function(slideEvt){
				unit_price_min = slideEvt.value[0];
				unit_price_max = slideEvt.value[1];
				if(unit_price_min==MIN_UNIT_PRICE)
				{
					if(MIN_UNIT_PRICE!=0){
						$('#unit_price_min').html(unit_price_min+'-');
					}else{
						$('#unit_price_min').html(unit_price_min);
					}
				}else{
					$('#unit_price_min').html(unit_price_min);
				}
				
				
				if(unit_price_max==MAX_UNIT_PRICE)
				{
					$('#unit_price_max').html(unit_price_max+'+');
				}else{
					$('#unit_price_max').html(unit_price_max);
				}
			});
			$('#unit_price_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			
			$('#elevator_upgrade_year_slider').attr('data-slider-min',MIN_ELEVATOR_UPGRADE_YEAR); // corrects limit
			$('#elevator_upgrade_year_slider').attr('data-slider-max',MAX_ELEVATOR_UPGRADE_YEAR); // corrects limit
			$('#elevator_upgrade_year_slider').attr('data-slider-step',STEP_ELEVATOR_UPGRADE_YEAR); // corrects limit
			$('#elevator_upgrade_year_min').html(MIN_ELEVATOR_UPGRADE_YEAR);
			$('#elevator_upgrade_year_max').html(MAX_ELEVATOR_UPGRADE_YEAR+'+');
			$('#elevator_upgrade_year_slider').attr('data-slider-value','['+MIN_ELEVATOR_UPGRADE_YEAR+','+MAX_ELEVATOR_UPGRADE_YEAR+']');
			sliders.push($('#elevator_upgrade_year_slider').slider({tooltip: 'disabled'}));
			$('#elevator_upgrade_year_slider').on('slide',function(slideEvt){
				elevator_upgrade_year_min = slideEvt.value[0];
				elevator_upgrade_year_max = slideEvt.value[1];
				$('#elevator_upgrade_year_min').html(elevator_upgrade_year_min);
				
				if(elevator_upgrade_year_max==MAX_ELEVATOR_UPGRADE_YEAR)
				{
					$('#elevator_upgrade_year_max').html(elevator_upgrade_year_max+'+');
				}else{
					$('#elevator_upgrade_year_max').html(elevator_upgrade_year_max);
				}
			});
			$('#elevator_upgrade_year_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			
			$('#cap_rate_slider').attr('data-slider-min',MIN_CAP_RATE); // corrects limit
			$('#cap_rate_slider').attr('data-slider-max',MAX_CAP_RATE); // corrects limit
			$('#cap_rate_slider').attr('data-slider-step',STEP_CAP_RATE); // corrects limit
			$('#cap_rate_min').html(MIN_CAP_RATE);
			$('#cap_rate_max').html(MAX_CAP_RATE+'+');
			$('#cap_rate_slider').attr('data-slider-value','['+MIN_CAP_RATE+','+MAX_CAP_RATE+']');
			sliders.push($('#cap_rate_slider').slider({tooltip: 'disabled'}));
			$('#cap_rate_slider').on('slide',function(slideEvt){
				cap_rate_min = slideEvt.value[0];
				cap_rate_max = slideEvt.value[1];
				$('#cap_rate_min').html(cap_rate_min);
				
				if(cap_rate_max==MAX_CAP_RATE)
				{
					$('#cap_rate_max').html(cap_rate_max+'+');
				}else{
					$('#cap_rate_max').html(cap_rate_max);
				}
			});
			$('#cap_rate_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			
			$('#sale_price_slider').attr('data-slider-min',MIN_SALE_PRICE); // corrects limit
			$('#sale_price_slider').attr('data-slider-max',MAX_SALE_PRICE); // corrects limit
			$('#sale_price_slider').attr('data-slider-step',STEP_SALE_PRICE); // corrects limit
			$('#sale_price_min').html(MIN_SALE_PRICE);
			$('#sale_price_max').html(MAX_SALE_PRICE+'+');
			$('#sale_price_slider').attr('data-slider-value','['+MIN_SALE_PRICE+','+MAX_SALE_PRICE+']');
			sliders.push($('#sale_price_slider').slider({tooltip: 'disabled'}));
			$('#sale_price_slider').on('slide',function(slideEvt){
				sale_price_min = slideEvt.value[0];
				sale_price_max = slideEvt.value[1];
				$('#sale_price_min').html(sale_price_min);
				
				if(sale_price_max==MAX_SALE_PRICE)
				{
					$('#sale_price_max').html(sale_price_max+'+');
				}else{
					$('#sale_price_max').html(sale_price_max);
				}
			});
			$('#sale_price_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
		
		
			
			
			$('#boiler_installed_year_slider').attr('data-slider-min',MIN_BOILER_INSTALLED_YEAR); // corrects limit
			$('#boiler_installed_year_slider').attr('data-slider-max',MAX_BOILER_INSTALLED_YEAR); // corrects limit
			$('#boiler_installed_year_slider').attr('data-slider-step',STEP_BOILER_INSTALLED_YEAR); // corrects limit
			$('#boiler_installed_year_min').html(MIN_BOILER_INSTALLED_YEAR);
			$('#boiler_installed_year_max').html(MAX_BOILER_INSTALLED_YEAR+'+');
			$('#boiler_installed_year_slider').attr('data-slider-value','['+MIN_BOILER_INSTALLED_YEAR+','+MAX_BOILER_INSTALLED_YEAR+']');
			sliders.push($('#boiler_installed_year_slider').slider({tooltip: 'disabled'}));
			$('#boiler_installed_year_slider').on('slide',function(slideEvt){
				boiler_installed_year_min = slideEvt.value[0];
				boiler_installed_year_max = slideEvt.value[1];
				$('#boiler_installed_year_min').html(boiler_installed_year_min);
				
				if(boiler_installed_year_max==MAX_BOILER_INSTALLED_YEAR)
				{
					$('#boiler_installed_year_max').html(boiler_installed_year_max+'+');
				}else{
					$('#boiler_installed_year_max').html(boiler_installed_year_max);
				}
			});
			$('#boiler_installed_year_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#boiler_upgrade_slider').attr('data-slider-min',MIN_BOILER_UPGRADE); // corrects limit
			$('#boiler_upgrade_slider').attr('data-slider-max',MAX_BOILER_UPGRADE); // corrects limit
			$('#boiler_upgrade_slider').attr('data-slider-step',STEP_BOILER_UPGRADE); // corrects limit
			$('#boiler_upgrade_min').html(MIN_BOILER_UPGRADE);
			$('#boiler_upgrade_max').html(MAX_BOILER_UPGRADE+'+');
			$('#boiler_upgrade_slider').attr('data-slider-value','['+MIN_BOILER_UPGRADE+','+MAX_BOILER_UPGRADE+']');
			sliders.push($('#boiler_upgrade_slider').slider({tooltip: 'disabled'}));
			$('#boiler_upgrade_slider').on('slide',function(slideEvt){
				boiler_upgrade_min = slideEvt.value[0];
				boiler_upgrade_max = slideEvt.value[1];
				$('#boiler_upgrade_min').html(boiler_upgrade_min);
				
				if(boiler_upgrade_max==MAX_BOILER_UPGRADE)
				{
					$('#boiler_upgrade_max').html(boiler_upgrade_max+'+');
				}else{
					$('#boiler_upgrade_max').html(boiler_upgrade_max);
				}
			});
			$('#boiler_upgrade_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
		
			$('#heat_age_slider').attr('data-slider-min',MIN_HEAT_AGE); // corrects limit
			$('#heat_age_slider').attr('data-slider-max',MAX_HEAT_AGE); // corrects limit
			$('#heat_age_slider').attr('data-slider-step',STEP_HEAT_AGE); // corrects limit
			$('#heat_age_min').html(MIN_HEAT_AGE);
			$('#heat_age_max').html(MAX_HEAT_AGE+'+');
			$('#heat_age_slider').attr('data-slider-value','['+MIN_HEAT_AGE+','+MAX_HEAT_AGE+']');
			sliders.push($('#heat_age_slider').slider({tooltip: 'disabled'}));
			$('#heat_age_slider').on('slide',function(slideEvt){
				heat_age_min = slideEvt.value[0];
				heat_age_max = slideEvt.value[1];
				$('#heat_age_min').html(heat_age_min);
				
				if(heat_age_max==MAX_HEAT_AGE)
				{
					$('#heat_age_max').html(heat_age_max+'+');
				}else{
					$('#heat_age_max').html(heat_age_max);
				}
			});
			$('#heat_age_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
		
			$('#sales_count_slider').attr('data-slider-min',MIN_SALES_COUNT); // corrects limit
			$('#sales_count_slider').attr('data-slider-max',MAX_SALES_COUNT); // corrects limit
			$('#sales_count_slider').attr('data-slider-step',STEP_SALES_COUNT); // corrects limit
			$('#sales_count_min').html(MIN_SALES_COUNT);
			$('#sales_count_max').html(MAX_SALES_COUNT+'+');
			$('#sales_count_slider').attr('data-slider-value','['+MIN_SALES_COUNT+','+MAX_SALES_COUNT+']');
			sliders.push($('#sales_count_slider').slider({tooltip: 'disabled'}));
			$('#sales_count_slider').on('slide',function(slideEvt){
				sales_count_min = slideEvt.value[0];
				sales_count_max = slideEvt.value[1]
				$('#sales_count_min').html(sales_count_min);
				
				if(sales_count_max==MAX_SALES_COUNT)
				{
					$('#sales_count_max').html(sales_count_max+'+');
				}else{
					$('#sales_count_max').html(sales_count_max);
				}
			});
			$('#sales_count_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			$('#windows_installed_year_slider').attr('data-slider-min',MIN_WINDOWS_INSTALLED_YEAR); // corrects limit
			$('#windows_installed_year_slider').attr('data-slider-max',MAX_WINDOWS_INSTALLED_YEAR); // corrects limit
			$('#windows_installed_year_slider').attr('data-slider-step',STEP_WINDOWS_INSTALLED_YEAR); // corrects limit
			$('#windows_installed_year_min').html(MIN_WINDOWS_INSTALLED_YEAR);
			$('#windows_installed_year_max').html(MAX_WINDOWS_INSTALLED_YEAR+'+');
			$('#windows_installed_year_slider').attr('data-slider-value','['+MIN_WINDOWS_INSTALLED_YEAR+','+MAX_WINDOWS_INSTALLED_YEAR+']');
			sliders.push($('#windows_installed_year_slider').slider({tooltip: 'disabled'}));
			$('#windows_installed_year_slider').on('slide',function(slideEvt){
				windows_installed_year_min = slideEvt.value[0];
				windows_installed_year_max = slideEvt.value[1]
				$('#windows_installed_year_min').html(windows_installed_year_min);
				
				if(windows_installed_year_max==MAX_WINDOWS_INSTALLED_YEAR)
				{
					$('#windows_installed_year_max').html(windows_installed_year_max+'+');
				}else{
					$('#windows_installed_year_max').html(windows_installed_year_max);
				}
			});
			$('#windows_installed_year_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
			
			$('#parking_spots_slider').attr('data-slider-min',MIN_PARKING_SPOTS); // corrects limit
			$('#parking_spots_slider').attr('data-slider-max',MAX_PARKING_SPOTS); // corrects limit
			$('#parking_spots_slider').attr('data-slider-step',STEP_PARKING_SPOTS); // corrects limit
			$('#parking_spots_min').html(MIN_PARKING_SPOTS);
			$('#parking_spots_max').html(MAX_PARKING_SPOTS+'+');
			$('#parking_spots_slider').attr('data-slider-value','['+MIN_PARKING_SPOTS+','+MAX_PARKING_SPOTS+']');
			sliders.push($('#parking_spots_slider').slider({tooltip: 'disabled'}));
			$('#parking_spots_slider').on('slide',function(slideEvt){
				parking_spots_min = slideEvt.value[0];
				parking_spots_max = slideEvt.value[1]
				$('#parking_spots_min').html(parking_spots_min);
				
				if(parking_spots_max==MAX_PARKING_SPOTS)
				{
					$('#parking_spots_max').html(parking_spots_max+'+');
				}else{
					$('#parking_spots_max').html(parking_spots_max);
				}
			});
			$('#parking_spots_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
			
		
			$('#units_slider').attr('data-slider-max',sliderLimit); // corrects limit
			sliders.push($('#units_slider').slider({tooltip: 'disabled'}));
			$('#units_slider').on('slide',function(slideEvt){
				unitsMin = slideEvt.value[0];
				unitsMax = slideEvt.value[1]
				$('#units_min').html(unitsMin);
				
				if(unitsMax==sliderLimit)
				{
					$('#units_max').html(unitsMax+'+');
				}else{
					$('#units_max').html(unitsMax);
				}
			});
			$('#units_slider').on('slideStop',function(slideEvt){
				changedSearchParameter();
			});
		}
		initSliders();
    	
        $(window).resize(function(){
        	/*if(typeof(markers)!='undefined'&&$('#building_slideup_wrapper').html()!=''){
				markers.blockIdleEvent = true;
				google.maps.event.trigger(map, "resize");
			}*/
        	setMapSize();
			
			//snapClose();
			
        });
        function setMapSize(){
        	//if(typeof(markers)!='undefined'){
			//	markers.blockIdleEvent = true;
			//	google.maps.event.trigger(map, "resize");
			//	markers.blockIdleEvent = false;
			//}
			if($('body').width()>979){
				$('#map_pane_wrapper').css('width',$('.main-content').width()+'px');
    		}else{
    			$('#map_pane_wrapper').css('width','');
    		}
    		
    		if($('#map_pane_wrapper').height()!=50){
				$('#map_pane_wrapper').css('height',$(window).height()-$('.navbar-fixed-top').height()+'px');
			}
    		
			var mappaneheight = $(window).height()-$('.navbar-fixed-top').height();
			$('#map_pane').height(mappaneheight);
			var mapheightval = $(window).height()-$('#building_slideup_wrapper').height()-$('.navbar-fixed-top').height()-50;
			$('#map_wrapper').height(mapheightval);
			
        }
        

	    
	    
        $("#start_time_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd',
            pick12HourFormat: false,
            pickTime: false
        }).data('datetimepicker');
		$("#start_time_gen" ).data('datetimepicker').$element.on('changeDate',function(e,y){
			if(e.localDate!=null){
				$(e.currentTarget).data('datetimepicker').setLocalDate(new Date(
					e.localDate.getFullYear()
					,e.localDate.getMonth()
					,e.localDate.getDate()
					,0
					,0
					,0));
			}
			changedSearchParameter();
		});
		$('.bootstrap-datetimepicker-widget:not([picker_name])').attr('picker_name','start_time_gen');

        $("#end_time_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd',
            pick12HourFormat: false,
            pickTime: false
        }).data('datetimepicker');
		$("#end_time_gen" ).data('datetimepicker').$element.on('changeDate',function(e,y){
			if(e.localDate!=null){
				$(e.currentTarget).data('datetimepicker').setLocalDate(new Date(
					e.localDate.getFullYear()
					,e.localDate.getMonth()
					,e.localDate.getDate()
					,23
					,59
					,59));
			}
			changedSearchParameter();
		});
		$('.bootstrap-datetimepicker-widget:not([picker_name])').attr('picker_name','end_time_gen');
		
		$("#start_mortgage_due_date_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd',
            pick12HourFormat: false,
            pickSeconds: false
        }).data('datetimepicker');
		$("#start_mortgage_due_date_gen" ).data('datetimepicker').$element.on('changeDate',function(e,y){
			if(e.localDate!=null){
				$(e.currentTarget).data('datetimepicker').setLocalDate(new Date(
					e.localDate.getFullYear()
					,e.localDate.getMonth()
					,e.localDate.getDate()
					,0
					,0
					,0));
			}
			changedSearchParameter();
		});
		$('.bootstrap-datetimepicker-widget:not([picker_name])').attr('picker_name','start_time_gen');
		
        $("#end_mortgage_due_date_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd',
            pick12HourFormat: false,
            pickSeconds: false
        }).data('datetimepicker');
        $("#end_mortgage_due_date_gen" ).data('datetimepicker').setDate(null);
		$("#end_mortgage_due_date_gen" ).data('datetimepicker').$element.on('changeDate',function(e,y){
				if(e.localDate!=null){
					$(e.currentTarget).data('datetimepicker').setLocalDate(new Date(
						e.localDate.getFullYear()
						,e.localDate.getMonth()
						,e.localDate.getDate()
						,23
						,59
						,59));
				}
				changedSearchParameter();
		});
		$('.bootstrap-datetimepicker-widget:not([picker_name])').attr('picker_name','end_mortgage_due_date_gen');
		
        
        
        
        salepicker = $("#new_sale_date_gen" ).datetimepicker({
            language: 'en',
            format: 'yyyy-MM-dd',
            pick12HourFormat: false,
            pickTime: false
        }).data('datetimepicker');
		$('.bootstrap-datetimepicker-widget:not([picker_name])').attr('picker_name','new_sale_date_gen');
        
        $('#sale_price').keyup(function(){
          	var priceperunit = 0;
	        if(!isNaN(parseInt(building.get('unit_quantity')))&&!isNaN(parseInt($('#sale_price').autoNumeric('get')))){
	        	priceperunit = (parseInt($('#sale_price').autoNumeric('get')) / parseInt(building.get('unit_quantity'))).toFixed(2);			        	
	        }
        	$('#new_unit_price_calculated_radio_label').html('$'+ commaSeparateNumber(priceperunit==0?'0.00':priceperunit));//.formatMoney(2,'.',','));
    	});
    	
    	$('#confirmaddsale').click(function(){
    		//var options = {
    		//	sale_price : $('#sale_price').val();
    		//	sale_date : $('#new_sale_date').val();
    		//	unit_price : $('#new_unit_price_manual_radio').is(':checked')?$('#new_unit_price').val():null;
    		//	building : building.toJSON();
    		//}
    		building.set('sale_id','new');
    		building.set('last_sale_price',parseInt($('#sale_price').autoNumeric('get')));
    		building.set('sale_date',$('#new_sale_date_gen').data('datetimepicker').getLocalDate().toUTCString());
    		//building.set('buildingcontacts',buildingcontacts);
    		if($('#new_unit_price_manual_radio').is(':checked')&&!isNaN(parseFloat($('#new_unit_price').autoNumeric('get')))){
    			building.set('unit_price', parseFloat($('#new_unit_price').autoNumeric('get')));
    		}else{
	    		var priceperunit = 0;
		        if(!isNaN(parseInt(building.get('unit_quantity')))&&!isNaN(parseInt($('#sale_price').autoNumeric('get')))){
		        	priceperunit = (parseInt($('#sale_price').autoNumeric('get')) / parseInt(building.get('unit_quantity'))).toFixed(2);
    				building.set('unit_price',priceperunit);			        	
		        }else{
		        	building.set('unit_price',null);
		        }
	        
    		}
    		//new_unit_price
    		
    		//$('#save_building').click();
    		saveBuilding();
			//socket.request('/building/edit',options,function(response){
			
			//});
			$('#addSaleModal').modal('hide');
		});
        
        function rebindDateTimePickerCloser(){
	        $('.bootstrap-datetimepicker-widget > div > div.close-datetime').unbind();
	        $('.bootstrap-datetimepicker-widget > div > div.close-datetime').click(function(){
	        	
	            $("#"+$(this).parent().parent().attr('picker_name')+"" ).data('datetimepicker').hide();
	        });
        }
        rebindDateTimePickerCloser();
        
        $('#advanced_criteria_toggler').click(function(){
        	if($('#collapseadvanced').height()<=0){
        		$('#advanced_criteria_toggler > div > i').removeClass('icon-plus-sign').removeClass('icon-minus-sign').addClass('icon-minus-sign');
        	}else{
        		$('#advanced_criteria_toggler > div > i').removeClass('icon-minus-sign').removeClass('icon-plus-sign').addClass('icon-plus-sign');
        	}
    	});
    	
    	
    	
    	function fileSelect(evt) {
		   if (window.File && window.FileReader && window.FileList && window.Blob) {
		        var files = document.getElementById('filesToUpload').files;
		        for(var i = 0; i < files.length; i++) {
		            resizeAndUpload(files[i]);
		        }
			} else {
				var files = document.getElementById('filesToUpload').files;
		        for(var i = 0; i < files.length; i++) {
		            upload(files[i],function(){
		            
		            });
		        }
			}
		}
		
		function upload(file,cb){
			socket.get('/upload/getPolicy',{},function(policy){
			 		
		 		if(lastImageUrl==''){
		 			lastImageUrl =  bucketPrefix + policy.filename+'.jpg';
		 		}else{
		 			lastThumbUrl = bucketPrefix + policy.filename+'.jpg';
		 		}
	 				 		
			 	var xhr =  new XMLHttpRequest();
				fd = new FormData();
			 
	    		xhr.upload.addEventListener("progress", uploadProgress, false);
				xhr.upload.addEventListener("load", transferComplete, false);
				xhr.upload.addEventListener("error", transferFailed, false);
	    		xhr.upload.addEventListener("loadstart", transferStart, false);
				
				// Populate the Post paramters.
				fd.append('key', policy.filename+'.jpg');
				fd.append('AWSAccessKeyId', policy.key);
				fd.append('acl', 'private');
				fd.append('success_action_status', "200");
				fd.append('policy', policy.policy);
				fd.append('signature',policy.signature);
				fd.append('file', file);
				xhr.open('POST', '//s3-us-west-2.amazonaws.com/credimage', true);
				xhr.send(fd);
				
				cb();
	 		});
		}
		
		function canvasResize(width,height){
		 	var tempW = tempImg.width;
	        var tempH = tempImg.height;
	        if (tempW > tempH) {
	            if (tempW > width) {
	               tempH *= width / tempW;
	               tempW = width;
	            }
	        } else {
	            if (tempH > height) {
	               tempW *= height / tempH;
	               tempH = height;
	            }
	        }
	 
	        var canvas = document.createElement('canvas');
	        canvas.width = tempW;
	        canvas.height = tempH;
	        var ctx = canvas.getContext("2d");
	        ctx.drawImage(tempImg, 0, 0, tempW, tempH);
	        
	        return dataURItoBlob(canvas.toDataURL("image/jpeg"));
		}
		
		function resizeAndUpload(file) {
			var reader = new FileReader();
		    reader.onloadend = function() {
			 
			    tempImg = new Image();
			    tempImg.src = reader.result;
			    tempImg.onload = function() {
			    
			    	upload(canvasResize(MAX_WIDTH,MAX_HEIGHT),function(){
			    	
			    	});
			 		
				}
		   }
		   reader.readAsDataURL(file);
		}
		
		function uploadProgress(evt){
			if (evt.lengthComputable) {
			
				if(lastThumbUrl==''){ //(uploading main image)
					$('.building-photo-wrapper > .span3:last').find('.progress > .bar').css('width',Math.round(evt.loaded * 75 / evt.total)+'%');
				}else{
					$('.building-photo-wrapper > .span3:last').find('.progress > .bar').css('width',(75+Math.round(evt.loaded * 25 / evt.total))+'%');
				}
			}
		}
		
		function transferStart(evt){
			if(lastThumbUrl==''){
				$('.building-photo-wrapper').append(buildingphototemplate({image:'',thumb:'',enabled:true}));
				$('.building-photo-wrapper > .span3:last').find('#UploadGif').css('display','block');
				$('.building-photo-wrapper > .span3:last').find('.progress').css('display','block');
				$('.building-photo-wrapper > .span3:last').find('.UploadGif_block').css('height',(parseInt($('.building-photo-wrapper').css('width'))/11) +'px');
				
			}
		}
		
		function transferComplete(evt){
			if(lastThumbUrl==''&&window.File && window.FileReader && window.FileList && window.Blob){
		    	upload(canvasResize(THMB_WIDTH,THMB_HEIGHT),function(){
		    	});
			}else{
				setTimeout(function(){
					$('.building-photo-wrapper > .span3:last').find('.progress > .bar').css('width',100+'%');
					$('.building-photo-wrapper > .span3:last').css('min-height',$('.building-photo-wrapper > .span3:last').height());
					
					$('.building-photo-wrapper > .span3:last').find('img').css('display','none');
					$('.building-photo-wrapper > .span3:last').find('img').attr('src',lastImageUrl);
					$('.building-photo-wrapper > .span3:last').find('img').attr('thumb',lastThumbUrl);
					$('.building-photo-wrapper > .span3:last').find('a').attr('href',lastImageUrl);
					$('.building-photo-wrapper > .span3:last').find('a').attr('data-lightbox',lastImageUrl);
					
					var tmpSlide = new Image();
		            tmpSlide.onload = function () {
						$('.building-photo-wrapper > .span3:last').find('#UploadGif').css('display','none');
						$('.building-photo-wrapper > .span3:last').find('.progress').css('display','none');
						$('.building-photo-wrapper > .span3:last').find('img').css('display','block');
		            	$('.building-photo-wrapper > .span3:last').css('min-height','');
		            };
		            tmpSlide.src = $('.building-photo-wrapper > .span3:last').find('img').attr('src');
					
					building.set('dosync',true);
					setChangesPending();
					
					lastThumbUrl = '';  // reset the thumbnail url's for next uploads
					lastImageUrl = '';
					
					
					if($('.buildingimage').size()<3){
		            	$('#filesToUpload').removeAttr('disabled');
		            	$('.fileinput-button').removeClass('disabled');
					}
					
					//$('.fileinput-button').removeAttr('disabled');
					$('.building-photo-wrapper > .span3:last').find('.buildingimagetrash').click(function(e){
						e.preventDefault();
						$(this).parents('.buildingimage').remove();
		            	$('#filesToUpload').removeAttr('disabled');
		            	$('.fileinput-button').removeClass('disabled');
					});
				},500);
			}
			
		}
		
		function transferFailed(evt){
    			$('.page-banner').after('<div class="alert alert-error" style="border-radius:0px;">'+
                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
                        'Image Transfer Failed'+'</div>');
            	if($('body').width()>979){
					$('.main-content').animate({
				        scrollTop: 0
				    }, 500);
				}else{
					$('html, body').animate({
				        scrollTop: 0
				    }, 500);
				}
		}
		
		
		function dataURItoBlob(dataURI) {
		    var binary = atob(dataURI.split(',')[1]);
		    var array = [];
		    for(var i = 0; i < binary.length; i++) {
		        array.push(binary.charCodeAt(i));
		    }
		    return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});
		}
    	
    	$(window).on("beforeunload", function() {
    		if(!blockUnload&&isChangesPending())
    		{
		    	return unloadMessage;
    		}else{
    			blockUnload = false;
			}
		});
		
		function isChangesPending(){
			if(passThroughIsChangesPending){
				passThroughIsChangesPending = false;
				return false;
			}
			if(selectedBuilding==null){
				return false
			}
			var change = false;
            if(typeof(building.get('dosync'))!='undefined'){
               change= true;
            }
            buildingcontacts.each(function(bcontact){
            	if(typeof(bcontact.get('dodelete'))!='undefined'||typeof(bcontact.get('dosync'))!='undefined')
            	{
            		change = true;
            	}
            });
            return change;
		}
    	
	    	 // just shows the changes are pending, by scanning through the collection to see if that's the case.
	    function setChangesPending(){
	        var change = false;
            if(typeof(building.get('dosync'))!='undefined'){
               change= true;
            }
            buildingcontacts.each(function(bcontact){
            	if(typeof(bcontact.get('dodelete'))!='undefined'||typeof(bcontact.get('dosync'))!='undefined')
            	{
            		change = true;
            	}
            });
            if(typeof($('#save_building')[0])!='undefined'){
	        	$('#save_building')[0].disabled = !change;
	        	if($('#save_note_admin').size()>0){
	        		$('#save_note_admin')[0].disabled = !change;
	        	}
            }
            if(typeof($('#save_notes')[0])!='undefined'){
            	if(!change){
            		$('#save_notes').addClass('disabled');
        		}else{
            		$('#save_notes').removeClass('disabled');
        		}
            }
	        if(change){
	            $('#changes_pending').css('display','block');
	            $('#changes_pending_notes').css('display','block');
	            $('#create_sale').removeClass('disabled').addClass('disabled');
	        }
	        else{
	            $('#changes_pending').css('display','none');
	            $('#changes_pending_notes').css('display','none');
	            $('#create_sale').removeClass('disabled');
	        }
	    }
    	
    	function parseBuildingImages(){
    		var response = [];
    		$('.buildingimage img').each(function(){
    			response.push({image:$(this).attr('src'),thumb:$(this).attr('thumb')});
    		});
    		return response;
    	}
    	
    	function saveBuilding(){
    		building.set('images',parseBuildingImages());
    		var wasnew = building.get('building_id')=='new'?true:false;
    		var sendobj = {building:building, buildingnotes : buildingnotes, buildingcontacts:buildingcontacts};
    		socket.get('/buildings/savebuilding',sendobj,function(response){
    			if(typeof(response.success)!='undefined'){
    				if(wasnew){
    					selectedBuilding = response.building_id;
    				}
	                $('.alert-success').remove();
	                $('.page-banner').after('<div class="alert alert-success fade in" style="border-radius:0px;">'+
	                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
	                        '<strong>'+'Success'+':&nbsp</strong>'+'Changes have been saved'+'</div>');
	                if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: 0
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop:0
					    }, 500);
					}
	                
	                setTimeout(function(){ // wait for database to be ready
	                	if(wasnew){
							$('.edit-item-section').css('display','none');
							$('#delete_building').css('display','');
							building.unset('dosync');
							buildingcontacts.reset();
	                	}else{
			                if(typeof(building.get('sale_id'))!='undefined'){  //||typeof(response.sale_id)!='undefined'
			                	building.fetch({id:response.building_id, sale_id: building.get('sale_id')=='new'?response.sale_id:parseInt(building.get('sale_id'))});  
			                }else{
			                	building.fetch({id:response.building_id});  
			                }
	                	}
		                datatable.api().ajax.reload(function(){},false); //saving building
	                },100);
                        
	                setTimeout(function(){
	                    setTimeout(function(){
	                        $('.alert-success').remove();
	                    },500);
	                    $('.alert-success').removeClass('in');
	                },alert_fadeout_time);
                }else{
    				$('.page-banner').after('<div class="alert alert-error" style="border-radius:0px;">'+
		                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
		                        ''+response.error.toString()+'</div>');
	                if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: 0
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop:0
					    }, 500);
					}
	                
                }
    		});
    	
    	}
    	
    	$('#save_building').click(function(){
    		saveBuilding();
		});
    	
    	
		///////////////////////////
	    /// BUILDING       ////////
	    ///////////////////////////
	    	
	    	
		var BuildingModel = Backbone.Model.extend({
	        urlRoot: '/buildings/getbuilding',
	        socket:null,
	        sync:function(method,model,options){
	        	var where = options;
	            if(typeof this.urlRoot === "string" && this.urlRoot !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request(this.urlRoot+collectionid, where, _.bind(function(building){
	                    if(building.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.clear();
	                    this.set(building);
	                    if(buildingView==null){
	                    	buildingView = new BuildingBackboneView();
	                    	buildingView.render();
	                    }else{
	                    	buildingView.render();
	                    }
	                }, this));
	            }
	        
	        }
	    });
	
	
	    var building = new BuildingModel();
	
	
	
	
	
	    	//var buildingtemplate = _.template($('#building-details-template').html());
	    	//$('.building-details-frame').append(buildingtemplate());
	    	
	    ///////////////////////////
	    /// Building      View ////
	    ///////////////////////////
	
	    var BuildingBackboneView = Backbone.View.extend({
	        el: '#main-building-details',
	        events: {
	            "keyup .building-segment-wrapper input" : "inputChange",
	            "keyup .building-segment-wrapper textarea" : "inputChange",
	            "change .building-segment-wrapper input" : "inputChange",
	            "change .building-segment-wrapper select" : "inputChange",
	            "keyup .total-units-dependant": "roomUnitsChange",
	            "keyup .unit-price-dependant" : "unitPriceChange",
	            "keyup #unit_quantity":"unitQuantityChange",
	            "keyup #building_income":"updateCapRate",
	            "keyup #last_sale_price":"updateCapRate"
	        },
	        updateCapRate:function(event){
	        	var calculatedCapRate = ((building.get('building_income')/building.get('last_sale_price'))*100).toFixed(0);
	        	building.set('cap_rate',calculatedCapRate=="Infinity"?null:parseInt(calculatedCapRate));
	        	$('#cap_rate').html((calculatedCapRate=="Infinity"||isNaN(calculatedCapRate))?(0+'%'):(calculatedCapRate+'%'));
	        },
	        unitQuantityChange:function(event){
	        	//if(!building.get('building_income_manual_mode')){  // if automatic mode 
	        		// Calculate the Average unit price.
	        		this.updateBuildingIncome();
	        		
	        	//}else{
	        	//	this.unitQuantityChange();
	        	//}
	        },
	        unitPriceChange:function(event){
	        	if(!building.get('unit_price_manual_mode')){  // if automatic mode 
	        		// Calculate the Average unit price.
	        		this.updateCalculatedPrice();
	        	}
	        },
	        roomUnitsChange:function(event){
	        	$('#unit_quantity').val(parseInt($('#bachelor_units').val())+parseInt($('#bedroom1_units').val())+parseInt($('#bedroom2_units').val())+parseInt($('#bedroom3_units').val()));
	        	building.set('unit_quantity',$('#unit_quantity').val());
	        	this.unitQuantityChange();
	        },
	        updateCalculatedPrice : function(){
	        		//var bachelorRent = isNaN(parseFloat($('#bachelor_price').autoNumeric('get')))?0:parseFloat($('#bachelor_price').autoNumeric('get'));
	        		//var bedroom1Rent = isNaN(parseFloat($('#bedroom1_price').autoNumeric('get')))?0:parseFloat($('#bedroom1_price').autoNumeric('get'));
	        		//var bedroom2Rent = isNaN(parseFloat($('#bedroom2_price').autoNumeric('get')))?0:parseFloat($('#bedroom2_price').autoNumeric('get'));
	        		//var bedroom3Rent = isNaN(parseFloat($('#bedroom3_price').autoNumeric('get')))?0:parseFloat($('#bedroom3_price').autoNumeric('get'));
	        		
	        		var bachelorUnits = isNaN(parseInt($('#bachelor_units').val()))?0:parseInt($('#bachelor_units').val());
	        		var bedroom1Units = isNaN(parseInt($('#bedroom1_units').val()))?0:parseInt($('#bedroom1_units').val());
	        		var bedroom2Units = isNaN(parseInt($('#bedroom2_units').val()))?0:parseInt($('#bedroom2_units').val());
	        		var bedroom3Units = isNaN(parseInt($('#bedroom3_units').val()))?0:parseInt($('#bedroom3_units').val());
	        		var totalUnits = isNaN(parseInt($('#unit_quantity').val()))?0:parseInt($('#unit_quantity').val());
	        		
	        		var unitPrice = 0;
	        		//if(!isNaN(parseFloat(building.get('last_sale_price')))&&(bachelorUnits+bedroom1Units+bedroom2Units+bedroom3Units)!=0){
	        		//	unitPrice =    ((parseFloat(building.get('last_sale_price')))/(bachelorUnits+bedroom1Units+bedroom2Units+bedroom3Units)).toFixed(2);
	        		//}
	        		if(!isNaN(parseFloat(building.get('last_sale_price')))&&(totalUnits)!=0){
	        			unitPrice =    ((parseFloat(building.get('last_sale_price')))/(totalUnits)).toFixed(2);
	        		}
	        		
	        		$('#unit_price_calculated_radio_label').html('$'+(isNaN(parseFloat(unitPrice))?'0.00':commaSeparateNumber(parseFloat(unitPrice).toFixed(2))));
	        		building.set('unit_price',parseFloat(unitPrice));
	        		this.unitQuantityChange();
	        },
	        updateBuildingManualPrice:function(){
	        
	        },
	        updateBuildingIncome : function(){
	        	if(!building.get('building_income_manual_mode')){
	        		//var averageUnitPrice = isNaN(parseInt(building.get('unit_price')))?0:parseFloat(building.get('unit_price')).toFixed(2);
	        		//var numberOfUnits = isNaN(parseInt(building.get('unit_quantity')))?0:parseInt(building.get('unit_quantity'));
	        		var bachelorUnits = isNaN(parseInt($('#bachelor_units').val()))?0:parseInt($('#bachelor_units').val());
	        		var bedroom1Units = isNaN(parseInt($('#bedroom1_units').val()))?0:parseInt($('#bedroom1_units').val());
	        		var bedroom2Units = isNaN(parseInt($('#bedroom2_units').val()))?0:parseInt($('#bedroom2_units').val());
	        		var bedroom3Units = isNaN(parseInt($('#bedroom3_units').val()))?0:parseInt($('#bedroom3_units').val());
	        		
	        		var bachelorRent = isNaN(parseFloat($('#bachelor_price').autoNumeric('get')))?0:parseFloat($('#bachelor_price').autoNumeric('get'));
	        		var bedroom1Rent = isNaN(parseFloat($('#bedroom1_price').autoNumeric('get')))?0:parseFloat($('#bedroom1_price').autoNumeric('get'));
	        		var bedroom2Rent = isNaN(parseFloat($('#bedroom2_price').autoNumeric('get')))?0:parseFloat($('#bedroom2_price').autoNumeric('get'));
	        		var bedroom3Rent = isNaN(parseFloat($('#bedroom3_price').autoNumeric('get')))?0:parseFloat($('#bedroom3_price').autoNumeric('get'));
	        		
	        		
	        		var buildingIncome = (((bachelorUnits*bachelorRent)+(bedroom1Units*bedroom1Rent)+(bedroom2Units*bedroom2Rent)+(bedroom3Units*bedroom3Rent))*12).toFixed(2); 
	        		//(averageUnitPrice*numberOfUnits*12).toFixed(2);
	        		
	        		$('#income_calculated_radio_label').html('$'+commaSeparateNumber(parseFloat(buildingIncome).toFixed(2)));
	        		building.set('building_income',parseFloat(buildingIncome));
	        		this.updateCapRate();
        		}else{
	        		this.updateCapRate();
        		
        		}
	        },
	        inputChange:function(event){
	        	building.set('dosync',true);
	        	if(typeof(building.get($(event.target).attr('id')))!='undefined'){
	        		var targetId = $(event.target).attr('id');
	        		if(['last_sale_price','building_income','unit_price','bachelor_price','bedroom1_price','bedroom2_price','bedroom3_price'].indexOf($(event.target).attr('id'))>-1){
	        			building.set($(event.target).attr('id'),parseFloat($(event.target).autoNumeric('get')));
	        			this.unitQuantityChange();
	        		}else if(['heat_system_type'].indexOf($(event.target).attr('id'))>-1||['building_type'].indexOf($(event.target).attr('id'))>-1){
	        			if(isNaN(parseInt($(event.target).val()))){
	        				building.set($(event.target).attr('id'),null);
	        			}else{
	        				building.set($(event.target).attr('id'),parseInt($(event.target).val()));
	        			}
	        		}else if($(event.target).attr('type')=='checkbox'){
	        			building.set($(event.target).attr('id'),($(event.target).is(':checked')?1:0));
	        		}else if($(event.target).attr('id')!="mortgage_due_date"&&$(event.target).attr('id')!="sale_date"){
	        			building.set($(event.target).attr('id'),$(event.target).val());
	        		}
	        	}else if($(event.target).attr('id')=='income_calculated_radio'){
	        		building.set('building_income_manual_mode',false);
	        		$('#building_income').attr('disabled','disabled');
	        		$('#building_income').val('');
	        		this.updateBuildingIncome();
	        	}else if($(event.target).attr('id')=='income_manual_radio'){
	        		building.set('building_income_manual_mode',true);
	        		$('#building_income').removeAttr('disabled');
	        		$('#building_income').val('$'+(building.get('building_income')==null?'0.00':commaSeparateNumber(building.get('building_income').toFixed(2))));
	        		$('#income_calculated_radio_label').empty();
	        	}else if($(event.target).attr('id')=='unit_price_calculated_radio'){
	        		building.set('unit_price_manual_mode',false);
	        		$('#unit_price').attr('disabled','disabled');
	        		$('#unit_price').val('');
	        		this.updateCalculatedPrice();
	        		this.unitQuantityChange();
	        	}else if($(event.target).attr('id')=='unit_price_manual_radio'){
	        		building.set('unit_price_manual_mode',true);
	        		$('#unit_price').removeAttr('disabled');
	        		$('#unit_price').val('$'+(building.get('unit_price')==null?'0.00':commaSeparateNumber(building.get('unit_price').toFixed(2))));
	        		$('#unit_price_calculated_radio_label').empty();
	        	}
	        	setChangesPending();
	        },
	        initialize: function () {
	            //this.render();
	        },
	        template: _.template($('#building-details-template').html()),
	        render: function () {
	        
	        	if($("#last_sale_date_gen").data('datetimepicker')!=null){
	        		$("#last_sale_date_gen").data('datetimepicker').destroy();
        		}
	        	if($("#mortgage_due_date_gen").data('datetimepicker')!=null){
	        		$("#mortgage_due_date_gen").data('datetimepicker').destroy();
        		}
	            this.$el.html("");
	            
	            if(typeof(building.get('sale_id'))!='undefined'){
	            	$('#building-section-title').html('Sales History Details');
	            }else if(building.get('building_id')=='new'){
	            	$('#building-section-title').html('Create Building');
	            }else{
	            	$('#building-section-title').html('Edit Building Details');
	            }
	            
	            building.set('building_income_cs',building.get('building_income')==null?'$0.00':'$'+commaSeparateNumber(building.get('building_income').toFixed(2)));
	            this.$el.append(this.template(building.toJSON()));
	            if(user.policy.update==0){
		        	$('#main-building-details input').attr('disabled','disabled');
		        	$('#main-building-details select').attr('disabled','disabled');
		        	
		        	
		        	$('#save_notes').click(function(){
		        		if($(this).hasClass('disabled')){
		        			return;
		        		}
			    		var sendobj = {building:building, buildingnotes : buildingnotes};
			    		socket.get('/buildings/savebuilding',sendobj,function(response){
			    		
			                $('.alert-success').remove();
			                $('.page-banner').after('<div class="alert alert-success fade in" style="border-radius:0px;">'+
			                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
			                        '<strong>'+'Success'+':&nbsp</strong>'+'Changes have been saved'+'</div>');
			                if($('body').width()>979){
								$('.main-content').animate({
							        scrollTop: 0
							    }, 500);
							}else{
								$('html, body').animate({
							        scrollTop:0
							    }, 500);
							}
							building.fetch({id:response.building_id});
			                        
			                setTimeout(function(){
			                    setTimeout(function(){
			                        $('.alert-success').remove();
			                    },500);
			                    $('.alert-success').removeClass('in');
			                },alert_fadeout_time);
			    		});
					});
	            }
	            $('.edit-item-section').css('display','block');
	         
	         	$('#heat_system_age').autoNumeric('init',{vMin: '0', vMax: '2099', mDec: '0',aSep: ''});
	         	$('#boiler_installed_year').autoNumeric('init',{vMin: '0', vMax: '2099', mDec: '0',aSep: ''});
	         	$('#windows_installed_year').autoNumeric('init',{vMin: '0', vMax: '2099', mDec: '0',aSep: ''});
	         	$('#parking_spots').autoNumeric('init',{vMin: '0', vMax: '2000', mDec: '1',aSep: ''});
	         	$('#elevator_installed_year').autoNumeric('init',{vMin: '0', vMax: '2099', mDec: '0',aSep: ''});
	         	$('#last_elevator_upgrade_year').autoNumeric('init',{vMin: '0', vMax: '2099', mDec: '0',aSep: ''});
	         	
	         	
	         	$('#last_boiler_upgrade_year').autoNumeric('init',{vMin: '0', vMax: '2099', mDec: '0',aSep: ''});
	         	$('#unit_quantity').autoNumeric('init',{vMin: '0', vMax: '40000', mDec: '0',aSep: '',wEmpty: 'zero'});
	         	$('#unit_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '999999', mDec: '2',aSep: ',',wEmpty: 'zero'});
	         	$('#building_income').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999999999', mDec: '2',aSep: ',',wEmpty: 'zero'});
	         	$('#last_sale_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999999999', mDec: '2',aSep: ',',wEmpty: 'zero'});
	         	//$('#assessed_value').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999999999', mDec: '2' ,aSep: ',',wEmpty:'zero'});
	         	$('#bachelor_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999', mDec: '2',aSep: ',',wEmpty: 'zero'});
	         	$('#bedroom1_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999', mDec: '2',aSep: ',',wEmpty: 'zero'});
	         	$('#bedroom2_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999', mDec: '2',aSep: ',',wEmpty: 'zero'});
	         	$('#bedroom3_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999', mDec: '2',aSep: ',',wEmpty: 'zero'});
	         	
	         	//$('#assessed_value').autoNumeric('update');
	         	$('#bachelor_price').autoNumeric('update');
	         	$('#bedroom1_price').autoNumeric('update');
	         	$('#bedroom2_price').autoNumeric('update');
	         	$('#bedroom3_price').autoNumeric('update');
	         	$('#last_sale_price').autoNumeric('update');
	         	
	         	$('#bachelor_units').autoNumeric('init',{vMin: '0', vMax: '9999', mDec: '0',aSep: '',wEmpty: 'zero'});
	         	$('#bedroom1_units').autoNumeric('init',{vMin: '0', vMax: '9999', mDec: '0',aSep: '',wEmpty: 'zero'});
	         	$('#bedroom2_units').autoNumeric('init',{vMin: '0', vMax: '9999', mDec: '0',aSep: '',wEmpty: 'zero'});
	         	$('#bedroom3_units').autoNumeric('init',{vMin: '0', vMax: '9999', mDec: '0',aSep: '',wEmpty: 'zero'});
	         	if(triggerScroll){
		            if($('body').width()>979){
						$('.main-content').animate({
					        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
					    }, 500);
					}else{
						$('html, body').animate({
					        scrollTop: $(".edit-item-section").offset().top
					    }, 500);
					}
					triggerScroll = false;
				}
	            
	            
	            if(typeof(building.get('sale_id'))=='undefined'){
					buildingnotes.fetch({id:building.get('building_id')});
					buildingcontacts.fetch({id:building.get('building_id')});
					$('.fileinput-button').removeAttr('disabled');
	            }else{
					buildingcontacts.fetch({id:building.get('building_id'),sale_id:building.get('sale_id')});
					$('.fileinput-button').attr('disabled','disabled');
	            }
				buildingsales.fetch({id:building.get('building_id')});
	            
	            if(building.get('images')!=''&&building.get('images')!='images'){
		            var images = $.parseJSON(building.get('images'));
		            for(var image in images){
						$('.building-photo-wrapper').append(buildingphototemplate({image:images[image].image,thumb:images[image].thumb,enabled:typeof(building.get('sale_id'))=='undefined'}));
						$('.building-photo-wrapper > .span3:last').find('.buildingimagetrash').click(function(){
							$(this).parents('.buildingimage').remove();
			            	$('#filesToUpload').removeAttr('disabled');
			            	$('.fileinput-button').removeClass('disabled');
							building.set('dosync',true);
							setChangesPending();
						});
		            }
	            }
	            
	            if($('.buildingimage').size()>=3){
	            	$('#filesToUpload').attr('disabled','disabled');
	            	$('.fileinput-button').removeClass('disabled').addClass('disabled');
	            }
	        
	            
		    	$('.fileinput-button').click(function(){
		    		if(!$(this).is('[disabled]'))
		    		{
		    			//alert('clicked it');
		    			$('#filesToUpload').val('');
			    		$('#filesToUpload').click();
		    		}
		    	});
		    	
				$('#filesToUpload').change(function(){
					//if(typeof($('.fileinput-button').attr('disabled'))=='undefined')
		    		//{
			    		if($(this).val()!='')
			    		{
			            	$('#filesToUpload').attr('disabled','disabled');
			            	$('.fileinput-button').removeClass('disabled').addClass('disabled');
				    		//$('.fileinput-button').attr('disabled','disabled');
							fileSelect();
			    		}
		    		//}
				});
				
					
			    $('#create_note').click(function(){
			    	if(typeof(buildingnotes)!='undefined'){
			    		var noteid = 'new_'+Math.floor((Math.random() * 1000000) + 1);
			    		var newbuildingnote = new BuildingNotesModel({id:noteid,note:'',timestamp:new Date(),user:'<%=req.session.user.username%>'});
			    		buildingnotes.add(newbuildingnote);
			    		buildingnotesView.render();
			    		
			        	
			    		$('.building-note[noteid='+noteid+'] .edit-note').click();
			    	}	
				});	
				
				
		        $("#last_sale_date_gen").datetimepicker({
		            language: 'en',
		            format: 'yyyy-MM-dd',
		            pick12HourFormat: false,
		            pickTime: false
		        }).on('changeDate',function(e){
		        	building.set('sale_date',$("#last_sale_date_gen").data('datetimepicker').getLocalDate().toUTCString());//$('#sale_date').val());
		        	building.set('dosync',true);
		        	setChangesPending();
		        });
				$('.bootstrap-datetimepicker-widget:not([picker_name])').attr('picker_name','last_sale_date_gen');
		        var saleDate = new Date(building.get('sale_date'));
		        if(building.get('sale_date')!=null){
					$("#last_sale_date_gen").data('datetimepicker').setLocalDate(saleDate);
		        }

	            if(user.policy.update==1){
			        $('#last_sale_date_gen .add-on').click(function(){
			         	building.set('dosync',true);
			         });
			         $('#sale_date').click(function(){
			         	building.set('dosync',true);
			         });
			        
			        $("#mortgage_due_date_gen").datetimepicker({
			            language: 'en',
			            format: 'yyyy-MM-dd',
			            pick12HourFormat: false,
			            pickTime: false
			        }).on('changeDate',function(e){
			        	building.set('mortgage_due_date',$("#mortgage_due_date_gen").data('datetimepicker').getLocalDate().toUTCString());//$('#sale_date').val());
			        	building.set('dosync',true);
			        	setChangesPending();
			        });
					$('.bootstrap-datetimepicker-widget:not([picker_name])').attr('picker_name','mortgage_due_date_gen');
			        //var mortgageDate = new Date(building.get('mortgage_due_date'));
					$("#mortgage_due_date_gen").data('datetimepicker').setLocalDate(building.get('mortgage_due_date')==null?null:new Date(building.get('mortgage_due_date')));
	
			        $('#mortgage_due_date_gen .add-on').click(function(){
			         	building.set('dosync',true);
			         });
			         $('#mortgage_due_date').click(function(){
			         	building.set('dosync',true);
			         });
			        
			        
			        
			        rebindDateTimePickerCloser();
		        }
		        
		        
		        
		        $('#create_sale').click(function(){
		        	if($(this).hasClass('disabled')){
		        		return;
	        		}
		        	$('#addSaleModal div.alert-error').remove();
			        $('#addSaleModal').modal('show');
			        $('#addSaleModal #myModalLabelAdd').html('Add Sale to Building');
			        $('#sale_price').val(0);//building.get('last_sale_price'));
			        $('#sale_price').autoNumeric('update');
			        //$('#new_sale_date').val(new Date().toLocaleString());
			        
			        salepicker.setLocalDate(new Date());
			        $('#new_unit_price_calculated_radio').click();
			        $('#new_unit_price').val('0');
			        $('#new_unit_price').autoNumeric('update');
			        $('#new_unit_price_calculated_radio')[0].checked = true;
			        $('#new_unit_price_calculated_radio_label').html('$0.00');
			        
			        $('#sale_price').change();
			      
	        	});
	            
	            $('#add_owner').click(function(){
			        $('#addContactModal div.alert-error').remove();
			        $('.create-contact-message').html('To create a new owner, select the contact and/or company associated with this building.');
			        $('#addContactModal').modal('show');
			        $('#addContactModal #myModalLabelAdd').html('Add Owner to Building');
			       
			        
			        
			        editMappingId = null;
		            $('#confirmaddbuildingcontact').html('Add');
			        bindAddBuildingContactModal();
			        $('#confirmaddbuildingcontact').attr('contact_type',$(this).attr('contact_type'));
			        
			        
		        });
		        $('#add_seller').click(function(){
			        $('#addContactModal div.alert-error').remove();
			        $('.create-contact-message').html('To create a new seller, select the contact and/or company associated with this building.');
			        $('#addContactModal').modal('show');
			        $('#addContactModal #myModalLabelAdd').html('Add Seller to Building');
			        
			        editMappingId=null;
		            $('#confirmaddbuildingcontact').html('Add');
			        bindAddBuildingContactModal();
			        $('#confirmaddbuildingcontact').attr('contact_type',$(this).attr('contact_type'));
			        
			        
		        });
		        $('#add_agent').click(function(){
			        $('#addContactModal div.alert-error').remove();
			        $('.create-contact-message').html('To create a new agent, select the contact and/or company associated with this building.');
			        $('#addContactModal').modal('show');
			        $('#addContactModal #myModalLabelAdd').html('Add Agent to Building');
			        
			        editMappingId=null;
		            $('#confirmaddbuildingcontact').html('Add');
			        bindAddBuildingContactModal();
			        $('#confirmaddbuildingcontact').attr('contact_type',$(this).attr('contact_type'));
			        
			        
		        });
		        this.updateCapRate();
	            setChangesPending();
	        }
	    });
	    var buildingView;
	    var contactscombobox=null;	
	   	var contactssearchtimer = null;
	   	var curcontactsval = '';
	   	var newCompany = null;
	   	var companiescombobox=null;
	   	var curcompaniesval = '';
	   	var newContact = null;
	   	
	   	
	   	var edit_contact_details_section_template = _.template($('#edit-contact-details-section-template').html());
	    var edit_company_details_section_template = _.template($('#edit-company-details-section-template').html());	
	    var edit_contact_pane_template = _.template($('#edit-contact-pane-template').html());
	    var edit_company_pane_template = _.template($('#edit-company-pane-template').html());
	    	
	    function bindAddBuildingContactModal(editBuildingContact){
	    	// get the original data
	    	curcontactsval = '';
	    	curcompaniesval = '';
	    	//Clear Alerts
	    	$('#addContactModal .alert-success').remove();
    		$('#addContactModal .alert-error').remove();
	    	
	    	/// Repair the add/edit contact/company drop pane
	    	$('#edit-add-contact-company-drop-pane').height(0);
			$('#confirmaddbuildingcontact').removeAttr('disabled');
			$('#canceladdbuildingcontact').removeAttr('disabled');
	    	
	    	setTimeout(function(){
	    		$('#addContactModal .modal-body').scrollTop(0);
			},200);
			
			
	        var contactsargs = {};
	        if(typeof(editBuildingContact)!='undefined'){//
	        	if(editBuildingContact.contact_id!=null){
	        		contactsargs.search = editBuildingContact.contact_name;
	        	}
	        	if(editBuildingContact.company_id!=null){
	        		
	        		contactsargs.companyId = editBuildingContact.company_id;
	        	}
	        }
	        
	        socket.get('/buildings/getcontactsbycompanyid',contactsargs,function(res){
    			$('select.contactscombobox').empty();
	        	for(var i=0;i<res.length;i++){
	        		$('select.contactscombobox').append('<option value="'+res[i].contact_name+'">'+res[i].contact_name+'</option');
	        		$('select.contactscombobox option:last').data({
		        		contact_id:res[i].contact_id
		        		,contact_name:res[i].contact_name
		        		,phone_number:res[i].phone_number 
	        			,email:res[i].email
	        			,street_number_begin:res[i].street_number_begin
	        			,street_number_end:res[i].street_number_end
	        			,street_name:res[i].street_name
	        			,postal_code:res[i].postal_code
	        			,city:res[i].city
	        			,province:res[i].province
	        		});
	        	}
		        if(contactscombobox==null){
		        	contactscombobox = $('select.contactscombobox').combobox();
		        	$('input.contactscombobox').val('');
		        	$('input.contactscombobox').on('keyup',function(e){
		        		if(curcontactsval!=$('input.contactscombobox').val()&&e.keyCode!=9&&e.keyCode!=13&&e.keyCode!=27)
		        		{
		        			curcontactsval =  $('input.contactscombobox').val();
		        			updateContactsCombobox();
	        			}
	        		});
	        		
	        		$('input.contactscombobox').change(function(){
	        			var selectedoption = $('select.contactscombobox option[value="'+$('input.contactscombobox').val()+'"]');
	        			if(selectedoption.length==1)
	        			{
	        				newContact = selectedoption.data();
	        				curcontactsval = $('input.contactscombobox').val();
	        				$('#edit-contact-details-section').empty();
	        				$('#edit-contact-details-section').append(edit_contact_details_section_template(newContact));
	        				
	        				bindEditContactDetailsMappingButton();
	        				if(newCompany==null&&curcompaniesval==''){
	        					updateCompaniesCombobox(true);
	        				}
	        				
	        				
	        			}else{
	        				newContact = null;
	        				curcontactsval = '';
	        				updateContactsCombobox();
	        				$('#edit-contact-details-section').empty();
	        			}
        			});
        			$('.contactscombobox').siblings('.add-on').find('.icon-remove').click(function(){
        				$('input.contactscombobox').val('');
        				$('input.contactscombobox').change();
        				curcontactsval = '';
    				});
        			$('.contactscombobox').siblings('.add-on').find('.caret').click(function(){
        				$('input.contactscombobox').val('');
        				$('input.contactscombobox').change();
        				curcontactsval = '';
    				});
        			$('.contactscombobox').siblings('.add-on').click(function(){
        				$('input.contactscombobox').val('');
        				$('input.contactscombobox').change();
        				curcontactsval = '';
    				});
    				
    				$('#create_new_contact').click(function(){
    					
    					newContact = {
			        		contact_id:'new'
			        		,contact_name:null
			        		,phone_number:null
		        			,email:null
		        			,street_number_begin:null
		        			,street_number_end:null
		        			,street_name:null
		        			,postal_code:null
		        			,city:null
		        			,province:null
	        			}
        				doEditContactDetails(newContact);
    				});
    				
		        }else{
		        	//if(typeof(editBuildingContact)=='undefined'||editBuildingContact.contact_id==null){
		        	
		        	//}
		        	//if(typeof(editBuildingContact)=='undefined'||editBuildingContact.company_id==null){
					//	newCompany = null;
		        	//}
		        	newContact=null;
		        	curcontactsval = '';
		        	$('input.contactscombobox').val('');
		        	contactscombobox.data('combobox').refresh(); 
		        	$('input.contactscombobox').val('');
	        		$('#edit-contact-details-section').empty();
		        }
		        if(typeof(editBuildingContact)!='undefined'&&editBuildingContact.contact_id!=null){
		        
		        	
        			$('input.contactscombobox').val(editBuildingContact.contact_name);
        			curcontactsval = editBuildingContact.contact_name;
        			//contactscombobox.data('combobox').lookup();
        			//$('input.contactscombobox').change();
        			//$('.contactscombobox').siblings('ul').find('li').click();
        			
        			newContact = {
		        		contact_id:editBuildingContact.contact_id
		        		,contact_name:editBuildingContact.contact_name
		        		,phone_number:editBuildingContact.phone_number 
	        			,email:editBuildingContact.email
	        			,street_number_begin:editBuildingContact.contact_street_number_begin
	        			,street_number_end:editBuildingContact.contact_street_number_end
	        			,street_name:editBuildingContact.contact_street_name
	        			,postal_code:editBuildingContact.contact_postal_code
	        			,city:editBuildingContact.contact_city
	        			,province:editBuildingContact.contact_province
        			}
        			
    				$('#edit-contact-details-section').empty();
    				$('#edit-contact-details-section').append(edit_contact_details_section_template(newContact));
    				bindEditContactDetailsMappingButton();
		        }
	        });
	        
	        var companiesargs = {};
	        if(typeof(editBuildingContact)!='undefined'){
	        }
	        if(typeof(editBuildingContact)!='undefined'){//
	        	if(editBuildingContact.company_id!=null){
	        		companiesargs.search = editBuildingContact.cur_company_name;
	        	}
	        	if(editBuildingContact.company_id!=null){
	        		
	        		contactsargs.contactId = editBuildingContact.contact_id;
	        	}
	        }
	        
	        
	        socket.get('/buildings/getcompaniesbycontactid',companiesargs,function(res){
	        	$('select.companiescombobox').empty();
	        	for(var i=0;i<res.length;i++){
	        		$('select.companiescombobox').append('<option value="'+res[i].company_name+'">'+res[i].company_name+'</option');
	        		$('select.companiescombobox option:last').data({
		        		company_id:res[i].company_id
		        		,company_name:res[i].company_name
		        		,phone_number:res[i].phone_number 
	        			,street_number_begin:res[i].street_number_begin
	        			,street_number_end:res[i].street_number_end
	        			,street_name:res[i].street_name
	        			,postal_code:res[i].postal_code
	        			,city:res[i].city
	        			,province:res[i].province
	        		});
	        	}
		        if(companiescombobox==null){
		        	companiescombobox = $('select.companiescombobox').combobox();
		        	$('input.companiescombobox').val('');
		        	$('input.companiescombobox').on('keyup',function(e){
		        		if(curcompaniesval!=$('input.companiescombobox').val()&&e.keyCode!=9&&e.keyCode!=13&&e.keyCode!=27)
		        		{
							curcompaniesval =  $('input.companiescombobox').val();
							updateCompaniesCombobox();
	        			}
	        		});
	        		$('input.companiescombobox').change(function(){
	        			var selectedoption = $('select.companiescombobox option[value="'+$('input.companiescombobox').val()+'"]');
	        			if(selectedoption.length==1)
	        			{
	        				newCompany = selectedoption.data();
	        				curcompaniesval = $('input.companiescombobox').val();
	        				
	        				$('#edit-company-details-section').empty();
	        				$('#edit-company-details-section').append(edit_company_details_section_template(newCompany));
	        				bindEditCompanyDetailsMappingButton();
	        				if(newContact==null&&curcontactsval==''){
	        					updateContactsCombobox(true);
	        				}
	        			}else{
        					newCompany = null;
        					curcompaniesval = '';
        					updateCompaniesCombobox();
	        				$('#edit-company-details-section').empty();
        				}
        			});
        			$('.companiescombobox').siblings('.add-on').find('.icon-remove').click(function(){
        				$('input.companiescombobox').val('');
        				$('input.companiescombobox').change();
        				curcompaniesval = '';
    				});
        			$('.companiescombobox').siblings('.add-on').find('.caret').click(function(){
        				$('input.companiescombobox').val('');
        				$('input.companiescombobox').change();
        				curcompaniesval = '';
    				});
        			$('.companiescombobox').siblings('.add-on').click(function(){
        				$('input.companiescombobox').val('');
        				$('input.companiescombobox').change();
        				curcompaniesval = '';
    				});
        			$('#create_new_company').click(function(){
    					
    					newCompany = {
			        		company_id:'new'
			        		,company_name:null
			        		,phone_number:null
		        			,street_number_begin:null
		        			,street_number_end:null
		        			,street_name:null
		        			,postal_code:null
		        			,city:null
		        			,province:null
	        			}
        				doEditCompanyDetails(newCompany);
    				});
    				
    				$('.constrain-btn').click(function(){
    					if($(this).find('i').hasClass('icon-lock')){
    						$('.constrain-btn i').removeClass('icon-lock').addClass('icon-unlock');
    					}else{
    						$('.constrain-btn i').removeClass('icon-unlock').addClass('icon-lock');
    					}
    				});
		        }else{
					//if(typeof(editBuildingContact)=='undefined'||editBuildingContact.contact_id==null){
		        	//newContact=null;
		        	//}
		        	//if(typeof(editBuildingContact)=='undefined'||editBuildingContact.company_id==null){
		        	//}
		        	//$('input.companiescombobox').val('');
					newCompany = null;
					curcompaniesval = '';
		        	$('input.companiescombobox').val('');
		        	companiescombobox.data('combobox').refresh(); 
		        	$('input.companiescombobox').val('');
					
    				$('#edit-company-details-section').empty();
		        }
		        if(typeof(editBuildingContact)!='undefined'&&editBuildingContact.company_id!=null){
		        
		        	
        			$('input.companiescombobox').val(editBuildingContact.cur_company_name);
        			//companiescombobox.data('combobox').lookup();
        			//$('input.companiescombobox').change();
        			//setTimeout(function(){
        			//	$('.companiescombobox').siblings('ul').find('li').click();
        			//},editBuildingContact.contact_id!=null?500:0);
        			curcompaniesval = editBuildingContact.cur_company_name;
        			newCompany = {
		        		company_id:editBuildingContact.company_id
		        		,company_name:editBuildingContact.cur_company_name
		        		,phone_number:editBuildingContact.company_phone_number 
	        			,street_number_begin:editBuildingContact.street_number_begin
	        			,street_number_end:editBuildingContact.street_number_end
	        			,street_name:editBuildingContact.street_name
	        			,postal_code:editBuildingContact.postal_code
	        			,city:editBuildingContact.city
	        			,province:editBuildingContact.province
        			}
    				$('#edit-company-details-section').empty();
    				$('#edit-company-details-section').append(edit_company_details_section_template(newCompany));
    				bindEditCompanyDetailsMappingButton();
		        }
	        });
	        $('#confirmaddbuildingcontact').unbind();
	        $('#confirmaddbuildingcontact').click(function(){
		        $('#addContactModal div.alert-error').remove();
				if(newContact==null&&newCompany==null)
				{
					$('#addContactModal div.modal-header').after(
	            '<div class="alert alert-error fade in" style="margin-bottom:0px;" style="border-radius:0px;"><button type="button" class="close" data-dismiss="alert">×</button><strong>Error:&nbsp;</strong>Please select a Contact, Company or both.</div>');
	    			return;
				}else if(newContact==null){
					
				}
				
				if(editMappingId!=null){   //remove old one!!!          	
		            var modtemp  = buildingcontacts.findWhere({mapping_id:editMappingId});
		            if(typeof(editMappingId)=='string'&&editMappingId.indexOf('new')>-1){
		                buildingcontacts.remove(modtemp);
		            }else{
		                modtemp.set({dodelete:1});
		            }
	                buildingcontactsView.render();
		            setChangesPending();
			    }
			    editMappingId = null;
			    
			    
				
				buildingcontacts.add({
					mapping_id: 'new_'+Math.floor((Math.random() * 1000000) + 1)
					,contact_id: newContact==null?null:newContact.contact_id
					,dosync : true
					,contact_name: newContact==null?null:newContact.contact_name
					, contact_type:$(this).attr('contact_type')
					, cur_company_name: newCompany==null?null:newCompany.company_name
					, company_id : newCompany==null?null:newCompany.company_id
					, email: newContact==null?null:newContact.email
					, company_phone_number : newCompany==null?null:newCompany.phone_number
					, phone_number: newContact==null?null:newContact.phone_number
					, street_number_begin:newCompany==null?null:newCompany.street_number_begin
					, street_number_end:newCompany==null?null:newCompany.street_number_end
					, street_name:newCompany==null?null:newCompany.street_name
					, city:newCompany==null?null:newCompany.city
					, province: newCompany==null?null:newCompany.province
					, postal_code: newCompany==null?null:newCompany.postal_code
					, contact_street_number_begin:newContact==null?null:newContact.street_number_begin
					, contact_street_number_end:newContact==null?null:newContact.street_number_end
					, contact_street_name:newContact==null?null:newContact.street_name
					, contact_city:newContact==null?null:newContact.city
					, contact_province: newContact==null?null:newContact.province
					, contact_postal_code: newContact==null?null:newContact.postal_code
				});
				buildingcontactsView.render();
				$('#addContactModal').modal('hide');
				
			});
        }
        
        
        function doEditContactDetails(tempContact){
        	$('#edit-add-contact-company-drop-pane').animate({
		        height:$('#addContactModal .modal-body').height()+30
		    }, 500);
		    $('#confirmaddbuildingcontact').attr('disabled','disabled');
		    $('#canceladdbuildingcontact').attr('disabled','disabled');
		    
		    $('#edit-add-contact-company-drop-pane').empty();
		    
		    $('#edit-add-contact-company-drop-pane').append(edit_contact_pane_template(tempContact));
		    
		    $('#cancel_edit_contact').click(function(){
			    $('#edit-add-contact-company-drop-pane').animate({
			        height:0
			    }, 500);
		    	$('#confirmaddbuildingcontact').removeAttr('disabled');
		    	$('#canceladdbuildingcontact').removeAttr('disabled');
		    });
		    
		    $('#save_edit_contact').click(function(){
		    	$('#addContactModal .alert-success').remove();
	    		$('#addContactModal .alert-error').remove();
	    		//var wasnew = contact.get('contact_id')=='new'?true:false;
	    		
	    		var contactObj = {
	    			contact_id : $('#contact_ajax_contact_id').attr('contact_id')=='new'?'new':parseInt($('#contact_ajax_contact_id').attr('contact_id'))
	    			,contact_name : $('#contact_ajax_contact_name').val()
	    			,phone_number : $('#contact_ajax_phone_number').val()
	    			,email : $('#contact_ajax_email').val()
	    			,street_number_begin : $('#contact_ajax_street_number_begin').val()
	    			,street_number_end : $('#contact_ajax_street_number_end').val()
	    			,street_name : $('#contact_ajax_street_name').val()
	    			,city : $('#contact_ajax_city').val()
	    			,province : $('#contact_ajax_province').val()
	    			,postal_code : $('#contact_ajax_postal_code').val()
	    			,modified : true
	    		};
	    		
	    		socket.get('/contacts/updatecontact/', {contact:contactObj, companies : [], notes : []},function(response){
	    			if(typeof(response.success)!='undefined'){
	    				if(contactObj.contact_id=='new'){
	    					contactObj.contact_id = response.contact_id;
	    				}
		                $('#addContactModal .modal-body').before('<div class="alert alert-success fade in" style="margin-bottom:0px; border-radius:0px;">'+
		                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
		                        '<strong>'+'Success'+':&nbsp</strong>'+'Contact Details have been Updated'+'</div>');
		                        
		                $('#edit-add-contact-company-drop-pane').animate({
					        height:0
					    }, 500);
				    	$('#confirmaddbuildingcontact').removeAttr('disabled');
				    	$('#canceladdbuildingcontact').removeAttr('disabled');  
				    	
				    	if(newContact.contact_id == contactObj.contact_id){
					    	newContact = contactObj;
					    	
					    	$('#edit-contact-details-section').empty();
					    	
					    	
	        				$('#edit-contact-details-section').append(edit_contact_details_section_template(newContact));
	        				$('input.contactscombobox').val(newContact.contact_name);
	        				bindEditContactDetailsMappingButton();     
        				} 
		                        
                    }else{
                    	$('#addContactModal #edit-add-contact-company-drop-pane').prepend('<div class="alert alert-error" style="border-radius:0px;">'+
                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
                        ''+response.error+'</div>');
                    
                    }
                });
		                
		    });
        }
        
        
        function bindEditContactDetailsMappingButton(){
        	$('.edit-contact-details-mapping-button').click(function(){
        		doEditContactDetails(newContact);
        	});
        }
        
        
        
        function doEditCompanyDetails(tempCompany){
        	$('#edit-add-contact-company-drop-pane').animate({
		        height:$('#addContactModal .modal-body').height()+30
		    }, 500);
		    $('#confirmaddbuildingcontact').attr('disabled','disabled');
		    $('#canceladdbuildingcontact').attr('disabled','disabled');
		    
		    $('#edit-add-contact-company-drop-pane').empty();
		    
		    $('#edit-add-contact-company-drop-pane').append(edit_company_pane_template(tempCompany));
		    
		    $('#cancel_edit_company').click(function(){
			    $('#edit-add-contact-company-drop-pane').animate({
			        height:0
			    }, 500);
		    	$('#confirmaddbuildingcontact').removeAttr('disabled');
		    	$('#canceladdbuildingcontact').removeAttr('disabled');
		    });
		    
		    $('#save_edit_company').click(function(){
		    	$('#addContactModal .alert-success').remove();
	    		$('#addContactModal .alert-error').remove();
	    		//var wasnew = contact.get('contact_id')=='new'?true:false;
	    		
	    		var companyObj = {
	    			company_id : $('#company_ajax_company_id').attr('company_id')=='new'?'new':parseInt($('#company_ajax_company_id').attr('company_id'))
	    			,company_name : $('#company_ajax_company_name').val()
	    			,phone_number : $('#company_ajax_phone_number').val()
	    			,street_number_begin : $('#company_ajax_street_number_begin').val()
	    			,street_number_end : $('#company_ajax_street_number_end').val()
	    			,street_name : $('#company_ajax_street_name').val()
	    			,city : $('#company_ajax_city').val()
	    			,province : $('#company_ajax_province').val()
	    			,postal_code : $('#company_ajax_postal_code').val()
	    			,modified : true
	    		};
	    		
	    		
	    		
	    		
	    		
	    		
	    		socket.get('/companies/updatecompany', {company:companyObj, contacts : [], notes: []},function(response){
	    			if(typeof(response.success)!='undefined'){
	    				if(companyObj.company_id=='new'){
	    					companyObj.company_id = response.company_id;
	    				}
		                $('#addContactModal .modal-body').before('<div class="alert alert-success fade in" style="margin-bottom:0px; border-radius:0px;">'+
		                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
		                        '<strong>'+'Success'+':&nbsp</strong>'+'Company Details have been Updated'+'</div>');
		                        
		                $('#edit-add-contact-company-drop-pane').animate({
					        height:0
					    }, 500);
				    	$('#confirmaddbuildingcontact').removeAttr('disabled');
				    	$('#canceladdbuildingcontact').removeAttr('disabled');  
				    	
				    	if(newCompany.company_id == companyObj.company_id){
					    	newCompany = companyObj;
					    	
					    	$('#edit-company-details-section').empty();
					    	
					    	
	        				$('#edit-company-details-section').append(edit_company_details_section_template(newCompany));
	        				$('input.companiescombobox').val(newCompany.company_name);
	        				bindEditCompanyDetailsMappingButton();     
        				} 
		                        
                    }else{
                    	$('#addContactModal #edit-add-contact-company-drop-pane').prepend('<div class="alert alert-error" style="border-radius:0px;">'+
                        '<button type="button" class="close" data-dismiss="alert">×</button>'+
                        ''+response.error+'</div>');
                    
                    }
                });
		                
		    });
        }
        
        function bindEditCompanyDetailsMappingButton(){
        	$('.edit-company-details-mapping-button').click(function(){
        		doEditCompanyDetails(newCompany);
        	});
        }
	    	
	    function updateContactsCombobox(blocklookup){
    		clearTimeout(contactssearchtimer);
    		contactssearchtimer = setTimeout(function(){
    			socket.get('/buildings/getcontactsbycompanyid',{search:curcontactsval,companyId:$('.constrain-btn i').hasClass('icon-lock')?(newCompany==null?null:newCompany.company_id):null},function(res){
    				var tempval = $('input.contactscombobox').val();
        			$('select.contactscombobox').empty();
		        	for(var i=0;i<res.length;i++){
		        		$('select.contactscombobox').append('<option value="'+res[i].contact_name+'">'+res[i].contact_name+'</option');
		        		$('select.contactscombobox option:last').data({
			        		contact_id:res[i].contact_id
			        		,contact_name:res[i].contact_name
			        		,phone_number:res[i].phone_number 
		        			,email:res[i].email
		        			,street_number_begin:res[i].street_number_begin
		        			,street_number_end:res[i].street_number_end
		        			,street_name:res[i].street_name
		        			,postal_code:res[i].postal_code
		        			,city:res[i].city
		        			,province:res[i].province
		        		});
		        	}
		        	
        			contactscombobox.data('combobox').refresh(); 
        			$('input.contactscombobox').val(tempval);
        			if(typeof(blocklookup)=='undefined'||!blocklookup){
        				contactscombobox.data('combobox').lookup();
        			}
    			});
    		},100);
	    }
	    	
	    function updateCompaniesCombobox(blocklookup){
	    	clearTimeout(contactssearchtimer);
    		contactssearchtimer = setTimeout(function(){		        	
    			socket.get('/buildings/getcompaniesbycontactid',{search:curcompaniesval,contactId:$('.constrain-btn i').hasClass('icon-lock')?(newContact==null?null:newContact.contact_id):null},function(res){
        			var tempval = $('input.companiescombobox').val();
        			$('select.companiescombobox').empty();
		        	for(var i=0;i<res.length;i++){
		        		
		        		$('select.companiescombobox').append('<option value="'+res[i].company_name+'">'+res[i].company_name+'</option');
		        		$('select.companiescombobox option:last').data({
			        		company_id:res[i].company_id
			        		,company_name:res[i].company_name
			        		,phone_number:res[i].phone_number 
		        			,street_number_begin:res[i].street_number_begin
		        			,street_number_end:res[i].street_number_end
		        			,street_name:res[i].street_name
		        			,postal_code:res[i].postal_code
		        			,city:res[i].city
		        			,province:res[i].province
		        		});
		        		
		        		/*
			        		'<option mapping_street_number_begin="'+res[i].street_number_begin+'" mapping_street_number_end="'+ res[i].street_number_end+'"'
			        		+ ' mapping_street_name="'+res[i].street_name+'"'
			        		+ ' mapping_city="'+res[i].city+'"' + ' mapping_province="'+res[i].province+'"'
			        		+ ' mapping_postal_code="'+res[i].postal_code + '"'
			        		+' company_id="'+res[i].company_id+'" value="'+res[i].company_name+'">'+res[i].company_name+'</option');*/
		        	}
        			companiescombobox.data('combobox').refresh(); 
        			$('input.companiescombobox').val(tempval);
        			if(typeof(blocklookup)=='undefined'||!blocklookup){
        				companiescombobox.data('combobox').lookup();
        			
        			}
    			});
			},100);
		}
	    	
	    	
	    	
	    ///////////////////////////
	    /// BUILDING NOTES ////////
	    ///////////////////////////
	    	
		var BuildingNotesModel = Backbone.Model.extend({
	        urlRoot: '/buildings/note'
	    });
	
	    var BuildingNotesCollection = Backbone.Collection.extend({
	        sailsCollection: "",
	        socket: null,
	        sync: function(method, model, options){
	            var where = {};
	            if (options.where) {
	                where = {
	                    where: options.where
	                }
	            }
	            if(options.id){
	            	where.id = options.id;
	        	}
	            if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request("/" + this.sailsCollection+collectionid, where, _.bind(function(notes){
	                    if(notes.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.set(notes);
	                    buildingnotesView = new BuildingNotesBackboneView({collection: buildingnotes});
	                }, this));
	            }
	        }
	    });
	
	    var BuildingNotesCollection = BuildingNotesCollection.extend({
	        sailsCollection: 'buildings/notes',
	        model: BuildingNotesModel
	    });
	
	    var buildingnotes = new BuildingNotesCollection();
	    //buildingnotes.fetch({id:11});
	
	
	
	
	
	    ///////////////////////////
	    /// BuildingNotes View ////
	    ///////////////////////////
	
	    var BuildingNotesBackboneView = Backbone.View.extend({
	        el: '#building-notes-wrapper',
	        events: {
	            //"change select.securityselect"   : "changeSecurity",
	            "click a.delete-note"   : "deleteNote",
	            "click a.edit-note" : "editNote"
	
	        },
	        editNote:function(event){
	        	var self = this;
	        	var blurTimeout;
	        	var trackdetailstyping = '';
	        	var $notelement = $(event.target).parents('.building-note');
	        	var noteid= $notelement.attr('noteid');
	        	$('.no-notes-remove').remove();
	        	$notelement.find('.note-editable').replaceWith('<div class="row-fluid"><div class="row-fluid"><textarea maxlength=512" class="note-textarea-editable">'+this.collection.get(noteid).get('note').replace(/<br\s*[\/]?>/gi, "\n")+'</textarea></div><div class="row-fluid"><button class="save-note-textarea-editable btn btn-primary">Set</button><button class="cancel-note-textarea-editable btn ">Cancel</button></div></div>');
	        	
	    		$notelement.find('.cancel-note-textarea-editable').mousedown(function(){
	    			blockNoteSave = true;
	    		});
	    		
	    		$notelement.find('.note-textarea-editable').unbind();
	        	$notelement.find('.note-textarea-editable').blur(function(){
		        	blurTimeout = setTimeout(function(){
		        		if(!blockNoteSave&&trackdetailstyping!=''){
				        	self.collection.get(noteid).set('note', trackdetailstyping.replace(/(?:\r\n|\r|\n)/g, '<br />'));//$notelement.find('.note-textarea-editable').val());
			        		self.collection.get(noteid).set('modified', true);
			        		building.set('dosync',true);
			        		setChangesPending();
		        		}else{
		        			blockNoteSave = false;
		        			if($notelement.find('.note-textarea-editable').html()==''&&noteid.indexOf('new')!=-1){
		        				self.collection.remove(self.collection.get(noteid));
		        			}
		        		}
		        		self.render();
		        	},200);
	        	});
	        	$notelement.find('.note-textarea-editable').keyup(function(){
	        		trackdetailstyping = $notelement.find('.note-textarea-editable').val();
	        	});
	        	
	        	trackdetailstyping = $notelement.find('.note-textarea-editable').val();
	        	$notelement.find('.note-textarea-editable').focus();
		        	
	    		//},100);
	        	
	        },
	        deleteNote:function(event){
	        
	        
	        	var $notelement = $(event.target).parents('.building-note');
	        	var noteid= $notelement.attr('noteid');
	        	if($notelement.attr('noteid').indexOf("new")>-1){
	        		this.collection.remove(noteid);
	        		this.render();
	        	}else{
	        		this.collection.get(noteid).set('deleted',true);
	        		this.render();
	        	}
	        	building.set('dosync',true);
        		setChangesPending();
	        },
	        initialize: function () {
	            this.render();
	        },
	        template: _.template($('#building-notes-template').html()),
	        render: function () {
	            this.$el.html("");
	            
	        	if(building.get('building_id')!='new'){
	        		//$('#building-sales').css('display','')
	        	}
	            var tcollection = this.collection.sortBy(function(notes){
	                return notes.get("timestamp")==null?0:notes.get("timestamp").toString().toUpperCase();
	            });
	
	            for(var i=0; i<tcollection.length; i++)
	            {
	                if(typeof(tcollection[i].get('deleted'))=='undefined'){
	                	tcollection[i].set('note_datetime',new Date(tcollection[i].get('timestamp')).toDateString());
	                	this.$el.prepend(this.template(tcollection[i].toJSON()));
	            	}
	            }
	            if(tcollection.length==0){
	            	this.$el.append('<div class="no-notes-remove">No Notes Found.</div>');
	            }
	            $('#save_note_admin').unbind();
	            $('#save_note_admin').click(function(){
		    		saveBuilding();
				});
	        }
	    });
	    var buildingnotesView;
	    
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    /////////////////////////////////////////
	    ////// BUiLDING CONTACTS ////////////////
	    /////////////////////////////////////////
	    
	    
	    
	    var BuildingContactsModel = Backbone.Model.extend({
	        urlRoot: '///'
	    });
	
	    var BuildingContactsCollection = Backbone.Collection.extend({
	        sailsCollection: "",
	        socket: null,
	        sync: function(method, model, options){
	            var where = options;
	            if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request("/" + this.sailsCollection+collectionid, where, _.bind(function(contacts){
	                    if(contacts.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.set(contacts[0]);
	                    if(buildingcontactsView==null)
	                    {
	                    	buildingcontactsView = new BuildingContactsBackboneView({collection: buildingcontacts});
                    	}
                    	else
                    	{
                    		buildingcontactsView.render();
                    	}
	                }, this));
	            }
	        }
	    });
	
	    var BuildingContactsCollection = BuildingContactsCollection.extend({
	        sailsCollection: 'buildings/getcontacts',
	        model: BuildingContactsModel
	    });
	
	    var buildingcontacts = new BuildingContactsCollection();
	
	
	
	
	
	    //////////////////////////////
	    /// BuildingContacts View ////
	    //////////////////////////////
	
	    var BuildingContactsBackboneView = Backbone.View.extend({
	        elowners: '#building-owners-wrapper',
	        elsellers: '#building-sellers-wrapper',
	        elagents: '#building-agents-wrapper',
	        elpropertymanagers: '#building-property-manager-wrapper',
	        events: {
	            //"change select.securityselect"   : "changeSecurity",
	            //"click a.remove-building-contact" : "deleteContact"
	        },
	        initialize: function () {
	            this.render();
	        },
	        template: _.template($('#building-contact-template').html()),
	        render: function () {
	            $(this.elowners).html("");
	            $(this.elsellers).html("");
	            $(this.elagents).html("");
	            $(this.elpropertymanagers).html("");
	            
	            var tcollection = this.collection.sortBy(function(contacts){
	                return contacts.get("contact_name")!=null?contacts.get("contact_name").toString().toUpperCase():0;
	            });
	
	            for(var i=0; i<tcollection.length; i++)
	            {
	            	tcollection[i].set('sale_id',building.get('sale_id'));
	               if(tcollection[i].get('contact_type')=='owner'){
	                	$(this.elowners).append(this.template(tcollection[i].toJSON()));
	            	}else if(tcollection[i].get('contact_type')=='seller'){
	                   $(this.elsellers).append(this.template(tcollection[i].toJSON()));
	                }else if(tcollection[i].get('contact_type')=='agent'){
	                   $(this.elagents).append(this.template(tcollection[i].toJSON()));
	                }
	            }
	            
	            $('a.remove-building-contact').unbind();
	            
	            $('a.remove-building-contact').click(function(){
	            	var newidtemp = '';
	            	var idstring = $(this).parents('.building-contact-wrapper').attr('contact_mapping_id');	            	
		            var modtemp  = buildingcontacts.findWhere({'mapping_id':idstring.indexOf('new')>-1?idstring:parseInt(idstring)});
		            if(idstring.indexOf('new')>-1){
		                buildingcontacts.remove(modtemp);
		            }else{
		                modtemp.set({dodelete:1});
		            }
	                buildingcontactsView.render();
		            setChangesPending();
            	});
            	$('a.edit-building-contact').unbind();
	            
	            $('a.edit-building-contact').click(function(){
	            	/*var newidtemp = '';
	            	var idstring = $(this).parents('.building-contact-wrapper').attr('contact_mapping_id');	            	
		            var modtemp  = buildingcontacts.findWhere({'mapping_id':idstring.indexOf('new')>-1?idstring:parseInt(idstring)});
		            if(idstring.indexOf('new')>-1){
		                buildingcontacts.remove(modtemp);
		            }else{
		                modtemp.set({dodelete:1});
		            }
	                buildingcontactsView.render();
		
		            setChangesPending();*/
		            //alert('clicking edit');
		            $('#confirmaddbuildingcontact').html('Update');
		            
		            
		            $('#addContactModal div.alert-error').remove();
			        $('.create-contact-message').html('To create a new '+$(this).attr('contact_type')+', select the contact and/or company associated with this building.');
			        $('#addContactModal').modal('show');
			        $('#addContactModal #myModalLabelAdd').html('Edit '+capitaliseFirstLetter($(this).attr('contact_type')));
			        editMappingId = $(this).attr('contact_mapping_id');
			        if(!(editMappingId.indexOf('new')>-1)){
			        	editMappingId = parseInt(editMappingId);
			        }
			        
			        bindAddBuildingContactModal(buildingcontacts.where({mapping_id:editMappingId})[0].toJSON());
			        $('#confirmaddbuildingcontact').attr('contact_type',$(this).attr('contact_type'));
	            	
            	});
            	
            	setChangesPending();
	        }
	    });
	    var buildingcontactsView;	
	    	
    	
    	
    	
    	/////////////////////////////////////////
	    ////// BUILDING SALES    ////////////////
	    /////////////////////////////////////////
	    
	    
	    
	    var BuildingSalesModel = Backbone.Model.extend({
	        urlRoot: '///'
	    });
	
	    var BuildingSalesCollection = Backbone.Collection.extend({
	        sailsCollection: "",
	        socket: null,
	        sync: function(method, model, options){
	            var where = {};
	            if (options.where) {
	                where = {
	                    where: options.where
	                }
	            }
	            if(options.id){
	            	where.id = options.id;
	        	}
	            if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
	                this.socket = socket;
	            	var collectionid = where.id?'/'+where.id:'';
	                this.socket.request("/" + this.sailsCollection+collectionid, where, _.bind(function(sales){
	                    if(sales.error != undefined){  // USER NO LONGER LOGGED IN!!!!!
	                        location.reload(); // Will boot back to login screen
	                    }
	                    this.set(sales[0]);
	                    if(buildingsalesView==null)
	                    {
	                    	buildingsalesView = new BuildingSalesBackboneView({collection: buildingsales});
	                    
	                    }else{
	                    	buildingsalesView.render();
	                    }

	                }, this));
	            }
	        }
	    });
	
	    var BuildingSalesCollection = BuildingSalesCollection.extend({
	        sailsCollection: 'buildings/getsales',
	        model: BuildingSalesModel
	    });
	
	    var buildingsales = new BuildingSalesCollection();
	
	
	
	
	
	    //////////////////////////////
	    /// BuildingSales View ////
	    //////////////////////////////
	
	    var BuildingSalesBackboneView = Backbone.View.extend({
	        el: '#building-sales-table',
	        events: {
	            //"change select.securityselect"   : "changeSecurity",
	            "click div.building-sale-wrapper" : "selectedSale"
	
	        },
	        selectedSale : function(event){
	        	if(isChangesPending()){
					if(!confirm(unsavedMessage)){
						if($('body').width()>979){
							$('.main-content').animate({
						        scrollTop: $('.main-content').scrollTop() + $('.edit-item-section').position().top
						    }, 500);
						}else{
							$('html, body').animate({
						        scrollTop: $(".edit-item-section").offset().top
						    }, 500);
						}
						return;
					}
				}
	        
	        	$('.building-sale-wrapper').removeClass('table-row-selected');
	        	$(event.target).parents('.building-sale-wrapper').addClass('table-row-selected');
	        	
				building.fetch({id:parseInt($(event.target).parents('.building-sale-wrapper').attr('building_id'))
				,sale_id:parseInt($(event.target).parents('.building-sale-wrapper').attr('sale_id'))}); // fetches the building (with the attached sale info)
	        	
	        },
	        initialize: function () {
	            this.render();
	        },
	        template: _.template($('#building-sale-template').html()),
	        render: function () {
	        	$(this.el).html('');
	        	
	        	if(building.get('building_id')!='new'){
	        		$('#building-sales').css('display','')
	        	}
	        	
	        	var tcollection = this.collection.sortBy(function(sales){
	                return sales.get("sale_date")==null?null:sales.get("sale_date").toString().toUpperCase();
	            });
	            for(var i=0; i<tcollection.length; i++)
	            {
	            	if(typeof(building.get('sale_id'))!='undefined'&&parseInt(building.get('sale_id'))==tcollection[i].get('sale_id')){
	            		tcollection[i].set('selected',true);
						$('#delete_building').css('display','none')
	            	}
	            	tcollection[i].set('sale_datestring',tcollection[i].get('sale_date')==null?null:(new Date(tcollection[i].get('sale_date')).toDateString()));
	            	tcollection[i].set('formatted_sale_price','$'+commaSeparateNumber(tcollection[i].get('sale_price')));
                	$(this.el).prepend(this.template(tcollection[i].toJSON()));
	            }
	            
	            
	            $('#sales_title > i.icon-minus-sign').removeClass('icon-minus-sign').addClass('icon-plus-sign'); // resets the sign
	            $('#sales_title').unbind();
		        $('#delete_sale').unbind();
		        $('#delete_sale').click(function(){
		            $('#myModalLabeldeleteSale').html('Delete Sale');
		            $('#deleteSaleModal > div.modal-body').html('<p>Are you sure you want to delete this sale<b>'+'</b>?</p>');
		            $('#deleteSaleModal').modal('show');
	        	});
		        
		        // If the sales wrapper has data
	        	if($('#building-sales-table').html()!=''){
	        		$('#sales_title > i.icon-plus-sign').css('display','');
	        		$('#sales_title').css('cursor','pointer');
			        $('#sales_title').click(function(){
			        	if($('#building-sales-wrapper').css('display')=='none'){  //currently empty
			        		$('#sales_title > i.icon-plus-sign').removeClass('icon-plus-sign').addClass('icon-minus-sign');
			        	}else{  // currently shown
			        		$('#sales_title > i.icon-minus-sign').removeClass('icon-minus-sign').addClass('icon-plus-sign');
			        	}
			        	$('#building-sales-wrapper').slideToggle('medium',function(){
			        		if(typeof(building.get('sale_id'))!='undefined'&&$('#building-sales-wrapper').css('display')=='none'){ // sale mode
			        			//alert('YOU ARE LEAVING SALE MODE - youre guna lose your changes');
			        			$('#delete_building').css('display','');
			        			building.fetch({id:parseInt(building.get('building_id'))});
			        		}
			        	});
			        });
	        	}else{
	        		$('#sales_title > i.icon-plus-sign').css('display','none');
	        		$('#sales_title').css('cursor','default');
	        	}
	        	if(typeof(building.get('sale_id'))!='undefined')
	        	{
	        		$('#delete_sale').parent().css('display','');
	        		$('#create_sale').parent().css('display','none');
	        		$('#sales_title > i.icon-plus-sign').removeClass('icon-plus-sign').addClass('icon-minus-sign');
	        		if($('#building-sales-wrapper').css('display')=='none'){
	        			$('#sales_title').click();
	        		}
	        		
	        	}else{
	        		$('#delete_sale').parent().css('display','none');
	        		$('#create_sale').parent().css('display','');
	        		if(leaveSalesExpanded){
	        			leaveSalesExpanded=false;
	        			if($('#building-sales-table').html()!=''){
	        				$('#sales_title > i.icon-plus-sign').removeClass('icon-plus-sign').addClass('icon-minus-sign');
	        			}else{
	        				$('#building-sales-wrapper').css('display','none');
	        			}
	        		}else{
			       		$('#building-sales-wrapper').css('display','none');
		       		}
	        	}
		        
		        
	            
	        	/*
	            $(this.elowners).html("");
	            $(this.elsellers).html("");
	            
	            var tcollection = this.collection.sortBy(function(sales){
	                return sales.get("sale_name").toString().toUpperCase();
	            });
	
	            for(var i=0; i<tcollection.length; i++)
	            {
	               if(tcollection[i].get('sale_type')=='owner'){
	                	$(this.elowners).append(this.template(tcollection[i].toJSON()));
	            	}else if(tcollection[i].get('sale_type')=='seller'){
	                   $(this.elsellers).append(this.template(tcollection[i].toJSON()));
	                }
	            }
	            
	            $('a.remove-building-sale').unbind();
	            
	            $('a.remove-building-sale').click(function(){
	            	var newidtemp = '';
	            	var idstring = $(this).parents('.building-sale-wrapper').attr('sale_mapping_id');	            	
		            var modtemp  = buildingsales.get(idstring);
		            if(idstring.indexOf('new')>-1){
		                buildingsales.remove(modtemp);
		            }else{
		                modtemp.set({dodelete:1});
		            }
	                buildingsalesView.render();
		
		            setChangesPending();
	            	
	            	
            	});
            	setChangesPending();*/
	        }
	    });
	    var buildingsalesView;	
    	
     	$('#sale_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999999999', mDec: '2',aSep: ',',wEmpty: 'zero'});
        $('#new_unit_price').autoNumeric('init',{aSign: '$', vMin: '0', vMax: '99999999999', mDec: '2',aSep: ',',wEmpty: 'zero'});
        $('#new_unit_price_manual_radio').click(function(){
        	$('#new_unit_price').removeAttr('disabled');
        });
        
        $('#new_unit_price_calculated_radio').click(function(){
        	$('#new_unit_price').attr('disabled','disabled');
        });
    });
</script>
