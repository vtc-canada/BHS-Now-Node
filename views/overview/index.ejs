<script type="text/template" id="conveyor_straight">
	<div class="hmi-element {{if(!msieversion()||msieversion()>8){ }}borders{{ }else{ }}ie-element-border{{ } }}" tagname="{{=tagname}}" top="{{=top+offsetTop}}" left="{{=left+offsetLeft}}" rotation="{{=rotation}}" style="background-color:lightgrey; position:absolute; width:{{=length*elementScale}}%; height:{{=beltWidth*elementScale}}%;">
		<div class="conveyor_straight_wall1"></div>
		<div class="conveyor_straight_wall2"></div>		
		<div class="conveyor_straight_wall3"></div>
		<div class="conveyor_straight_wall4"></div>
	</div>
</script>
<script type="text/template" id="conveyor_turn">
	<div class="hmi-element conveyor-turn{{if(!msieversion()||msieversion()>8){ }} borders{{ } }}" tagname="{{=tagname}}" top="{{=top+offsetTop}}" left="{{=left+offsetLeft}}" rotation="{{=rotation}}" style="background-color:lightgrey; position:absolute; height:{{=beltWidth*elementScale*2}}%;">
		<div class="{{if(msieversion()&&msieversion()<=8){ }}{{=rotation==0?'iebotleft':''}}{{=rotation==90?'ietopleft':''}}{{=rotation==180?'iebotright':''}}{{=rotation==270?'ietopright':''}}{{ }else{ }}conveyor_turn_wall{{ } }}"></div>
	</div>
</script>

<script type="text/template" id="alarm_legend_row">

	<div class="alarm-legend-row-wrapper">
		<div class="legend-color-box" style="background-color:#{{=background_color}};"></div>
		<div class="legend-color-text">{{=name}}</div>
	</div>
</script>

<script type="text/template" id="alarm-template">

    {{ var bordercolor = 'rgb(192,192,192)';}}
    <div class="row-fluid section-config-wrapper" tag_ID="{{= tag_ID}}" style="background-color:#{{=background_color}}; color:#{{=text_color}}; border-color:{{=bordercolor}};">
        <div class="span3">
            <label class="mobile-label"><%= i18n(req,'Date') %>:</label>
            <label class="mobile-element">{{= toLocaleDateTimeString(timestamp) }}
            </label>
        </div>
        <div class="span2">
            <label class="mobile-label"><%= i18n(req,'Equipment') %>:</label>
            <label class="mobile-element">{{= equipment }}
            </label>
        </div>
        <div class="span2">
            <label class="mobile-label"><%= i18n(req,'Device') %>:</label>
            <label class="mobile-element">{{= device }}
            </label>
        </div>
        <div class="span5">
            <label class="mobile-label"><%= i18n(req,'Alarm Type') %>:</label>
            <label class="mobile-element">{{= text }}
            </label>
        </div>
    </div>
</script>
    

<div class="row-fluid" style="margin-top:19px;">
    <div class="span10 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;">BHS Overview</span></div>
        <div class="row-fluid" id="iframediv">
            <div class="row-fluid" style="position:relative;">
                <div id="overview" class="row-fluid" style="position:relative;">
                    
                </div>
                
                <div id="alarm_legend" class="alarm-legend">
                    
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row-fluid" style="margin-top:19px;">
    <div class="span7 offset1 page-controls-wrapper">
        <div class="row-fluid" id="reportheader"><span style="padding-left:10px;"><%= i18n(req,'Alarms') %></span></div>
        <div class="row-fluid" id="iframediv">
            <div class="row-fluid">
                <div  class="row-fluid sort-destination-plan-titles" style="margin-bottom:0px;">
                    <div class="row-fluid alarm-header">
                        <div class="span3 titlerow">
                            <%= i18n(req,'Time') %>
                        </div>
                        <div class="span2">
                            <%= i18n(req,'Equipment') %>
                        </div>
                        <div class="span2">
                            <%= i18n(req,'Device') %>
                        </div>
                        <div class="span5">
                            <%= i18n(req,'Alarm Type') %>
                        </div>
                    </div>
                </div>
                <div class="row-fluid" id="alarmsdiv">

                </div>
            </div>
        </div>
    </div>
</div>
   
    
    
    <script type="text/javascript">
    
    var alarm_legend = <%- JSON.stringify(alarm_legend)%>;
    var aspectRatio = 16/9;
    var offsetLeft = 10;
    var offsetTop = 0;
    var elementScale = 5; //(belth width as percent of screen width)
    var beltWidth = 2; // Depends on elementScale
    $(document).ready(function(){
    	socket.on('connect',initialize);
    });
    
    
    function initialize(){
    	//alert('ready');
    	var overview = $('#overview');
    
    	var conveyor_straight = _.template($('#conveyor_straight').html());	
    	var conveyor_turn = _.template($('#conveyor_turn').html());	
    	var alarm_legend_row = _.template($('#alarm_legend_row').html());
    	
    	
    	overview.append(conveyor_turn({tagname:'G_OB1_07_STATUS', rotation:0, left:40.0, top:0}));
    	overview.append(conveyor_turn({tagname:'G_OB1_02_STATUS', rotation:90, left:40.0, top:78}));
    	overview.append(conveyor_straight({tagname:'G_OB1_08_STATUS',length:8, rotation:0, left:0, top:0}));
    	overview.append(conveyor_straight({tagname:'G_OB1_06_STATUS',length:2.2, rotation:90, left:43.1, top:25}));
    	overview.append(conveyor_straight({tagname:'tagname',length:2.2, rotation:90, left:43.1, top:44.2}));
    	overview.append(conveyor_straight({tagname:'G_OB1_03_STATUS',length:2.2, rotation:90, left:43.1, top:63.4}));
    	overview.append(conveyor_straight({tagname:'G_OB1_01_STATUS',length:8, rotation:0, left:0, top:88.4}));
    	
    	for(var i=0;i<alarm_legend.length;i++){
    		$('#alarm_legend').append(alarm_legend_row(alarm_legend[i]));
    	}
    	
    	/// Initializes all the positions, rotations, corners.
    	setTimeout(function(){
	    	$('.hmi-element').each(function(){
	    		$(this).css('transform','rotate('+$(this).attr('rotation')+'deg)');
	    		$(this).css('top',+$(this).attr('top')+'%');
	    		$(this).css('left',+$(this).attr('left')+'%');
	    		if($(this).hasClass('conveyor-turn')){
	    			$(this).width($(this).height());
	    			if(!msieversion()||msieversion()>8){
		    			$(this).find('.conveyor_turn_wall').width(($(this).width()/2)+2);
		    			$(this).find('.conveyor_turn_wall').height(($(this).height()/2)+2);
	    			}
	    		}
	    	});
    	},0);
    	
    	
    	// Subscribes to overview screen
    	socket.get('/overview/joinroom');
    	// Subscribes to the alarms room to be broadcasted to for updates
        socket.get("/dashboard/joinAlarms");
        
    	socket.on('overview',function(message){
    		$('div[tagname]').unbind();
    		
    		$.each(message,function(key,message){
    			setBackground($('div[tagname='+message.tag_name+']'),'#'+message.color_code);
    			if(message.is_flashing==1){
	    			setTimeout(function(){
	    				setBackground($('div[tagname='+message.tag_name+']'),'#'+message.flash_color_code);
	    			},500);
    			}
    			
    			/*if(message.value=='on'){
    				setBackground($('#'+message.id),'#ff4400');
    			}else if(message.value=='off'){
    				setBackground($('#'+message.id),'#22ee11');
    			
    			}*/
    		});
    	});
    	
    	
    	
    	//////////////////////
        // AlarmsModel      //
        //////////////////////
        // Collection to get the alarms

        var AlarmsModel = Backbone.Model.extend({
            urlRoot: ''    //not used really
        });

        var SailsAlarmsCollection = Backbone.Collection.extend({
            sailsCollection: "",
            socket: null,
            sync: function(method, model, options){
                if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
                    this.socket = socket;

                    this.socket.get(this.sailsCollection, options, _.bind(function(alarms){
                        this.set(alarms);
                        alarmView.render();
                    }, this));

                    this.socket.on("alarms", _.bind(function(alarms){
                        this.set(alarms);
                        alarmView.render();
                    }, this));

                }
            }
        });

        var AlarmsCollection = SailsAlarmsCollection.extend({
            sailsCollection: '/dashboard/getAlarms',
            model: AlarmsModel
        });

        alarms = new AlarmsCollection();

        alarms.fetch();    // Gets the alarms

        var AlarmsView = Backbone.View.extend({
            el: '#alarmsdiv',
            initialize: function () {
            },
            template: _.template($('#alarm-template').html()),
            render: function () {
                this.$el.html("");
                var tcollection = this.collection.sortBy(function(message){
                    return message.get("severity");
                });
                for(var i=0; i<tcollection.length; i++)
                {
                    this.$el.append(this.template(tcollection[i].toJSON()));
                }
            }
        });

        var alarmView = new AlarmsView({collection: alarms});
    	
    	
    	
    	
    	function setBackground($element,color){
    		$element.css('background-color',color);
    	
    	}
    	
    	$(window).resize(function(){
    		$('#overview').height($('#overview').width()/aspectRatio);
    		$('.conveyor-turn').each(function(){
    			$(this).width($(this).height());
    			if(!msieversion()||msieversion()>8){
	    			$(this).find('.conveyor_turn_wall').width(($(this).width()/2)+2);
	    			$(this).find('.conveyor_turn_wall').height(($(this).height()/2)+2);
    			}
    		});
    	});
    	$(window).resize();
    }
    
    
    </script>
    